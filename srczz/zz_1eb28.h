#ifdef ZZ_INCLUDE_CODE
ZZ_1EB28:
	SP -= 48;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 36,S1); //+ 0x24
	V0 = EMU_ReadU32(S0 + 296); //+ 0x128
	V1 = V0 - 1;
	V0 = V1 < 7;
	if (!V0)
	{
		S1 = S0 + 48;
		ZZ_CLOCKCYCLES(11,0x8001EE40);
		goto ZZ_1EB28_318;
	}
	S1 = S0 + 48;
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1272); //+ 0x4F8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(18);
	ZZ_JUMPREGISTER(0x8001EE8C,ZZ_1EB28_364);
	ZZ_JUMPREGISTER(0x8001EDE8,ZZ_1EB28_2C0);
	ZZ_JUMPREGISTER(0x8001EC64,ZZ_1EB28_13C);
	ZZ_JUMPREGISTER(0x8001EBE0,ZZ_1EB28_B8);
	ZZ_JUMPREGISTER(0x8001ED54,ZZ_1EB28_22C);
	ZZ_JUMPREGISTER(0x8001EB70,ZZ_1EB28_48);
	ZZ_JUMPREGISTER(0x8001EB98,ZZ_1EB28_70);
	ZZ_JUMPREGISTER_END();
ZZ_1EB28_48:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 300); //+ 0x12C
	V0 = V0 - V1;
	V0 = V0 < 16;
	if (V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(8,0x8001EE90);
		goto ZZ_1EB28_368;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(10,0x8001EBCC);
	goto ZZ_1EB28_A4;
ZZ_1EB28_70:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 300); //+ 0x12C
	V0 = V0 - V1;
	V0 = V0 < 16;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001EBCC);
		goto ZZ_1EB28_A4;
	}
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	V0 &= 0x1;
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(13,0x8001EE90);
		goto ZZ_1EB28_368;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(13,0x8001EBCC);
ZZ_1EB28_A4:
	V0 = EMU_ReadU32(S0 + 204); //+ 0xCC
	EMU_Write32(S0 + 296,R0); //+ 0x128
	V0 |= 0x80;
	EMU_Write32(S0 + 204,V0); //+ 0xCC
	ZZ_CLOCKCYCLES(5,0x8001EE8C);
	goto ZZ_1EB28_364;
ZZ_1EB28_B8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 300); //+ 0x12C
	V0 = V0 - V1;
	V0 = V0 < 61;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001EC64);
		goto ZZ_1EB28_13C;
	}
	V1 = EMU_ReadU32(S0 + 40); //+ 0x28
	if (V1)
	{
		EMU_Write32(S0 + 296,R0); //+ 0x128
		ZZ_CLOCKCYCLES(12,0x8001EC18);
		goto ZZ_1EB28_F0;
	}
	EMU_Write32(S0 + 296,R0); //+ 0x128
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	ZZ_CLOCKCYCLES(14,0x8001EC18);
ZZ_1EB28_F0:
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001EC34);
		goto ZZ_1EB28_10C;
	}
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 840;
	ZZ_CLOCKCYCLES(7,0x8001EC40);
	goto ZZ_1EB28_118;
ZZ_1EB28_10C:
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 792;
	ZZ_CLOCKCYCLES(3,0x8001EC40);
ZZ_1EB28_118:
	V0 = EMU_ReadU16(V1 + 42); //+ 0x2A
	EMU_Write16(S0 + 90,V0); //+ 0x5A
	V0 = EMU_ReadU16(V1 + 44); //+ 0x2C
	EMU_Write16(S0 + 92,V0); //+ 0x5C
	V0 = EMU_ReadU16(V1 + 46); //+ 0x2E
	EMU_Write16(S0 + 94,V0); //+ 0x5E
	ZZ_CLOCKCYCLES(9,0x8001EC64);
ZZ_1EB28_13C:
	V1 = EMU_ReadU32(S0 + 296); //+ 0x128
	V0 = 0x3;
	if (V1 != V0)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(4,0x8001ED00);
		goto ZZ_1EB28_1D8;
	}
	V0 = 0x4;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 300); //+ 0x12C
	V0 = V0 - V1;
	V0 = V0 < 452;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001ECF8);
		goto ZZ_1EB28_1D0;
	}
	V1 = EMU_ReadU32(S0 + 40); //+ 0x28
	if (V1)
	{
		EMU_Write32(S0 + 296,R0); //+ 0x128
		ZZ_CLOCKCYCLES(16,0x8001ECAC);
		goto ZZ_1EB28_184;
	}
	EMU_Write32(S0 + 296,R0); //+ 0x128
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	ZZ_CLOCKCYCLES(18,0x8001ECAC);
ZZ_1EB28_184:
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001ECC8);
		goto ZZ_1EB28_1A0;
	}
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 840;
	ZZ_CLOCKCYCLES(7,0x8001ECD4);
	goto ZZ_1EB28_1AC;
ZZ_1EB28_1A0:
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 792;
	ZZ_CLOCKCYCLES(3,0x8001ECD4);
ZZ_1EB28_1AC:
	V0 = EMU_ReadU16(V1 + 42); //+ 0x2A
	EMU_Write16(S0 + 90,V0); //+ 0x5A
	V0 = EMU_ReadU16(V1 + 44); //+ 0x2C
	EMU_Write16(S0 + 92,V0); //+ 0x5C
	V0 = EMU_ReadU16(V1 + 46); //+ 0x2E
	EMU_Write16(S0 + 94,V0); //+ 0x5E
	ZZ_CLOCKCYCLES(9,0x8001ED54);
	goto ZZ_1EB28_22C;
ZZ_1EB28_1D0:
	V1 = EMU_ReadU32(S0 + 296); //+ 0x128
	V0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x8001ED00);
ZZ_1EB28_1D8:
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001ED54);
		goto ZZ_1EB28_22C;
	}
	V0 = EMU_ReadU32(S0 + 120); //+ 0x78
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001ED54);
		goto ZZ_1EB28_22C;
	}
	V0 = EMU_ReadU32(V0 + 32); //+ 0x20
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 != V0)
	{
		V0 = SP + 24;
		ZZ_CLOCKCYCLES(14,0x8001ED54);
		goto ZZ_1EB28_22C;
	}
	V0 = SP + 24;
	A0 = S0;
	A2 = 0xA00;
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 16,V0); //+ 0x10
	A1 = EMU_ReadU32(S0 + 120); //+ 0x78
	RA = 0x8001ED54; //ZZ_1EB28_22C
	A3 = 0x1;
	ZZ_CLOCKCYCLES(21,0x80024040);
	goto ZZ_24040;
ZZ_1EB28_22C:
	V1 = EMU_ReadU32(S0 + 296); //+ 0x128
	V0 = 0x5;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001EDE8);
		goto ZZ_1EB28_2C0;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 300); //+ 0x12C
	V0 = V0 - V1;
	V0 = V0 < 603;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001EDE8);
		goto ZZ_1EB28_2C0;
	}
	V1 = EMU_ReadU32(S0 + 40); //+ 0x28
	if (V1)
	{
		EMU_Write32(S0 + 296,R0); //+ 0x128
		ZZ_CLOCKCYCLES(16,0x8001ED9C);
		goto ZZ_1EB28_274;
	}
	EMU_Write32(S0 + 296,R0); //+ 0x128
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	ZZ_CLOCKCYCLES(18,0x8001ED9C);
ZZ_1EB28_274:
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001EDB8);
		goto ZZ_1EB28_290;
	}
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 840;
	ZZ_CLOCKCYCLES(7,0x8001EDC4);
	goto ZZ_1EB28_29C;
ZZ_1EB28_290:
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = V0 + 792;
	ZZ_CLOCKCYCLES(3,0x8001EDC4);
ZZ_1EB28_29C:
	V0 = EMU_ReadU16(V1 + 42); //+ 0x2A
	EMU_Write16(S0 + 90,V0); //+ 0x5A
	V0 = EMU_ReadU16(V1 + 44); //+ 0x2C
	EMU_Write16(S0 + 92,V0); //+ 0x5C
	V0 = EMU_ReadU16(V1 + 46); //+ 0x2E
	EMU_Write16(S0 + 94,V0); //+ 0x5E
	ZZ_CLOCKCYCLES(9,0x8001EDE8);
ZZ_1EB28_2C0:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31072); //+ 0x7960
	if ((int32_t)V1 >= 0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(5,0x8001EE00);
		goto ZZ_1EB28_2D8;
	}
	V0 = V1;
	V0 = V1 + 3;
	ZZ_CLOCKCYCLES(6,0x8001EE00);
ZZ_1EB28_2D8:
	V0 = (int32_t)V0 >> 2;
	V0 <<= 2;
	V0 = V1 - V0;
	V1 = V0 << 8;
	V0 = (int32_t)V1 < 256;
	if (V0)
	{
		V0 = 0x47F;
		ZZ_CLOCKCYCLES(7,0x8001EE24);
		goto ZZ_1EB28_2FC;
	}
	V0 = 0x47F;
	V0 = V0 - V1;
	ZZ_CLOCKCYCLES(9,0x8001EE28);
	goto ZZ_1EB28_300;
ZZ_1EB28_2FC:
	V0 = V1 + 127;
	ZZ_CLOCKCYCLES(1,0x8001EE28);
ZZ_1EB28_300:
	EMU_Write16(S1 + 42,V0); //+ 0x2A
	V0 = EMU_ReadU16(S1 + 42); //+ 0x2A
	EMU_Write16(S1 + 46,V0); //+ 0x2E
	EMU_Write16(S1 + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(6,0x8001EE8C);
	goto ZZ_1EB28_364;
ZZ_1EB28_318:
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S0 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(4,0x8001EE90);
		goto ZZ_1EB28_368;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S0 + 204); //+ 0xCC
	V1 = 0x4000000;
	V0 &= V1;
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(9,0x8001EE90);
		goto ZZ_1EB28_368;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S0 + 40); //+ 0x28
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	EMU_ReadLeft(V0 + 885,&V1); //+ 0x375
	EMU_ReadRight(V0 + 882,&V1); //+ 0x372
	A0 = EMU_ReadS16(V0 + 886); //+ 0x376
	EMU_WriteLeft(S0 + 93,V1); //+ 0x5D
	EMU_WriteRight(S0 + 90,V1); //+ 0x5A
	EMU_Write16(S0 + 94,A0); //+ 0x5E
	ZZ_CLOCKCYCLES(19,0x8001EE8C);
ZZ_1EB28_364:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001EE90);
ZZ_1EB28_368:
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001EB28,0x8001EB70,ZZ_1EB28);
ZZ_MARK_TARGET(0x8001EB70,0x8001EB98,ZZ_1EB28_48);
ZZ_MARK_TARGET(0x8001EB98,0x8001EBCC,ZZ_1EB28_70);
ZZ_MARK_TARGET(0x8001EBCC,0x8001EBE0,ZZ_1EB28_A4);
ZZ_MARK_TARGET(0x8001EBE0,0x8001EC18,ZZ_1EB28_B8);
ZZ_MARK_TARGET(0x8001EC18,0x8001EC34,ZZ_1EB28_F0);
ZZ_MARK_TARGET(0x8001EC34,0x8001EC40,ZZ_1EB28_10C);
ZZ_MARK_TARGET(0x8001EC40,0x8001EC64,ZZ_1EB28_118);
ZZ_MARK_TARGET(0x8001EC64,0x8001ECAC,ZZ_1EB28_13C);
ZZ_MARK_TARGET(0x8001ECAC,0x8001ECC8,ZZ_1EB28_184);
ZZ_MARK_TARGET(0x8001ECC8,0x8001ECD4,ZZ_1EB28_1A0);
ZZ_MARK_TARGET(0x8001ECD4,0x8001ECF8,ZZ_1EB28_1AC);
ZZ_MARK_TARGET(0x8001ECF8,0x8001ED00,ZZ_1EB28_1D0);
ZZ_MARK_TARGET(0x8001ED00,0x8001ED54,ZZ_1EB28_1D8);
ZZ_MARK_TARGET(0x8001ED54,0x8001ED9C,ZZ_1EB28_22C);
ZZ_MARK_TARGET(0x8001ED9C,0x8001EDB8,ZZ_1EB28_274);
ZZ_MARK_TARGET(0x8001EDB8,0x8001EDC4,ZZ_1EB28_290);
ZZ_MARK_TARGET(0x8001EDC4,0x8001EDE8,ZZ_1EB28_29C);
ZZ_MARK_TARGET(0x8001EDE8,0x8001EE00,ZZ_1EB28_2C0);
ZZ_MARK_TARGET(0x8001EE00,0x8001EE24,ZZ_1EB28_2D8);
ZZ_MARK_TARGET(0x8001EE24,0x8001EE28,ZZ_1EB28_2FC);
ZZ_MARK_TARGET(0x8001EE28,0x8001EE40,ZZ_1EB28_300);
ZZ_MARK_TARGET(0x8001EE40,0x8001EE8C,ZZ_1EB28_318);
ZZ_MARK_TARGET(0x8001EE8C,0x8001EE90,ZZ_1EB28_364);
ZZ_MARK_TARGET(0x8001EE90,0x8001EEA8,ZZ_1EB28_368);
