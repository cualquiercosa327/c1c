#ifdef ZZ_INCLUDE_CODE
ZZ_3BE40:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	V1 = 0x7F;
	V0 = S0 + 127;
	EMU_Write32(SP + 20,RA); //+ 0x14
	ZZ_CLOCKCYCLES(6,0x8003BE58);
ZZ_3BE40_18:
	EMU_Write8(V0,R0);
	V1 -= 1;
	if ((int32_t)V1 >= 0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(4,0x8003BE58);
		goto ZZ_3BE40_18;
	}
	V0 -= 1;
	A1 = 0x80060000;
	A1 += 6468;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6672); //+ 0x1A10
	A0 = EMU_ReadU32(A1);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6676); //+ 0x1A14
	V0 <<= 5;
	V0 |= A0;
	V1 <<= 10;
	V0 |= V1;
	EMU_Write32(S0,V0);
	V0 = EMU_ReadU32(A1);
	EMU_Write32(S0 + 4,V0); //+ 0x4
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6408); //+ 0x1908
	EMU_Write32(S0 + 8,V0); //+ 0x8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6412); //+ 0x190C
	EMU_Write32(S0 + 12,V0); //+ 0xC
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6416); //+ 0x1910
	EMU_Write32(S0 + 16,V0); //+ 0x10
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6420); //+ 0x1914
	EMU_Write32(S0 + 20,V0); //+ 0x14
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6424); //+ 0x1918
	EMU_Write32(S0 + 24,V0); //+ 0x18
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6536); //+ 0x1988
	A0 = S0;
	EMU_Write32(S0 + 28,V0); //+ 0x1C
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6572); //+ 0x19AC
	A1 = 0x80;
	EMU_Write32(S0 + 36,R0); //+ 0x24
	RA = 0x8003BF1C; //ZZ_3BE40_DC
	EMU_Write32(S0 + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(49,0x8003BFFC);
	goto ZZ_3BFFC;
ZZ_3BE40_DC:
	EMU_Write32(S0 + 124,V0); //+ 0x7C
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003BD88,ZZ_3B8B8_4D0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003BE40,0x8003BE58,ZZ_3BE40);
ZZ_MARK_TARGET(0x8003BE58,0x8003BF1C,ZZ_3BE40_18);
ZZ_MARK_TARGET(0x8003BF1C,0x8003BF34,ZZ_3BE40_DC);
