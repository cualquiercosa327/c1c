#ifdef ZZ_INCLUDE_CODE
ZZ_19DE0:
	SP -= 40;
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S1 = A0;
	EMU_Write32(SP + 32,RA); //+ 0x20
	if (S1)
	{
		EMU_Write32(SP + 24,S0); //+ 0x18
		ZZ_CLOCKCYCLES(6,0x80019E44);
		goto ZZ_19DE0_64;
	}
	EMU_Write32(SP + 24,S0); //+ 0x18
	A0 = R0;
	A1 = EMU_ReadU32(GP + 124); //+ 0x7C
	V1 = 0x80050000;
	V1 += 26552;
	ZZ_CLOCKCYCLES(10,0x80019E08);
ZZ_19DE0_28:
	V0 = A1 + 1;
	if ((int32_t)V0 >= 0)
	{
		V0 = (int32_t)V0 >> 3;
		ZZ_CLOCKCYCLES(3,0x80019E1C);
		goto ZZ_19DE0_3C;
	}
	V0 = (int32_t)V0 >> 3;
	V0 = A1 + 8;
	V0 = (int32_t)V0 >> 3;
	ZZ_CLOCKCYCLES(5,0x80019E1C);
ZZ_19DE0_3C:
	EMU_SMultiply(V0,A0);
	A0 += 1;
	V0 = LO;
	V0 = V0 - A1;
	EMU_Write32(V1,V0);
	V0 = (int32_t)A0 < 16;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(8,0x80019E08);
		goto ZZ_19DE0_28;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(10,0x80019F78);
	goto ZZ_19DE0_198;
ZZ_19DE0_64:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26296); //+ 0x66B8
	V0 = EMU_ReadU16(V0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80019F78);
		goto ZZ_19DE0_198;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25600); //+ 0x6400
	if (V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(12,0x80019EBC);
		goto ZZ_19DE0_DC;
	}
	A0 = R0;
	V1 = 0x80050000;
	V1 += 26552;
	A1 = EMU_ReadU32(GP + 124); //+ 0x7C
	A3 = EMU_ReadU32(GP + 120); //+ 0x78
	A2 = -A1;
	ZZ_CLOCKCYCLES(17,0x80019E88);
ZZ_19DE0_A8:
	V0 = EMU_ReadU32(V1);
	V0 += A3;
	EMU_Write32(V1,V0);
	V0 = (int32_t)A1 < (int32_t)V0;
	if (!V0)
	{
		A0 += 1;
		ZZ_CLOCKCYCLES(7,0x80019EAC);
		goto ZZ_19DE0_CC;
	}
	A0 += 1;
	V0 = A2 + 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(9,0x80019EAC);
ZZ_19DE0_CC:
	V0 = (int32_t)A0 < 16;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(3,0x80019E88);
		goto ZZ_19DE0_A8;
	}
	V1 += 4;
	A0 = R0;
	ZZ_CLOCKCYCLES(4,0x80019EBC);
ZZ_19DE0_DC:
	A1 = 0x1F800000;
	A1 |= 0x48;
	V1 = 0x80050000;
	V1 += 26552;
	ZZ_CLOCKCYCLES(4,0x80019ECC);
ZZ_19DE0_EC:
	V0 = EMU_ReadU32(V1);
	V1 += 4;
	A0 += 1;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x80019EE4);
		goto ZZ_19DE0_104;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x80019EE4);
ZZ_19DE0_104:
	EMU_Write32(A1,V0);
	V0 = (int32_t)A0 < 16;
	if (V0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(4,0x80019ECC);
		goto ZZ_19DE0_EC;
	}
	A1 += 4;
	S0 = 0x80050000;
	S0 += 30692;
	RA = 0x80019F04; //ZZ_19DE0_124
	A0 = S0;
	ZZ_CLOCKCYCLES(8,0x80042E9C);
	goto ZZ_42E9C;
ZZ_19DE0_124:
	RA = 0x80019F0C; //ZZ_19DE0_12C
	A0 = S0 + 272;
	ZZ_CLOCKCYCLES(2,0x80042ECC);
	goto ZZ_42ECC;
ZZ_19DE0_12C:
	A1 = 0x1F800000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A1 |= 0x100;
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A2 = 0x100;
	RA = 0x80019F2C; //ZZ_19DE0_14C
	A0 += 4;
	ZZ_CLOCKCYCLES(8,0x80033FBC);
	goto ZZ_33FBC;
ZZ_19DE0_14C:
	RA = 0x80019F34; //ZZ_19DE0_154
	ZZ_CLOCKCYCLES(2,0x80016E18);
	goto ZZ_16E18;
ZZ_19DE0_154:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 26296); //+ 0x66B8
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 30928); //+ 0x78D0
	A3 = 0x80050000;
	A3 = EMU_ReadU32(A3 + 31072); //+ 0x7960
	A1 = S1;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x80050000;
	V0 += 6004;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = A2 >> 31;
	A2 += V0;
	A2 = (int32_t)A2 >> 1;
	V0 = 0x800;
	RA = 0x80019F78; //ZZ_19DE0_198
	A2 = V0 - A2;
	ZZ_CLOCKCYCLES(17,0x80035E10);
	goto ZZ_35E10;
ZZ_19DE0_198:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8002EC58,ZZ_2EBB4_A4);
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80019DE0,0x80019E08,ZZ_19DE0);
ZZ_MARK_TARGET(0x80019E08,0x80019E1C,ZZ_19DE0_28);
ZZ_MARK_TARGET(0x80019E1C,0x80019E44,ZZ_19DE0_3C);
ZZ_MARK_TARGET(0x80019E44,0x80019E88,ZZ_19DE0_64);
ZZ_MARK_TARGET(0x80019E88,0x80019EAC,ZZ_19DE0_A8);
ZZ_MARK_TARGET(0x80019EAC,0x80019EBC,ZZ_19DE0_CC);
ZZ_MARK_TARGET(0x80019EBC,0x80019ECC,ZZ_19DE0_DC);
ZZ_MARK_TARGET(0x80019ECC,0x80019EE4,ZZ_19DE0_EC);
ZZ_MARK_TARGET(0x80019EE4,0x80019F04,ZZ_19DE0_104);
ZZ_MARK_TARGET(0x80019F04,0x80019F0C,ZZ_19DE0_124);
ZZ_MARK_TARGET(0x80019F0C,0x80019F2C,ZZ_19DE0_12C);
ZZ_MARK_TARGET(0x80019F2C,0x80019F34,ZZ_19DE0_14C);
ZZ_MARK_TARGET(0x80019F34,0x80019F78,ZZ_19DE0_154);
ZZ_MARK_TARGET(0x80019F78,0x80019F90,ZZ_19DE0_198);
