#ifdef ZZ_INCLUDE_CODE
ZZ_47078:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 23976); //+ 0x5DA8
	SP -= 24;
	if (V0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(5,0x800470EC);
		goto ZZ_47078_74;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = 0x1;
	AT = 0x80050000;
	EMU_Write32(AT + 23976,V0); //+ 0x5DA8
	RA = 0x800470A0; //ZZ_47078_28
	ZZ_CLOCKCYCLES(10,0x8003E1F8);
	goto ZZ_3E1F8;
ZZ_47078_28:
	A0 = 0x80040000;
	A0 += 26272;
	AT = 0x80050000;
	EMU_Write32(AT + 22856,R0); //+ 0x5948
	RA = 0x800470B8; //ZZ_47078_40
	ZZ_CLOCKCYCLES(6,0x800470FC);
	goto ZZ_470FC;
ZZ_47078_40:
	A0 = 0xF0000000;
	A0 |= 0x9;
	A1 = 0x20;
	A2 = 0x2000;
	RA = 0x800470D0; //ZZ_47078_58
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x8003E1A8);
	goto ZZ_3E1A8;
ZZ_47078_58:
	A0 = V0;
	AT = 0x80050000;
	EMU_Write32(AT + 22944,A0); //+ 0x59A0
	RA = 0x800470E4; //ZZ_47078_6C
	ZZ_CLOCKCYCLES(5,0x8003E1D8);
	goto ZZ_3E1D8;
ZZ_47078_6C:
	RA = 0x800470EC; //ZZ_47078_74
	ZZ_CLOCKCYCLES(2,0x8003E208);
	goto ZZ_3E208;
ZZ_47078_74:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80046FF8,ZZ_46FB0_48);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047078,0x800470A0,ZZ_47078);
ZZ_MARK_TARGET(0x800470A0,0x800470B8,ZZ_47078_28);
ZZ_MARK_TARGET(0x800470B8,0x800470D0,ZZ_47078_40);
ZZ_MARK_TARGET(0x800470D0,0x800470E4,ZZ_47078_58);
ZZ_MARK_TARGET(0x800470E4,0x800470EC,ZZ_47078_6C);
ZZ_MARK_TARGET(0x800470EC,0x800470FC,ZZ_47078_74);
