#ifdef ZZ_INCLUDE_CODE
ZZ_45610:
	SP -= 64;
	EMU_Write32(SP + 48,S6); //+ 0x30
	S6 = A0;
	EMU_Write32(SP + 52,S7); //+ 0x34
	S7 = A1;
	A0 = -1;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 44,S5); //+ 0x2C
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	RA = 0x80045648; //ZZ_45610_38
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(14,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_45610_38:
	S4 = 0x80050000;
	S4 += 22084;
	S3 = 0x80050000;
	S3 += 22652;
	S5 = S3 + 1;
	S2 = 0x80050000;
	S2 += 22684;
	V0 += 480;
	AT = 0x80050000;
	EMU_Write32(AT + 29104,V0); //+ 0x71B0
	V0 = 0x80010000;
	V0 += 5708;
	AT = 0x80050000;
	EMU_Write32(AT + 29108,R0); //+ 0x71B4
	AT = 0x80050000;
	EMU_Write32(AT + 29112,V0); //+ 0x71B8
	ZZ_CLOCKCYCLES(16,0x80045688);
ZZ_45610_78:
	RA = 0x80045690; //ZZ_45610_80
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_45610_80:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29104); //+ 0x71B0
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x800456D0);
		goto ZZ_45610_C0;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29108); //+ 0x71B4
	V0 = V1 + 1;
	AT = 0x80050000;
	EMU_Write32(AT + 29108,V0); //+ 0x71B4
	V0 = 0x1E0000;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x80045748);
		goto ZZ_45610_138;
	}
	ZZ_CLOCKCYCLES(16,0x800456D0);
ZZ_45610_C0:
	A0 = 0x80010000;
	A0 += 5368;
	RA = 0x800456E0; //ZZ_45610_D0
	ZZ_CLOCKCYCLES(4,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_45610_D0:
	A0 = EMU_ReadU8(S3);
	V0 = EMU_ReadU8(S3 + 1); //+ 0x1
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 29112); //+ 0x71B8
	V0 <<= 2;
	V0 += S4;
	A0 <<= 2;
	V1 = EMU_ReadU32(V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 21953); //+ 0x55C1
	A0 += S4;
	V0 <<= 2;
	EMU_Write32(SP + 16,V1); //+ 0x10
	AT = 0x80050000;
	AT += 21956;
	AT += V0;
	A2 = EMU_ReadU32(AT);
	A3 = EMU_ReadU32(A0);
	A0 = 0x80010000;
	A0 += 5384;
	RA = 0x80045738; //ZZ_45610_128
	ZZ_CLOCKCYCLES(22,0x8003D730);
	goto ZZ_3D730;
ZZ_45610_128:
	RA = 0x80045740; //ZZ_45610_130
	ZZ_CLOCKCYCLES(2,0x80044C40);
	goto ZZ_44C40;
ZZ_45610_130:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004574C);
	goto ZZ_45610_13C;
ZZ_45610_138:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8004574C);
ZZ_45610_13C:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80045898);
		goto ZZ_45610_288;
	}
	RA = 0x8004575C; //ZZ_45610_14C
	ZZ_CLOCKCYCLES(4,0x8003E848);
	goto ZZ_3E848;
ZZ_45610_14C:
	if (!V0)
	{
		A0 = S7;
		ZZ_CLOCKCYCLES(2,0x80045810);
		goto ZZ_45610_200;
	}
	A0 = S7;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	V0 = EMU_ReadU8(V0);
	S1 = V0 & 0x3;
	ZZ_CLOCKCYCLES(8,0x8004577C);
ZZ_45610_16C:
	RA = 0x80045784; //ZZ_45610_174
	ZZ_CLOCKCYCLES(2,0x80043BA8);
	goto ZZ_43BA8;
ZZ_45610_174:
	S0 = V0;
	if (!S0)
	{
		V0 = S0 & 0x4;
		ZZ_CLOCKCYCLES(3,0x800457FC);
		goto ZZ_45610_1EC;
	}
	V0 = S0 & 0x4;
	if (!V0)
	{
		V0 = S0 & 0x2;
		ZZ_CLOCKCYCLES(5,0x800457C4);
		goto ZZ_45610_1B4;
	}
	V0 = S0 & 0x2;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21924); //+ 0x55A4
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x800457C0);
		goto ZZ_45610_1B0;
	}
	A0 = EMU_ReadU8(S5);
	A1 = 0x80050000;
	A1 += 29088;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800457C0; //ZZ_45610_1B0
	ZZ_CLOCKCYCLES_JR(15);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800457B8)
	ZZ_JUMPREGISTER_END();
ZZ_45610_1B0:
	V0 = S0 & 0x2;
	ZZ_CLOCKCYCLES(1,0x800457C4);
ZZ_45610_1B4:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8004577C);
		goto ZZ_45610_16C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21920); //+ 0x55A0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004577C);
		goto ZZ_45610_16C;
	}
	A0 = EMU_ReadU8(S3);
	A1 = 0x80050000;
	A1 += 29080;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800457F4; //ZZ_45610_1E4
	ZZ_CLOCKCYCLES_JR(12);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800457EC)
	ZZ_JUMPREGISTER_END();
ZZ_45610_1E4:
	ZZ_CLOCKCYCLES(2,0x8004577C);
	goto ZZ_45610_16C;
ZZ_45610_1EC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	EMU_Write8(V0,S1);
	A0 = S7;
	ZZ_CLOCKCYCLES(5,0x80045810);
ZZ_45610_200:
	A1 = 0x80050000;
	A1 += 29088;
	if (!A0)
	{
		V1 = 0x7;
		ZZ_CLOCKCYCLES(4,0x8004583C);
		goto ZZ_45610_22C;
	}
	V1 = 0x7;
	A2 = -1;
	ZZ_CLOCKCYCLES(5,0x80045824);
ZZ_45610_214:
	V0 = EMU_ReadU8(A1);
	A1 += 1;
	V1 -= 1;
	EMU_Write8(A0,V0);
	if (V1 != A2)
	{
		A0 += 1;
		ZZ_CLOCKCYCLES(6,0x80045824);
		goto ZZ_45610_214;
	}
	A0 += 1;
	ZZ_CLOCKCYCLES(6,0x8004583C);
ZZ_45610_22C:
	RA = 0x80045844; //ZZ_45610_234
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_45610_234:
	V1 = EMU_ReadU32(S2);
	V1 += 60;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(6,0x80045864);
		goto ZZ_45610_254;
	}
	RA = 0x80045864; //ZZ_45610_254
	ZZ_CLOCKCYCLES(8,0x8004519C);
	goto ZZ_4519C;
ZZ_45610_254:
	V0 = EMU_ReadU32(S2 - 4); //+ 0xFFFFFFFC
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8004587C);
		goto ZZ_45610_26C;
	}
	RA = 0x8004587C; //ZZ_45610_26C
	A0 = R0;
	ZZ_CLOCKCYCLES(6,0x800458C8);
	goto ZZ_458C8;
ZZ_45610_26C:
	if (S6)
	{
		ZZ_CLOCKCYCLES(2,0x80045894);
		goto ZZ_45610_284;
	}
	V0 = EMU_ReadU32(S2 - 4); //+ 0xFFFFFFFC
	if ((int32_t)V0 > 0)
	{
		ZZ_CLOCKCYCLES(6,0x80045688);
		goto ZZ_45610_78;
	}
	ZZ_CLOCKCYCLES(6,0x80045894);
ZZ_45610_284:
	V0 = EMU_ReadU32(S2 - 4); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(1,0x80045898);
ZZ_45610_288:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S7 = EMU_ReadU32(SP + 52); //+ 0x34
	S6 = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80043994,ZZ_43984_10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80045610,0x80045648,ZZ_45610);
ZZ_MARK_TARGET(0x80045648,0x80045688,ZZ_45610_38);
ZZ_MARK_TARGET(0x80045688,0x80045690,ZZ_45610_78);
ZZ_MARK_TARGET(0x80045690,0x800456D0,ZZ_45610_80);
ZZ_MARK_TARGET(0x800456D0,0x800456E0,ZZ_45610_C0);
ZZ_MARK_TARGET(0x800456E0,0x80045738,ZZ_45610_D0);
ZZ_MARK_TARGET(0x80045738,0x80045740,ZZ_45610_128);
ZZ_MARK_TARGET(0x80045740,0x80045748,ZZ_45610_130);
ZZ_MARK_TARGET(0x80045748,0x8004574C,ZZ_45610_138);
ZZ_MARK_TARGET(0x8004574C,0x8004575C,ZZ_45610_13C);
ZZ_MARK_TARGET(0x8004575C,0x8004577C,ZZ_45610_14C);
ZZ_MARK_TARGET(0x8004577C,0x80045784,ZZ_45610_16C);
ZZ_MARK_TARGET(0x80045784,0x800457C0,ZZ_45610_174);
ZZ_MARK_TARGET(0x800457C0,0x800457C4,ZZ_45610_1B0);
ZZ_MARK_TARGET(0x800457C4,0x800457F4,ZZ_45610_1B4);
ZZ_MARK_TARGET(0x800457F4,0x800457FC,ZZ_45610_1E4);
ZZ_MARK_TARGET(0x800457FC,0x80045810,ZZ_45610_1EC);
ZZ_MARK_TARGET(0x80045810,0x80045824,ZZ_45610_200);
ZZ_MARK_TARGET(0x80045824,0x8004583C,ZZ_45610_214);
ZZ_MARK_TARGET(0x8004583C,0x80045844,ZZ_45610_22C);
ZZ_MARK_TARGET(0x80045844,0x80045864,ZZ_45610_234);
ZZ_MARK_TARGET(0x80045864,0x8004587C,ZZ_45610_254);
ZZ_MARK_TARGET(0x8004587C,0x80045894,ZZ_45610_26C);
ZZ_MARK_TARGET(0x80045894,0x80045898,ZZ_45610_284);
ZZ_MARK_TARGET(0x80045898,0x800458C8,ZZ_45610_288);
