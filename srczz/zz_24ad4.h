#ifdef ZZ_INCLUDE_CODE
ZZ_24AD4:
	SP -= 96;
	EMU_Write32(SP + 68,S1); //+ 0x44
	S1 = A0;
	EMU_Write32(SP + 84,S5); //+ 0x54
	S5 = A1;
	EMU_Write32(SP + 76,S3); //+ 0x4C
	S3 = A2;
	EMU_Write32(SP + 88,RA); //+ 0x58
	EMU_Write32(SP + 80,S4); //+ 0x50
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 64,S0); //+ 0x40
	S2 = EMU_ReadU32(S1 + 120); //+ 0x78
	if (!S2)
	{
		S4 = A3;
		ZZ_CLOCKCYCLES(15,0x80024B74);
		goto ZZ_24AD4_A0;
	}
	S4 = A3;
	if (S2 == S3)
	{
		ZZ_CLOCKCYCLES(17,0x80024B74);
		goto ZZ_24AD4_A0;
	}
	V0 = EMU_ReadU32(S3 + 288); //+ 0x120
	V0 &= 0x800;
	if (!V0)
	{
		V0 = -28;
		ZZ_CLOCKCYCLES(22,0x80024B34);
		goto ZZ_24AD4_60;
	}
	V0 = -28;
	EMU_Write32(S3 + 120,S1); //+ 0x78
	ZZ_CLOCKCYCLES(24,0x80024CA0);
	goto ZZ_24AD4_1CC;
ZZ_24AD4_60:
	S0 = S1 + 128;
	A0 = S0;
	RA = 0x80024B44; //ZZ_24AD4_70
	A1 = S2 + 128;
	ZZ_CLOCKCYCLES(4,0x80029B90);
	goto ZZ_29B90;
ZZ_24AD4_70:
	A0 = S0;
	A1 = S3 + 128;
	RA = 0x80024B54; //ZZ_24AD4_80
	S0 = V0;
	ZZ_CLOCKCYCLES(4,0x80029B90);
	goto ZZ_29B90;
ZZ_24AD4_80:
	V0 = (int32_t)V0 < (int32_t)S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x80024B74);
		goto ZZ_24AD4_A0;
	}
	V0 = EMU_ReadU32(S2 + 288); //+ 0x120
	V0 &= 0x800;
	if (!V0)
	{
		V0 = -28;
		ZZ_CLOCKCYCLES(8,0x80024CA0);
		goto ZZ_24AD4_1CC;
	}
	V0 = -28;
	ZZ_CLOCKCYCLES(8,0x80024B74);
ZZ_24AD4_A0:
	EMU_Write32(S1 + 120,S3); //+ 0x78
	EMU_Write32(S3 + 120,S1); //+ 0x78
	V1 = EMU_ReadU32(S1 + 328); //+ 0x148
	if (!V1)
	{
		A0 = SP + 16;
		ZZ_CLOCKCYCLES(6,0x80024C0C);
		goto ZZ_24AD4_138;
	}
	A0 = SP + 16;
	V0 = EMU_ReadU32(S5);
	V0 += V1;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 328); //+ 0x148
	V0 += V1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S5 + 12); //+ 0xC
	V1 = EMU_ReadU32(S1 + 328); //+ 0x148
	V0 = V0 - V1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S5 + 16); //+ 0x10
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S5 + 20); //+ 0x14
	V1 = EMU_ReadU32(S1 + 328); //+ 0x148
	A1 = S4;
	V0 = V0 - V1;
	RA = 0x80024BF4; //ZZ_24AD4_120
	EMU_Write32(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(32,0x80026CA8);
	goto ZZ_26CA8;
ZZ_24AD4_120:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80024C0C);
		goto ZZ_24AD4_138;
	}
	V0 = EMU_ReadU32(S1 + 200); //+ 0xC8
	V0 |= 0x1000;
	EMU_Write32(S1 + 200,V0); //+ 0xC8
	ZZ_CLOCKCYCLES(6,0x80024C0C);
ZZ_24AD4_138:
	V1 = EMU_ReadU32(S3 + 328); //+ 0x148
	if (!V1)
	{
		A0 = SP + 40;
		ZZ_CLOCKCYCLES(4,0x80024C9C);
		goto ZZ_24AD4_1C8;
	}
	A0 = SP + 40;
	V0 = EMU_ReadU32(S4);
	V0 += V1;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(S3 + 328); //+ 0x148
	V0 += V1;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(S3 + 328); //+ 0x148
	V0 = V0 - V1;
	EMU_Write32(SP + 52,V0); //+ 0x34
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(S3 + 328); //+ 0x148
	A1 = S5;
	V0 = V0 - V1;
	RA = 0x80024C84; //ZZ_24AD4_1B0
	EMU_Write32(SP + 60,V0); //+ 0x3C
	ZZ_CLOCKCYCLES(30,0x80026CA8);
	goto ZZ_26CA8;
ZZ_24AD4_1B0:
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x80024CA0);
		goto ZZ_24AD4_1CC;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S3 + 200); //+ 0xC8
	V0 |= 0x1000;
	EMU_Write32(S3 + 200,V0); //+ 0xC8
	ZZ_CLOCKCYCLES(6,0x80024C9C);
ZZ_24AD4_1C8:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x80024CA0);
ZZ_24AD4_1CC:
	RA = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8001F2E4,ZZ_1EEA8_43C);
	ZZ_JUMPREGISTER(0x8002C8D4,ZZ_2C660_274);
	ZZ_JUMPREGISTER(0x8002DF04,ZZ_2D8B8_64C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80024AD4,0x80024B34,ZZ_24AD4);
ZZ_MARK_TARGET(0x80024B34,0x80024B44,ZZ_24AD4_60);
ZZ_MARK_TARGET(0x80024B44,0x80024B54,ZZ_24AD4_70);
ZZ_MARK_TARGET(0x80024B54,0x80024B74,ZZ_24AD4_80);
ZZ_MARK_TARGET(0x80024B74,0x80024BF4,ZZ_24AD4_A0);
ZZ_MARK_TARGET(0x80024BF4,0x80024C0C,ZZ_24AD4_120);
ZZ_MARK_TARGET(0x80024C0C,0x80024C84,ZZ_24AD4_138);
ZZ_MARK_TARGET(0x80024C84,0x80024C9C,ZZ_24AD4_1B0);
ZZ_MARK_TARGET(0x80024C9C,0x80024CA0,ZZ_24AD4_1C8);
ZZ_MARK_TARGET(0x80024CA0,0x80024CC8,ZZ_24AD4_1CC);
