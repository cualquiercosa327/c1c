#ifdef ZZ_INCLUDE_CODE
ZZ_41C38:
	SP -= 56;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = A0;
	EMU_Write32(SP + 40,S2); //+ 0x28
	S2 = A1;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	RA = 0x80041C60; //ZZ_41C38_28
	EMU_Write32(SP + 32,S0); //+ 0x20
	ZZ_CLOCKCYCLES(10,0x80042864);
	goto ZZ_42864;
ZZ_41C38_28:
	A0 = EMU_ReadS16(S1 + 4); //+ 0x4
	if ((int32_t)A0 < 0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(4,0x80041CA0);
		goto ZZ_41C38_68;
	}
	V1 = A0;
	A1 = 0x80050000;
	A1 += 19056;
	V0 = EMU_ReadU16(A1);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x80041CA4);
		goto ZZ_41C38_6C;
	}
	V1 = EMU_ReadU16(A1);
	ZZ_CLOCKCYCLES(16,0x80041CA4);
	goto ZZ_41C38_6C;
ZZ_41C38_68:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x80041CA4);
ZZ_41C38_6C:
	A1 = EMU_ReadS16(S1 + 6); //+ 0x6
	EMU_Write16(S1 + 4,V1); //+ 0x4
	if ((int32_t)A1 < 0)
	{
		V1 = A1;
		ZZ_CLOCKCYCLES(4,0x80041CE4);
		goto ZZ_41C38_AC;
	}
	V1 = A1;
	A2 = 0x80050000;
	A2 += 19058;
	V0 = EMU_ReadU16(A2);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(13,0x80041CE8);
		goto ZZ_41C38_B0;
	}
	A0 = V1;
	A0 = EMU_ReadU16(A2);
	V0 = A0 << 16;
	ZZ_CLOCKCYCLES(16,0x80041CEC);
	goto ZZ_41C38_B4;
ZZ_41C38_AC:
	A0 = R0;
	ZZ_CLOCKCYCLES(1,0x80041CE8);
ZZ_41C38_B0:
	V0 = A0 << 16;
	ZZ_CLOCKCYCLES(1,0x80041CEC);
ZZ_41C38_B4:
	V1 = EMU_ReadS16(S1 + 4); //+ 0x4
	V0 = (int32_t)V0 >> 16;
	EMU_SMultiply(V1,V0);
	EMU_Write16(S1 + 6,A0); //+ 0x6
	V0 = LO;
	V0 += 1;
	V1 = V0 >> 31;
	V0 += V1;
	A0 = (int32_t)V0 >> 1;
	if ((int32_t)A0 > 0)
	{
		S0 = (int32_t)V0 >> 5;
		ZZ_CLOCKCYCLES(11,0x80041D20);
		goto ZZ_41C38_E8;
	}
	S0 = (int32_t)V0 >> 5;
	V0 = -1;
	ZZ_CLOCKCYCLES(13,0x80041EB0);
	goto ZZ_41C38_278;
ZZ_41C38_E8:
	V1 = S0;
	V0 = V1 << 4;
	S0 = A0 - V0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	S4 = V1;
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x80041D80);
		goto ZZ_41C38_148;
	}
	S3 = 0x4000000;
	ZZ_CLOCKCYCLES(12,0x80041D50);
ZZ_41C38_118:
	RA = 0x80041D58; //ZZ_41C38_120
	ZZ_CLOCKCYCLES(2,0x80042898);
	goto ZZ_42898;
ZZ_41C38_120:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80041EB0);
		goto ZZ_41C38_278;
	}
	V0 = -1;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V0 &= S3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80041D50);
		goto ZZ_41C38_118;
	}
	ZZ_CLOCKCYCLES(10,0x80041D80);
ZZ_41C38_148:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19264); //+ 0x4B40
	V0 = 0x4000000;
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = 0x1000000;
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = 0xC0000000;
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = EMU_ReadU32(S1);
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V1 = 0x8000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(30,0x80041E2C);
		goto ZZ_41C38_1F4;
	}
	S1 = 0x8000000;
	ZZ_CLOCKCYCLES(31,0x80041DFC);
ZZ_41C38_1C4:
	RA = 0x80041E04; //ZZ_41C38_1CC
	ZZ_CLOCKCYCLES(2,0x80042898);
	goto ZZ_42898;
ZZ_41C38_1CC:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80041EB0);
		goto ZZ_41C38_278;
	}
	V0 = -1;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V0 &= S1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80041DFC);
		goto ZZ_41C38_1C4;
	}
	ZZ_CLOCKCYCLES(10,0x80041E2C);
ZZ_41C38_1F4:
	S0 -= 1;
	V0 = -1;
	if (S0 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x80041E60);
		goto ZZ_41C38_228;
	}
	V1 = -1;
	ZZ_CLOCKCYCLES(5,0x80041E40);
ZZ_41C38_208:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19260); //+ 0x4B3C
	V0 = EMU_ReadU32(V0);
	S0 -= 1;
	EMU_Write32(S2,V0);
	if (S0 != V1)
	{
		S2 += 4;
		ZZ_CLOCKCYCLES(8,0x80041E40);
		goto ZZ_41C38_208;
	}
	S2 += 4;
	ZZ_CLOCKCYCLES(8,0x80041E60);
ZZ_41C38_228:
	if (!S4)
	{
		V1 = 0x4000000;
		ZZ_CLOCKCYCLES(2,0x80041EAC);
		goto ZZ_41C38_274;
	}
	V1 = 0x4000000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V1 |= 0x3;
	EMU_Write32(V0,V1);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19268); //+ 0x4B44
	A0 = 0x1000000;
	EMU_Write32(V0,S2);
	V0 = S4 << 16;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19272); //+ 0x4B48
	V0 |= 0x10;
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	A0 |= 0x200;
	EMU_Write32(V0,A0);
	ZZ_CLOCKCYCLES(19,0x80041EAC);
ZZ_41C38_274:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80041EB0);
ZZ_41C38_278:
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80041C38,0x80041C60,ZZ_41C38);
ZZ_MARK_TARGET(0x80041C60,0x80041CA0,ZZ_41C38_28);
ZZ_MARK_TARGET(0x80041CA0,0x80041CA4,ZZ_41C38_68);
ZZ_MARK_TARGET(0x80041CA4,0x80041CE4,ZZ_41C38_6C);
ZZ_MARK_TARGET(0x80041CE4,0x80041CE8,ZZ_41C38_AC);
ZZ_MARK_TARGET(0x80041CE8,0x80041CEC,ZZ_41C38_B0);
ZZ_MARK_TARGET(0x80041CEC,0x80041D20,ZZ_41C38_B4);
ZZ_MARK_TARGET(0x80041D20,0x80041D50,ZZ_41C38_E8);
ZZ_MARK_TARGET(0x80041D50,0x80041D58,ZZ_41C38_118);
ZZ_MARK_TARGET(0x80041D58,0x80041D80,ZZ_41C38_120);
ZZ_MARK_TARGET(0x80041D80,0x80041DFC,ZZ_41C38_148);
ZZ_MARK_TARGET(0x80041DFC,0x80041E04,ZZ_41C38_1C4);
ZZ_MARK_TARGET(0x80041E04,0x80041E2C,ZZ_41C38_1CC);
ZZ_MARK_TARGET(0x80041E2C,0x80041E40,ZZ_41C38_1F4);
ZZ_MARK_TARGET(0x80041E40,0x80041E60,ZZ_41C38_208);
ZZ_MARK_TARGET(0x80041E60,0x80041EAC,ZZ_41C38_228);
ZZ_MARK_TARGET(0x80041EAC,0x80041EB0,ZZ_41C38_274);
ZZ_MARK_TARGET(0x80041EB0,0x80041ED4,ZZ_41C38_278);
