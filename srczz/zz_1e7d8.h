#ifdef ZZ_INCLUDE_CODE
ZZ_1E7D8:
	SP -= 152;
	EMU_Write32(SP + 124,S1); //+ 0x7C
	S1 = A0;
	EMU_Write32(SP + 120,S0); //+ 0x78
	S0 = A1;
	EMU_Write32(SP + 128,S2); //+ 0x80
	S2 = A2;
	EMU_Write32(SP + 140,S5); //+ 0x8C
	S5 = A3;
	A3 = 0x26700000;
	A3 |= 0x5EBF;
	A0 = S1 + 128;
	A1 = 0x80050000;
	A1 += 30856;
	EMU_Write32(SP + 148,RA); //+ 0x94
	EMU_Write32(SP + 144,S6); //+ 0x90
	EMU_Write32(SP + 136,S4); //+ 0x88
	EMU_Write32(SP + 132,S3); //+ 0x84
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	S6 = EMU_ReadU32(SP + 168); //+ 0xA8
	A2 = EMU_ReadU32(S1 + 204); //+ 0xCC
	V0 = A1 - 68;
	EMU_Write32(SP + 16,V0); //+ 0x10
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(25,0x8001E840);
		goto ZZ_1E7D8_68;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(26,0x8001E840);
ZZ_1E7D8_68:
	EMU_SMultiply(V1,A3);
	V0 = 0x3C00;
	EMU_Write32(SP + 24,V0); //+ 0x18
	A3 = 0x80050000;
	A3 = EMU_ReadU32(A3 + 30928); //+ 0x78D0
	A2 &= 0x200;
	EMU_Write32(SP + 20,A3); //+ 0x14
	V0 = EMU_ReadU32(S1 + 204); //+ 0xCC
	V1 = (int32_t)V1 >> 31;
	V0 >>= 18;
	V0 ^= 0x1;
	V0 &= 0x1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = HI;
	V0 = (int32_t)V0 >> 12;
	S3 = V0 - V1;
	RA = 0x8001E888; //ZZ_1E7D8_B0
	A3 = S3;
	ZZ_CLOCKCYCLES(18,0x8003A144);
	goto ZZ_3A144;
ZZ_1E7D8_B0:
	if (!V0)
	{
		A1 = S0;
		ZZ_CLOCKCYCLES(2,0x8001E9D4);
		goto ZZ_1E7D8_1FC;
	}
	A1 = S0;
	S0 = A1 + 12;
	if ((int32_t)S2 <= 0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(5,0x8001E8BC);
		goto ZZ_1E7D8_E4;
	}
	V1 = R0;
	ZZ_CLOCKCYCLES(5,0x8001E89C);
ZZ_1E7D8_C4:
	V0 = EMU_ReadU8(S0);
	if (V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(4,0x8001E8B0);
		goto ZZ_1E7D8_D8;
	}
	S0 += 1;
	V1 += 1;
	ZZ_CLOCKCYCLES(5,0x8001E8B0);
ZZ_1E7D8_D8:
	V0 = (int32_t)V1 < (int32_t)S2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001E89C);
		goto ZZ_1E7D8_C4;
	}
	ZZ_CLOCKCYCLES(3,0x8001E8BC);
ZZ_1E7D8_E4:
	V0 = EMU_ReadU32(S1 + 296); //+ 0x128
	V1 = EMU_ReadU32(S1 + 32); //+ 0x20
	V0 >>= 8;
	A0 = EMU_ReadU32(V1 + 36); //+ 0x24
	if (V0)
	{
		V0 <<= 2;
		ZZ_CLOCKCYCLES(6,0x8001E8E0);
		goto ZZ_1E7D8_108;
	}
	V0 <<= 2;
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 <<= 2;
	ZZ_CLOCKCYCLES(9,0x8001E8E0);
ZZ_1E7D8_108:
	S2 = A0 + V0;
	RA = 0x8001E8EC; //ZZ_1E7D8_114
	A0 = S2 + 4;
	ZZ_CLOCKCYCLES(3,0x80015A98);
	goto ZZ_15A98;
ZZ_1E7D8_114:
	A3 = EMU_ReadU32(S1 + 220); //+ 0xDC
	V1 = EMU_ReadU32(A3 - 16); //+ 0xFFFFFFF0
	A0 = SP + 32;
	EMU_Write32(SP + 16,V1); //+ 0x10
	V1 = EMU_ReadU32(S1 + 220); //+ 0xDC
	A1 = S0;
	V1 = EMU_ReadU32(V1 - 20); //+ 0xFFFFFFEC
	S0 = SP + 32;
	EMU_Write32(SP + 20,V1); //+ 0x14
	A2 = EMU_ReadU32(A3 - 8); //+ 0xFFFFFFF8
	A3 = EMU_ReadU32(A3 - 12); //+ 0xFFFFFFF4
	RA = 0x8001E924; //ZZ_1E7D8_14C
	S4 = V0;
	ZZ_CLOCKCYCLES(14,0x8003D740);
	goto ZZ_3D740;
ZZ_1E7D8_14C:
	V0 = EMU_ReadU8(SP + 32); //+ 0x20
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(4,0x8001E94C);
		goto ZZ_1E7D8_174;
	}
	V1 = S0;
	V1 += 1;
	ZZ_CLOCKCYCLES(5,0x8001E938);
ZZ_1E7D8_160:
	V0 = EMU_ReadU8(V1);
	if (V0)
	{
		V1 += 1;
		ZZ_CLOCKCYCLES(4,0x8001E938);
		goto ZZ_1E7D8_160;
	}
	V1 += 1;
	V1 -= 1;
	ZZ_CLOCKCYCLES(5,0x8001E94C);
ZZ_1E7D8_174:
	if (V1 == S0)
	{
		V1 -= 1;
		ZZ_CLOCKCYCLES(2,0x8001E980);
		goto ZZ_1E7D8_1A8;
	}
	V1 -= 1;
	if (V1 == S0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E97C);
		goto ZZ_1E7D8_1A4;
	}
	A0 = 0x20;
	ZZ_CLOCKCYCLES(5,0x8001E960);
ZZ_1E7D8_188:
	V0 = EMU_ReadU8(V1);
	if (V0 != A0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E97C);
		goto ZZ_1E7D8_1A4;
	}
	V1 -= 1;
	if (V1 != S0)
	{
		ZZ_CLOCKCYCLES(7,0x8001E960);
		goto ZZ_1E7D8_188;
	}
	ZZ_CLOCKCYCLES(7,0x8001E97C);
ZZ_1E7D8_1A4:
	EMU_Write8(V1 + 1,R0); //+ 0x1
	ZZ_CLOCKCYCLES(1,0x8001E980);
ZZ_1E7D8_1A8:
	if (!S6)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x8001E9A8);
		goto ZZ_1E7D8_1D0;
	}
	V0 = R0;
	A0 = S1;
	A1 = S0;
	A2 = R0;
	A3 = S2;
	EMU_Write32(SP + 16,S4); //+ 0x10
	EMU_Write32(SP + 20,S3); //+ 0x14
	RA = 0x8001E9A8; //ZZ_1E7D8_1D0
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(10,0x8001E3D4);
	goto ZZ_1E3D4;
ZZ_1E7D8_1D0:
	A0 = S1;
	A1 = S0;
	A2 = -V0;
	V0 = A2 >> 31;
	A2 += V0;
	A2 = (int32_t)A2 >> 1;
	A3 = S2;
	EMU_Write32(SP + 16,S4); //+ 0x10
	EMU_Write32(SP + 20,S3); //+ 0x14
	RA = 0x8001E9D4; //ZZ_1E7D8_1FC
	EMU_Write32(SP + 24,S5); //+ 0x18
	ZZ_CLOCKCYCLES(11,0x8001E3D4);
	goto ZZ_1E3D4;
ZZ_1E7D8_1FC:
	RA = EMU_ReadU32(SP + 148); //+ 0x94
	S6 = EMU_ReadU32(SP + 144); //+ 0x90
	S5 = EMU_ReadU32(SP + 140); //+ 0x8C
	S4 = EMU_ReadU32(SP + 136); //+ 0x88
	S3 = EMU_ReadU32(SP + 132); //+ 0x84
	S2 = EMU_ReadU32(SP + 128); //+ 0x80
	S1 = EMU_ReadU32(SP + 124); //+ 0x7C
	S0 = EMU_ReadU32(SP + 120); //+ 0x78
	SP += 152;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x8001E190,ZZ_1DE78_318);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001E7D8,0x8001E840,ZZ_1E7D8);
ZZ_MARK_TARGET(0x8001E840,0x8001E888,ZZ_1E7D8_68);
ZZ_MARK_TARGET(0x8001E888,0x8001E89C,ZZ_1E7D8_B0);
ZZ_MARK_TARGET(0x8001E89C,0x8001E8B0,ZZ_1E7D8_C4);
ZZ_MARK_TARGET(0x8001E8B0,0x8001E8BC,ZZ_1E7D8_D8);
ZZ_MARK_TARGET(0x8001E8BC,0x8001E8E0,ZZ_1E7D8_E4);
ZZ_MARK_TARGET(0x8001E8E0,0x8001E8EC,ZZ_1E7D8_108);
ZZ_MARK_TARGET(0x8001E8EC,0x8001E924,ZZ_1E7D8_114);
ZZ_MARK_TARGET(0x8001E924,0x8001E938,ZZ_1E7D8_14C);
ZZ_MARK_TARGET(0x8001E938,0x8001E94C,ZZ_1E7D8_160);
ZZ_MARK_TARGET(0x8001E94C,0x8001E960,ZZ_1E7D8_174);
ZZ_MARK_TARGET(0x8001E960,0x8001E97C,ZZ_1E7D8_188);
ZZ_MARK_TARGET(0x8001E97C,0x8001E980,ZZ_1E7D8_1A4);
ZZ_MARK_TARGET(0x8001E980,0x8001E9A8,ZZ_1E7D8_1A8);
ZZ_MARK_TARGET(0x8001E9A8,0x8001E9D4,ZZ_1E7D8_1D0);
ZZ_MARK_TARGET(0x8001E9D4,0x8001EA00,ZZ_1E7D8_1FC);
