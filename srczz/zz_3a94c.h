#ifdef ZZ_INCLUDE_CODE
ZZ_3A94C:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x8003A95C; //ZZ_3A94C_10
	ZZ_CLOCKCYCLES(4,0x8003CB88);
	goto ZZ_3CB88;
ZZ_3A94C_10:
	V1 = EMU_ReadU32(GP + 368); //+ 0x170
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x8003A980);
		goto ZZ_3A94C_34;
	}
	RA = 0x8003A974; //ZZ_3A94C_28
	ZZ_CLOCKCYCLES(6,0x8003CB88);
	goto ZZ_3CB88;
ZZ_3A94C_28:
	EMU_Write32(GP + 368,V0); //+ 0x170
	RA = 0x8003A980; //ZZ_3A94C_34
	ZZ_CLOCKCYCLES(3,0x8003C3D4);
	goto ZZ_3C3D4;
ZZ_3A94C_34:
	RA = 0x8003A988; //ZZ_3A94C_3C
	ZZ_CLOCKCYCLES(2,0x8003CB74);
	goto ZZ_3CB74;
ZZ_3A94C_3C:
	V1 = EMU_ReadU32(GP + 372); //+ 0x174
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x8003A9AC);
		goto ZZ_3A94C_60;
	}
	RA = 0x8003A9A0; //ZZ_3A94C_54
	ZZ_CLOCKCYCLES(6,0x8003CB74);
	goto ZZ_3CB74;
ZZ_3A94C_54:
	EMU_Write32(GP + 372,V0); //+ 0x174
	RA = 0x8003A9AC; //ZZ_3A94C_60
	ZZ_CLOCKCYCLES(3,0x8003C3DC);
	goto ZZ_3C3DC;
ZZ_3A94C_60:
	RA = 0x8003A9B4; //ZZ_3A94C_68
	ZZ_CLOCKCYCLES(2,0x8003CB74);
	goto ZZ_3CB74;
ZZ_3A94C_68:
	V1 = V0;
	V0 = V1 < 9;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(4,0x8003AA4C);
		goto ZZ_3A94C_100;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3776); //+ 0xEC0
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8003A9DC,ZZ_3A94C_90);
	ZZ_JUMPREGISTER(0x8003A9EC,ZZ_3A94C_A0);
	ZZ_JUMPREGISTER(0x8003AA24,ZZ_3A94C_D8);
	ZZ_JUMPREGISTER(0x8003AA34,ZZ_3A94C_E8);
	ZZ_JUMPREGISTER(0x8003AA44,ZZ_3A94C_F8);
	ZZ_JUMPREGISTER(0x8003A9FC,ZZ_3A94C_B0);
	ZZ_JUMPREGISTER(0x8003AA0C,ZZ_3A94C_C0);
	ZZ_JUMPREGISTER_END();
ZZ_3A94C_90:
	RA = 0x8003A9E4; //ZZ_3A94C_98
	ZZ_CLOCKCYCLES(2,0x8003AA7C);
	goto ZZ_3AA7C;
ZZ_3A94C_98:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_A0:
	RA = 0x8003A9F4; //ZZ_3A94C_A8
	ZZ_CLOCKCYCLES(2,0x8003AC2C);
	goto ZZ_3AC2C;
ZZ_3A94C_A8:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_B0:
	RA = 0x8003AA04; //ZZ_3A94C_B8
	ZZ_CLOCKCYCLES(2,0x8003AF24);
	goto ZZ_3AF24;
ZZ_3A94C_B8:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_C0:
	RA = 0x8003AA14; //ZZ_3A94C_C8
	ZZ_CLOCKCYCLES(2,0x8003CB74);
	goto ZZ_3CB74;
ZZ_3A94C_C8:
	RA = 0x8003AA1C; //ZZ_3A94C_D0
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x8003B8B8);
	goto ZZ_3B8B8;
ZZ_3A94C_D0:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_D8:
	RA = 0x8003AA2C; //ZZ_3A94C_E0
	ZZ_CLOCKCYCLES(2,0x8003C038);
	goto ZZ_3C038;
ZZ_3A94C_E0:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_E8:
	RA = 0x8003AA3C; //ZZ_3A94C_F0
	ZZ_CLOCKCYCLES(2,0x8003C358);
	goto ZZ_3C358;
ZZ_3A94C_F0:
	ZZ_CLOCKCYCLES(2,0x8003AA4C);
	goto ZZ_3A94C_100;
ZZ_3A94C_F8:
	RA = 0x8003AA4C; //ZZ_3A94C_100
	ZZ_CLOCKCYCLES(2,0x8003ABA4);
	goto ZZ_3ABA4;
ZZ_3A94C_100:
	RA = 0x8003AA54; //ZZ_3A94C_108
	ZZ_CLOCKCYCLES(2,0x8003CB88);
	goto ZZ_3CB88;
ZZ_3A94C_108:
	V1 = EMU_ReadU32(GP + 360); //+ 0x168
	AT = 0x80060000;
	EMU_Write32(AT + 6520,V0); //+ 0x1978
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 6528,V0); //+ 0x1980
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80017180,ZZ_16E5C_324);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003A94C,0x8003A95C,ZZ_3A94C);
ZZ_MARK_TARGET(0x8003A95C,0x8003A974,ZZ_3A94C_10);
ZZ_MARK_TARGET(0x8003A974,0x8003A980,ZZ_3A94C_28);
ZZ_MARK_TARGET(0x8003A980,0x8003A988,ZZ_3A94C_34);
ZZ_MARK_TARGET(0x8003A988,0x8003A9A0,ZZ_3A94C_3C);
ZZ_MARK_TARGET(0x8003A9A0,0x8003A9AC,ZZ_3A94C_54);
ZZ_MARK_TARGET(0x8003A9AC,0x8003A9B4,ZZ_3A94C_60);
ZZ_MARK_TARGET(0x8003A9B4,0x8003A9DC,ZZ_3A94C_68);
ZZ_MARK_TARGET(0x8003A9DC,0x8003A9E4,ZZ_3A94C_90);
ZZ_MARK_TARGET(0x8003A9E4,0x8003A9EC,ZZ_3A94C_98);
ZZ_MARK_TARGET(0x8003A9EC,0x8003A9F4,ZZ_3A94C_A0);
ZZ_MARK_TARGET(0x8003A9F4,0x8003A9FC,ZZ_3A94C_A8);
ZZ_MARK_TARGET(0x8003A9FC,0x8003AA04,ZZ_3A94C_B0);
ZZ_MARK_TARGET(0x8003AA04,0x8003AA0C,ZZ_3A94C_B8);
ZZ_MARK_TARGET(0x8003AA0C,0x8003AA14,ZZ_3A94C_C0);
ZZ_MARK_TARGET(0x8003AA14,0x8003AA1C,ZZ_3A94C_C8);
ZZ_MARK_TARGET(0x8003AA1C,0x8003AA24,ZZ_3A94C_D0);
ZZ_MARK_TARGET(0x8003AA24,0x8003AA2C,ZZ_3A94C_D8);
ZZ_MARK_TARGET(0x8003AA2C,0x8003AA34,ZZ_3A94C_E0);
ZZ_MARK_TARGET(0x8003AA34,0x8003AA3C,ZZ_3A94C_E8);
ZZ_MARK_TARGET(0x8003AA3C,0x8003AA44,ZZ_3A94C_F0);
ZZ_MARK_TARGET(0x8003AA44,0x8003AA4C,ZZ_3A94C_F8);
ZZ_MARK_TARGET(0x8003AA4C,0x8003AA54,ZZ_3A94C_100);
ZZ_MARK_TARGET(0x8003AA54,0x8003AA7C,ZZ_3A94C_108);
