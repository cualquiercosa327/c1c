#ifdef ZZ_INCLUDE_CODE
ZZ_1D698:
	SP -= 48;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A2;
	EMU_Write32(SP + 40,S4); //+ 0x28
	V0 = 0xFF;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S3 = EMU_ReadU32(S0 + 240); //+ 0xF0
	if (A1 == V0)
	{
		S4 = A3;
		ZZ_CLOCKCYCLES(13,0x8001D6E0);
		goto ZZ_1D698_48;
	}
	S4 = A3;
	V0 = EMU_ReadU32(S0 + 204); //+ 0xCC
	V1 = 0x10000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(18,0x8001D6E8);
		goto ZZ_1D698_50;
	}
	ZZ_CLOCKCYCLES(18,0x8001D6E0);
ZZ_1D698_48:
	V0 = -14;
	ZZ_CLOCKCYCLES(2,0x8001D8F0);
	goto ZZ_1D698_258;
ZZ_1D698_50:
	V0 = EMU_ReadU32(S0 + 32); //+ 0x20
	EMU_Write32(S0 + 44,A1); //+ 0x2C
	V1 = EMU_ReadU32(V0 + 32); //+ 0x20
	V0 = A1 << 4;
	S1 = V0 + V1;
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	EMU_Write32(S0 + 208,V0); //+ 0xD0
	V0 = EMU_ReadU32(S0 + 32); //+ 0x20
	A0 = EMU_ReadU16(S1 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 24); //+ 0x18
	A0 <<= 2;
	RA = 0x8001D720; //ZZ_1D698_88
	A0 += V0;
	ZZ_CLOCKCYCLES(14,0x80015A98);
	goto ZZ_15A98;
ZZ_1D698_88:
	V1 = V0;
	EMU_Write32(S0 + 36,V1); //+ 0x24
	A0 = EMU_ReadU16(S1 + 14); //+ 0xE
	V0 = 0x3FFF;
	if (A0 == V0)
	{
		V0 = A0 << 2;
		ZZ_CLOCKCYCLES(6,0x8001D744);
		goto ZZ_1D698_AC;
	}
	V0 = A0 << 2;
	V1 = EMU_ReadU32(V1 + 20); //+ 0x14
	V0 += V1;
	ZZ_CLOCKCYCLES(9,0x8001D748);
	goto ZZ_1D698_B0;
ZZ_1D698_AC:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8001D748);
ZZ_1D698_B0:
	EMU_Write32(S0 + 224,V0); //+ 0xE0
	A0 = EMU_ReadU16(S1 + 10); //+ 0xA
	V0 = 0x3FFF;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001D774);
		goto ZZ_1D698_DC;
	}
	V0 = EMU_ReadU32(S0 + 36); //+ 0x24
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = A0 << 2;
	V0 += V1;
	ZZ_CLOCKCYCLES(11,0x8001D778);
	goto ZZ_1D698_E0;
ZZ_1D698_DC:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8001D778);
ZZ_1D698_E0:
	EMU_Write32(S0 + 236,V0); //+ 0xEC
	A0 = EMU_ReadU16(S1 + 12); //+ 0xC
	V0 = 0x3FFF;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001D7A4);
		goto ZZ_1D698_10C;
	}
	V0 = EMU_ReadU32(S0 + 36); //+ 0x24
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = A0 << 2;
	V0 += V1;
	ZZ_CLOCKCYCLES(11,0x8001D7A8);
	goto ZZ_1D698_110;
ZZ_1D698_10C:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8001D7A8);
ZZ_1D698_110:
	V1 = EMU_ReadU32(S0 + 32); //+ 0x20
	A0 = 0x20000;
	EMU_Write32(S0 + 232,V0); //+ 0xE8
	V0 = S0 + 96;
	EMU_Write32(S0 + 240,R0); //+ 0xF0
	EMU_Write32(S0 + 228,V0); //+ 0xE4
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	A0 |= 0x20;
	V0 = EMU_ReadU32(V0 + 12); //+ 0xC
	A1 = R0;
	V0 <<= 2;
	V0 += 96;
	V0 += S0;
	EMU_Write32(S0 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	V1 = EMU_ReadU32(S1);
	V0 |= A0;
	EMU_Write32(S0 + 200,V0); //+ 0xC8
	if ((int32_t)S2 <= 0)
	{
		EMU_Write32(S0 + 288,V1); //+ 0x120
		ZZ_CLOCKCYCLES(20,0x8001D824);
		goto ZZ_1D698_18C;
	}
	EMU_Write32(S0 + 288,V1); //+ 0x120
	A3 = S4;
	ZZ_CLOCKCYCLES(21,0x8001D7FC);
ZZ_1D698_164:
	V1 = EMU_ReadU32(S0 + 220); //+ 0xDC
	A1 += 1;
	V0 = V1 + 4;
	EMU_Write32(S0 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(A3);
	EMU_Write32(V1,V0);
	V0 = (int32_t)A1 < (int32_t)S2;
	if (V0)
	{
		A3 += 4;
		ZZ_CLOCKCYCLES(10,0x8001D7FC);
		goto ZZ_1D698_164;
	}
	A3 += 4;
	ZZ_CLOCKCYCLES(10,0x8001D824);
ZZ_1D698_18C:
	A0 = S0;
	A1 = S2;
	RA = 0x8001D834; //ZZ_1D698_19C
	A2 = 0xFFFF;
	ZZ_CLOCKCYCLES(4,0x8001D914);
	goto ZZ_1D914;
ZZ_1D698_19C:
	if (!S3)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(2,0x8001D874);
		goto ZZ_1D698_1DC;
	}
	A0 = S0;
	A1 = R0;
	RA = 0x8001D848; //ZZ_1D698_1B0
	A2 = 0xFFFF;
	ZZ_CLOCKCYCLES(5,0x8001D914);
	goto ZZ_1D914;
ZZ_1D698_1B0:
	EMU_Write32(S0 + 224,S3); //+ 0xE0
	A0 = S0;
	A1 = 0x13;
	RA = 0x8001D85C; //ZZ_1D698_1C4
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x800201DC);
	goto ZZ_201DC;
ZZ_1D698_1C4:
	A1 = V0;
	V0 = (int32_t)A1 < -254;
	if (V0)
	{
		V0 = A1;
		ZZ_CLOCKCYCLES(4,0x8001D888);
		goto ZZ_1D698_1F0;
	}
	V0 = A1;
	ZZ_CLOCKCYCLES(6,0x8001D8F0);
	goto ZZ_1D698_258;
ZZ_1D698_1DC:
	V1 = EMU_ReadU32(S0 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S0 + 220,V0); //+ 0xDC
	EMU_Write32(V1,R0);
	ZZ_CLOCKCYCLES(5,0x8001D888);
ZZ_1D698_1F0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = EMU_ReadU32(S0 + 232); //+ 0xE8
	if (!V1)
	{
		EMU_Write32(S0 + 256,V0); //+ 0x100
		ZZ_CLOCKCYCLES(6,0x8001D8EC);
		goto ZZ_1D698_254;
	}
	EMU_Write32(S0 + 256,V0); //+ 0x100
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3584); //+ 0xE00
	if (S0 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(11,0x8001D8F0);
		goto ZZ_1D698_258;
	}
	V0 = -255;
	A0 = S0;
	A1 = R0;
	RA = 0x8001D8C4; //ZZ_1D698_22C
	A2 = 0xFFFF;
	ZZ_CLOCKCYCLES(15,0x8001D914);
	goto ZZ_1D914;
ZZ_1D698_22C:
	A0 = S0;
	A1 = 0x3;
	V0 = EMU_ReadU32(A0 + 232); //+ 0xE8
	A2 = R0;
	RA = 0x8001D8DC; //ZZ_1D698_244
	EMU_Write32(A0 + 224,V0); //+ 0xE0
	ZZ_CLOCKCYCLES(6,0x800201DC);
	goto ZZ_201DC;
ZZ_1D698_244:
	A1 = V0;
	V0 = (int32_t)A1 < -254;
	if (!V0)
	{
		V0 = A1;
		ZZ_CLOCKCYCLES(4,0x8001D8F0);
		goto ZZ_1D698_258;
	}
	V0 = A1;
	ZZ_CLOCKCYCLES(4,0x8001D8EC);
ZZ_1D698_254:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001D8F0);
ZZ_1D698_258:
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x80024358,ZZ_24040_318);
	//ZZ_JUMPREGISTER(0x80022F34,ZZ_201DC_2D58);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001D698,0x8001D6E0,ZZ_1D698);
ZZ_MARK_TARGET(0x8001D6E0,0x8001D6E8,ZZ_1D698_48);
ZZ_MARK_TARGET(0x8001D6E8,0x8001D720,ZZ_1D698_50);
ZZ_MARK_TARGET(0x8001D720,0x8001D744,ZZ_1D698_88);
ZZ_MARK_TARGET(0x8001D744,0x8001D748,ZZ_1D698_AC);
ZZ_MARK_TARGET(0x8001D748,0x8001D774,ZZ_1D698_B0);
ZZ_MARK_TARGET(0x8001D774,0x8001D778,ZZ_1D698_DC);
ZZ_MARK_TARGET(0x8001D778,0x8001D7A4,ZZ_1D698_E0);
ZZ_MARK_TARGET(0x8001D7A4,0x8001D7A8,ZZ_1D698_10C);
ZZ_MARK_TARGET(0x8001D7A8,0x8001D7FC,ZZ_1D698_110);
ZZ_MARK_TARGET(0x8001D7FC,0x8001D824,ZZ_1D698_164);
ZZ_MARK_TARGET(0x8001D824,0x8001D834,ZZ_1D698_18C);
ZZ_MARK_TARGET(0x8001D834,0x8001D848,ZZ_1D698_19C);
ZZ_MARK_TARGET(0x8001D848,0x8001D85C,ZZ_1D698_1B0);
ZZ_MARK_TARGET(0x8001D85C,0x8001D874,ZZ_1D698_1C4);
ZZ_MARK_TARGET(0x8001D874,0x8001D888,ZZ_1D698_1DC);
ZZ_MARK_TARGET(0x8001D888,0x8001D8C4,ZZ_1D698_1F0);
ZZ_MARK_TARGET(0x8001D8C4,0x8001D8DC,ZZ_1D698_22C);
ZZ_MARK_TARGET(0x8001D8DC,0x8001D8EC,ZZ_1D698_244);
ZZ_MARK_TARGET(0x8001D8EC,0x8001D8F0,ZZ_1D698_254);
ZZ_MARK_TARGET(0x8001D8F0,0x8001D914,ZZ_1D698_258);
