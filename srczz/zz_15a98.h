#ifdef ZZ_INCLUDE_CODE
ZZ_15A98:
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	A1 = EMU_ReadU32(A0);
  /* begin extended code */
  #ifdef C1C_ENABLE_INGAMEMENU
  if (A1 == 0x52C2E06F)  // i.e. EID passed to routine
  {
    uint32_t tpages = 0x800580A0;
    for (int i=8;i<16;i++)
    {
      uint32_t tpage = tpages+(i*0x2C);
      uint32_t tpageEID = EMU_ReadU32(tpage+0x18);
      if (tpageEID == A1)
      {
        uint32_t tpagestatus = EMU_ReadU16(tpage+0x4);
        if (tpagestatus == 0x14)
        {
          uint32_t tpageinfo = EMU_ReadU32(tpage+0x1C);
          V0 = tpageinfo;
          goto ZZ_15A98_AC;
        }
        else
          break;
      }
    }
  }
  #endif
  /* end extended code */
	V0 = A1 & 0x1;
	if (!V0)
	{
		V0 = A1 >> 13;
		ZZ_CLOCKCYCLES(8,0x80015B04);
		goto ZZ_15A98_6C;
	}
	V0 = A1 >> 13;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15056); //+ 0xFFFFC530
	V0 &= 0x3FC;
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 == A1)
	{
		A2 = A1;
		ZZ_CLOCKCYCLES(18,0x80015AF8);
		goto ZZ_15A98_60;
	}
	A2 = A1;
	V1 += 8;
	ZZ_CLOCKCYCLES(19,0x80015AE4);
ZZ_15A98_4C:
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 != A2)
	{
		V1 += 8;
		ZZ_CLOCKCYCLES(4,0x80015AE4);
		goto ZZ_15A98_4C;
	}
	V1 += 8;
	V1 -= 8;
	ZZ_CLOCKCYCLES(5,0x80015AF8);
ZZ_15A98_60:
	EMU_Write32(A0,V1);
	S0 = V1;
	ZZ_CLOCKCYCLES(3,0x80015B08);
	goto ZZ_15A98_70;
ZZ_15A98_6C:
	S0 = A1;
	ZZ_CLOCKCYCLES(1,0x80015B08);
ZZ_15A98_70:
	A0 = EMU_ReadU32(S0);
	V0 = A0 & 0x1;
	if (!V0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(5,0x80015B44);
		goto ZZ_15A98_AC;
	}
	V0 = A0;
	A1 = EMU_ReadU32(S0 + 4); //+ 0x4
	RA = 0x80015B28; //ZZ_15A98_90
	ZZ_CLOCKCYCLES(8,0x80014C08);
	goto ZZ_14C08;
ZZ_15A98_90:
	V1 = EMU_ReadU32(S0);
	V0 = V1 & 0x1;
	if (V0)
	{
		A0 = -10;
		ZZ_CLOCKCYCLES(5,0x80015B40);
		goto ZZ_15A98_A8;
	}
	A0 = -10;
	A0 = V1;
	ZZ_CLOCKCYCLES(6,0x80015B40);
ZZ_15A98_A8:
	V0 = A0;
	ZZ_CLOCKCYCLES(1,0x80015B44);
ZZ_15A98_AC:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8001E1A0,ZZ_1DE78_328);
	ZZ_JUMPREGISTER(0x8001EFB4,ZZ_1EEA8_10C);
	ZZ_JUMPREGISTER(0x8001E1F8,ZZ_1DE78_380);
	ZZ_JUMPREGISTER(0x8001E1BC,ZZ_1DE78_344);
	ZZ_JUMPREGISTER(0x8001D3BC,ZZ_1D33C_80);
	ZZ_JUMPREGISTER(0x8001D390,ZZ_1D33C_54);
	ZZ_JUMPREGISTER(0x80018994,ZZ_18964_30);
	ZZ_JUMPREGISTER(0x80018A70,ZZ_18A40_30);
	ZZ_JUMPREGISTER(0x80032178,ZZ_31EB4_2C4);
	ZZ_JUMPREGISTER(0x8001DFC0,ZZ_1DE78_148);
	ZZ_JUMPREGISTER(0x8001E0D8,ZZ_1DE78_260);
  //ZZ_JUMPREGISTER(0x80023570,ZZ_201DC_3394);
	ZZ_JUMPREGISTER(0x80026E20,ZZ_26DD4_4C);
	ZZ_JUMPREGISTER(0x80030540,ZZ_304C8_78);
  //ZZ_JUMPREGISTER(0x8002280C,ZZ_201DC_2630);
	ZZ_JUMPREGISTER(0x8002598C,ZZ_25928_64);
	ZZ_JUMPREGISTER(0x8001E8EC,ZZ_1E7D8_114);
  //ZZ_JUMPREGISTER(0x80023594,ZZ_201DC_33B8);
	ZZ_JUMPREGISTER(0x80026F10,ZZ_26DD4_13C);
  //ZZ_JUMPREGISTER(0x800235B4,ZZ_201DC_33D8);
	ZZ_JUMPREGISTER(0x80033088,ZZ_32FDC_AC);
	ZZ_JUMPREGISTER(0x80026708,ZZ_26650_B8);
	ZZ_JUMPREGISTER(0x8002787C,ZZ_277EC_90);
	ZZ_JUMPREGISTER(0x80025D58,ZZ_25A60_2F8);
	ZZ_JUMPREGISTER(0x800286D4,ZZ_28644_90);
	ZZ_JUMPREGISTER(0x80028A78,ZZ_289B4_C4);
	ZZ_JUMPREGISTER(0x80025D88,ZZ_25A60_328);
	ZZ_JUMPREGISTER(0x80025F24,ZZ_25A60_4C4);
	ZZ_JUMPREGISTER(0x8002BAE8,ZZ_2BAB4_34);
	ZZ_JUMPREGISTER(0x8002BB0C,ZZ_2BAB4_58);
	ZZ_JUMPREGISTER(0x8002BB2C,ZZ_2BAB4_78);
	ZZ_JUMPREGISTER(0x80033180,ZZ_32FDC_1A4);
	ZZ_JUMPREGISTER(0x80028F50,ZZ_28E3C_114);
	ZZ_JUMPREGISTER(0x8002B6BC,ZZ_2B2BC_400);
	ZZ_JUMPREGISTER(0x8002B600,ZZ_2B2BC_344);
	ZZ_JUMPREGISTER(0x8002B464,ZZ_2B2BC_1A8);
	ZZ_JUMPREGISTER(0x8002B984,ZZ_2B2BC_6C8);
	ZZ_JUMPREGISTER(0x800297C4,ZZ_296A8_11C);
	ZZ_JUMPREGISTER(0x80032EF4,ZZ_32DFC_F8);
	ZZ_JUMPREGISTER(0x80032F08,ZZ_32DFC_10C);
	ZZ_JUMPREGISTER(0x80032F68,ZZ_32DFC_16C);
	ZZ_JUMPREGISTER(0x80032F74,ZZ_32DFC_178);
	ZZ_JUMPREGISTER(0x8002AB98,ZZ_2A82C_36C);
	ZZ_JUMPREGISTER(0x8001A654,ZZ_1A5F4_60);
	ZZ_JUMPREGISTER(0x8002AEDC,ZZ_2A82C_6B0);
	ZZ_JUMPREGISTER(0x80029574,ZZ_294B0_C4);
	ZZ_JUMPREGISTER(0x8001927C,ZZ_1922C_50);
	ZZ_JUMPREGISTER(0x80019424,ZZ_1922C_1F8);
	ZZ_JUMPREGISTER(0x8001A4C4,ZZ_1A460_64);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80015A98,0x80015AE4,ZZ_15A98);
ZZ_MARK_TARGET(0x80015AE4,0x80015AF8,ZZ_15A98_4C);
ZZ_MARK_TARGET(0x80015AF8,0x80015B04,ZZ_15A98_60);
ZZ_MARK_TARGET(0x80015B04,0x80015B08,ZZ_15A98_6C);
ZZ_MARK_TARGET(0x80015B08,0x80015B28,ZZ_15A98_70);
ZZ_MARK_TARGET(0x80015B28,0x80015B40,ZZ_15A98_90);
ZZ_MARK_TARGET(0x80015B40,0x80015B44,ZZ_15A98_A8);
ZZ_MARK_TARGET(0x80015B44,0x80015B58,ZZ_15A98_AC);
