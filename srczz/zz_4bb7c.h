#ifdef ZZ_INCLUDE_CODE
ZZ_4BB7C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15072); //+ 0xFFFFC520
	SP -= 56;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	EMU_Write32(SP + 40,S2); //+ 0x28
	EMU_Write32(SP + 36,S1); //+ 0x24
	V1 = 0x1;
	if (V0 == V1)
	{
		EMU_Write32(SP + 32,S0); //+ 0x20
		ZZ_CLOCKCYCLES(11,0x8004BD94);
		goto ZZ_4BB7C_218;
	}
	EMU_Write32(SP + 32,S0); //+ 0x20
	AT = 0x80060000;
	EMU_Write32(AT - 15072,V1); //+ 0xFFFFC520
	RA = 0x8004BBB8; //ZZ_4BB7C_3C
	S2 = R0;
	ZZ_CLOCKCYCLES(15,0x8004D680);
	goto ZZ_4D680;
ZZ_4BB7C_3C:
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 + 3224); //+ 0xC98
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8004BD8C);
		goto ZZ_4BB7C_210;
	}
	S4 = 0x80060000;
	S4 += 1048;
	ZZ_CLOCKCYCLES(7,0x8004BBD4);
ZZ_4BB7C_58:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 6840); //+ 0xFFFFE548
	V0 = 0x1;
	V0 <<= S2;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004BD74);
		goto ZZ_4BB7C_1F8;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 + 3232); //+ 0xCA0
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(12,0x8004BD74);
		goto ZZ_4BB7C_1F8;
	}
	S0 = R0;
	S3 = S4;
	S1 = R0;
	ZZ_CLOCKCYCLES(14,0x8004BC0C);
ZZ_4BB7C_90:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x1;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BCD4);
		goto ZZ_4BB7C_158;
	}
	A0 = S2;
	RA = 0x8004BC34; //ZZ_4BB7C_B8
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C39C);
	goto ZZ_4C39C;
ZZ_4BB7C_B8:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x10;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BC5C);
		goto ZZ_4BB7C_E0;
	}
	A0 = S2;
	RA = 0x8004BC5C; //ZZ_4BB7C_E0
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004BDB4);
	goto ZZ_4BDB4;
ZZ_4BB7C_E0:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x20;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BC84);
		goto ZZ_4BB7C_108;
	}
	A0 = S2;
	RA = 0x8004BC84; //ZZ_4BB7C_108
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C074);
	goto ZZ_4C074;
ZZ_4BB7C_108:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x40;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BCAC);
		goto ZZ_4BB7C_130;
	}
	A0 = S2;
	RA = 0x8004BCAC; //ZZ_4BB7C_130
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004CDCC);
	goto ZZ_4CDCC;
ZZ_4BB7C_130:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x80;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BCD4);
		goto ZZ_4BB7C_158;
	}
	A0 = S2;
	RA = 0x8004BCD4; //ZZ_4BB7C_158
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004CDCC);
	goto ZZ_4CDCC;
ZZ_4BB7C_158:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x2;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BCFC);
		goto ZZ_4BB7C_180;
	}
	A0 = S2;
	RA = 0x8004BCFC; //ZZ_4BB7C_180
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C300);
	goto ZZ_4C300;
ZZ_4BB7C_180:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x8;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BD24);
		goto ZZ_4BB7C_1A8;
	}
	A0 = S2;
	RA = 0x8004BD24; //ZZ_4BB7C_1A8
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C764);
	goto ZZ_4C764;
ZZ_4BB7C_1A8:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	V0 = EMU_ReadU32(V0 + 144); //+ 0x90
	V0 &= 0x4;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(8,0x8004BD5C);
		goto ZZ_4BB7C_1E0;
	}
	A0 = S2;
	RA = 0x8004BD4C; //ZZ_4BB7C_1D0
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C7CC);
	goto ZZ_4C7CC;
ZZ_4BB7C_1D0:
	V0 = EMU_ReadU32(S3);
	V0 += S1;
	EMU_Write32(V0 + 144,R0); //+ 0x90
	ZZ_CLOCKCYCLES(4,0x8004BD5C);
ZZ_4BB7C_1E0:
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 + 3232); //+ 0xCA0
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 += 172;
		ZZ_CLOCKCYCLES(6,0x8004BC0C);
		goto ZZ_4BB7C_90;
	}
	S1 += 172;
	ZZ_CLOCKCYCLES(6,0x8004BD74);
ZZ_4BB7C_1F8:
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 + 3224); //+ 0xC98
	S2 += 1;
	V0 = (int32_t)S2 < (int32_t)V0;
	if (V0)
	{
		S4 += 4;
		ZZ_CLOCKCYCLES(6,0x8004BBD4);
		goto ZZ_4BB7C_58;
	}
	S4 += 4;
	ZZ_CLOCKCYCLES(6,0x8004BD8C);
ZZ_4BB7C_210:
	AT = 0x80060000;
	EMU_Write32(AT - 15072,R0); //+ 0xFFFFC520
	ZZ_CLOCKCYCLES(2,0x8004BD94);
ZZ_4BB7C_218:
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 56;
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8004B858,ZZ_4B828_30);
	ZZ_JUMPREGISTER(0x8004B8A8,ZZ_4B868_40);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004BB7C,0x8004BBB8,ZZ_4BB7C);
ZZ_MARK_TARGET(0x8004BBB8,0x8004BBD4,ZZ_4BB7C_3C);
ZZ_MARK_TARGET(0x8004BBD4,0x8004BC0C,ZZ_4BB7C_58);
ZZ_MARK_TARGET(0x8004BC0C,0x8004BC34,ZZ_4BB7C_90);
ZZ_MARK_TARGET(0x8004BC34,0x8004BC5C,ZZ_4BB7C_B8);
ZZ_MARK_TARGET(0x8004BC5C,0x8004BC84,ZZ_4BB7C_E0);
ZZ_MARK_TARGET(0x8004BC84,0x8004BCAC,ZZ_4BB7C_108);
ZZ_MARK_TARGET(0x8004BCAC,0x8004BCD4,ZZ_4BB7C_130);
ZZ_MARK_TARGET(0x8004BCD4,0x8004BCFC,ZZ_4BB7C_158);
ZZ_MARK_TARGET(0x8004BCFC,0x8004BD24,ZZ_4BB7C_180);
ZZ_MARK_TARGET(0x8004BD24,0x8004BD4C,ZZ_4BB7C_1A8);
ZZ_MARK_TARGET(0x8004BD4C,0x8004BD5C,ZZ_4BB7C_1D0);
ZZ_MARK_TARGET(0x8004BD5C,0x8004BD74,ZZ_4BB7C_1E0);
ZZ_MARK_TARGET(0x8004BD74,0x8004BD8C,ZZ_4BB7C_1F8);
ZZ_MARK_TARGET(0x8004BD8C,0x8004BD94,ZZ_4BB7C_210);
ZZ_MARK_TARGET(0x8004BD94,0x8004BDB4,ZZ_4BB7C_218);
