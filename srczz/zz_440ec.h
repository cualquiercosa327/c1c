#ifdef ZZ_INCLUDE_CODE
ZZ_440EC:
	SP -= 56;
	EMU_Write32(SP + 44,S5); //+ 0x2C
	S5 = A0;
	EMU_Write32(SP + 48,S6); //+ 0x30
	S6 = A1;
	A0 = -1;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	RA = 0x80044120; //ZZ_440EC_34
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(13,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_440EC_34:
	S3 = 0x80050000;
	S3 += 22084;
	S2 = 0x80050000;
	S2 += 22652;
	S4 = S2 + 1;
	V0 += 480;
	AT = 0x80050000;
	EMU_Write32(AT + 29104,V0); //+ 0x71B0
	V0 = 0x80010000;
	V0 += 5504;
	AT = 0x80050000;
	EMU_Write32(AT + 29108,R0); //+ 0x71B4
	AT = 0x80050000;
	EMU_Write32(AT + 29112,V0); //+ 0x71B8
	ZZ_CLOCKCYCLES(14,0x80044158);
ZZ_440EC_6C:
	RA = 0x80044160; //ZZ_440EC_74
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_440EC_74:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29104); //+ 0x71B0
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x800441A0);
		goto ZZ_440EC_B4;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29108); //+ 0x71B4
	V0 = V1 + 1;
	AT = 0x80050000;
	EMU_Write32(AT + 29108,V0); //+ 0x71B4
	V0 = 0x1E0000;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x80044218);
		goto ZZ_440EC_12C;
	}
	ZZ_CLOCKCYCLES(16,0x800441A0);
ZZ_440EC_B4:
	A0 = 0x80010000;
	A0 += 5368;
	RA = 0x800441B0; //ZZ_440EC_C4
	ZZ_CLOCKCYCLES(4,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_440EC_C4:
	A0 = EMU_ReadU8(S2);
	V0 = EMU_ReadU8(S2 + 1); //+ 0x1
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 29112); //+ 0x71B8
	V0 <<= 2;
	V0 += S3;
	A0 <<= 2;
	V1 = EMU_ReadU32(V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 21953); //+ 0x55C1
	A0 += S3;
	V0 <<= 2;
	EMU_Write32(SP + 16,V1); //+ 0x10
	AT = 0x80050000;
	AT += 21956;
	AT += V0;
	A2 = EMU_ReadU32(AT);
	A3 = EMU_ReadU32(A0);
	A0 = 0x80010000;
	A0 += 5384;
	RA = 0x80044208; //ZZ_440EC_11C
	ZZ_CLOCKCYCLES(22,0x8003D730);
	goto ZZ_3D730;
ZZ_440EC_11C:
	RA = 0x80044210; //ZZ_440EC_124
	ZZ_CLOCKCYCLES(2,0x80044C40);
	goto ZZ_44C40;
ZZ_440EC_124:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004421C);
	goto ZZ_440EC_130;
ZZ_440EC_12C:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8004421C);
ZZ_440EC_130:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80044344);
		goto ZZ_440EC_258;
	}
	V0 = -1;
	RA = 0x8004422C; //ZZ_440EC_140
	ZZ_CLOCKCYCLES(4,0x8003E848);
	goto ZZ_3E848;
ZZ_440EC_140:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800442DC);
		goto ZZ_440EC_1F0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	V0 = EMU_ReadU8(V0);
	S1 = V0 & 0x3;
	ZZ_CLOCKCYCLES(8,0x8004424C);
ZZ_440EC_160:
	RA = 0x80044254; //ZZ_440EC_168
	ZZ_CLOCKCYCLES(2,0x80043BA8);
	goto ZZ_43BA8;
ZZ_440EC_168:
	S0 = V0;
	if (!S0)
	{
		V0 = S0 & 0x4;
		ZZ_CLOCKCYCLES(3,0x800442CC);
		goto ZZ_440EC_1E0;
	}
	V0 = S0 & 0x4;
	if (!V0)
	{
		V0 = S0 & 0x2;
		ZZ_CLOCKCYCLES(5,0x80044294);
		goto ZZ_440EC_1A8;
	}
	V0 = S0 & 0x2;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21924); //+ 0x55A4
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80044290);
		goto ZZ_440EC_1A4;
	}
	A0 = EMU_ReadU8(S4);
	A1 = 0x80050000;
	A1 += 29088;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80044290; //ZZ_440EC_1A4
	ZZ_CLOCKCYCLES_JR(15);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80044288)
	ZZ_JUMPREGISTER_END();
ZZ_440EC_1A4:
	V0 = S0 & 0x2;
	ZZ_CLOCKCYCLES(1,0x80044294);
ZZ_440EC_1A8:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8004424C);
		goto ZZ_440EC_160;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21920); //+ 0x55A0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004424C);
		goto ZZ_440EC_160;
	}
	A0 = EMU_ReadU8(S2);
	A1 = 0x80050000;
	A1 += 29080;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800442C4; //ZZ_440EC_1D8
	ZZ_CLOCKCYCLES_JR(12);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800442BC)
	ZZ_JUMPREGISTER_END();
ZZ_440EC_1D8:
	ZZ_CLOCKCYCLES(2,0x8004424C);
	goto ZZ_440EC_160;
ZZ_440EC_1E0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	EMU_Write8(V0,S1);
	ZZ_CLOCKCYCLES(4,0x800442DC);
ZZ_440EC_1F0:
	V0 = EMU_ReadU8(S2);
	A2 = V0 & 0xFF;
	V0 = 0x2;
	if (A2 == V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(6,0x800442FC);
		goto ZZ_440EC_210;
	}
	V0 = 0x5;
	if (A2 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004433C);
		goto ZZ_440EC_250;
	}
	ZZ_CLOCKCYCLES(8,0x800442FC);
ZZ_440EC_210:
	V0 = 0x2;
	EMU_Write8(S2,V0);
	A1 = S6;
	A0 = 0x80050000;
	A0 += 29080;
	if (!A1)
	{
		V1 = 0x7;
		ZZ_CLOCKCYCLES(7,0x80044334);
		goto ZZ_440EC_248;
	}
	V1 = 0x7;
	A3 = -1;
	ZZ_CLOCKCYCLES(8,0x8004431C);
ZZ_440EC_230:
	V0 = EMU_ReadU8(A0);
	A0 += 1;
	V1 -= 1;
	EMU_Write8(A1,V0);
	if (V1 != A3)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x8004431C);
		goto ZZ_440EC_230;
	}
	A1 += 1;
	ZZ_CLOCKCYCLES(6,0x80044334);
ZZ_440EC_248:
	V0 = A2;
	ZZ_CLOCKCYCLES(2,0x80044344);
	goto ZZ_440EC_258;
ZZ_440EC_250:
	if (!S5)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x80044158);
		goto ZZ_440EC_6C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80044344);
ZZ_440EC_258:
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S6 = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80044720,ZZ_44640_E0);
	ZZ_JUMPREGISTER(0x800434A8,ZZ_43498_10);
	ZZ_JUMPREGISTER(0x80045178,ZZ_44E8C_2EC);
	ZZ_JUMPREGISTER(0x800455F0,ZZ_45518_D8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800440EC,0x80044120,ZZ_440EC);
ZZ_MARK_TARGET(0x80044120,0x80044158,ZZ_440EC_34);
ZZ_MARK_TARGET(0x80044158,0x80044160,ZZ_440EC_6C);
ZZ_MARK_TARGET(0x80044160,0x800441A0,ZZ_440EC_74);
ZZ_MARK_TARGET(0x800441A0,0x800441B0,ZZ_440EC_B4);
ZZ_MARK_TARGET(0x800441B0,0x80044208,ZZ_440EC_C4);
ZZ_MARK_TARGET(0x80044208,0x80044210,ZZ_440EC_11C);
ZZ_MARK_TARGET(0x80044210,0x80044218,ZZ_440EC_124);
ZZ_MARK_TARGET(0x80044218,0x8004421C,ZZ_440EC_12C);
ZZ_MARK_TARGET(0x8004421C,0x8004422C,ZZ_440EC_130);
ZZ_MARK_TARGET(0x8004422C,0x8004424C,ZZ_440EC_140);
ZZ_MARK_TARGET(0x8004424C,0x80044254,ZZ_440EC_160);
ZZ_MARK_TARGET(0x80044254,0x80044290,ZZ_440EC_168);
ZZ_MARK_TARGET(0x80044290,0x80044294,ZZ_440EC_1A4);
ZZ_MARK_TARGET(0x80044294,0x800442C4,ZZ_440EC_1A8);
ZZ_MARK_TARGET(0x800442C4,0x800442CC,ZZ_440EC_1D8);
ZZ_MARK_TARGET(0x800442CC,0x800442DC,ZZ_440EC_1E0);
ZZ_MARK_TARGET(0x800442DC,0x800442FC,ZZ_440EC_1F0);
ZZ_MARK_TARGET(0x800442FC,0x8004431C,ZZ_440EC_210);
ZZ_MARK_TARGET(0x8004431C,0x80044334,ZZ_440EC_230);
ZZ_MARK_TARGET(0x80044334,0x8004433C,ZZ_440EC_248);
ZZ_MARK_TARGET(0x8004433C,0x80044344,ZZ_440EC_250);
ZZ_MARK_TARGET(0x80044344,0x80044370,ZZ_440EC_258);
