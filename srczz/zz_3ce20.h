#ifdef ZZ_INCLUDE_CODE
ZZ_3CE20:
	SP -= 24;
	A0 = 0x1;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x8003CE34; //ZZ_3CE20_14
	A1 = 0x6F4;
	ZZ_CLOCKCYCLES(5,0x80011D30);
	goto ZZ_11D30;
ZZ_3CE20_14:
	V1 = EMU_ReadU32(GP + 364); //+ 0x16C
	A2 = V0;
	EMU_Write32(GP + 360,A2); //+ 0x168
	if (!V1)
	{
		V1 = -17;
		ZZ_CLOCKCYCLES(5,0x8003CE7C);
		goto ZZ_3CE20_5C;
	}
	V1 = -17;
	A0 = 0x80050000;
	A0 += 28732;
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	A1 = 0x80050000;
	A1 += 26000;
	V0 |= 0x10;
	EMU_Write32(A2 + 4,V0); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 6520,V0); //+ 0x1978
	RA = 0x8003CE74; //ZZ_3CE20_54
	ZZ_CLOCKCYCLES(16,0x8003D740);
	goto ZZ_3D740;
ZZ_3CE20_54:
	ZZ_CLOCKCYCLES(2,0x8003CE8C);
	goto ZZ_3CE20_6C;
ZZ_3CE20_5C:
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	V0 &= V1;
	EMU_Write32(A2 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x8003CE8C);
ZZ_3CE20_6C:
	RA = 0x8003CE94; //ZZ_3CE20_74
	A0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x8003CD60);
	goto ZZ_3CD60;
ZZ_3CE20_74:
	V0 = R0;
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80016C64,ZZ_16C18_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003CE20,0x8003CE34,ZZ_3CE20);
ZZ_MARK_TARGET(0x8003CE34,0x8003CE74,ZZ_3CE20_14);
ZZ_MARK_TARGET(0x8003CE74,0x8003CE7C,ZZ_3CE20_54);
ZZ_MARK_TARGET(0x8003CE7C,0x8003CE8C,ZZ_3CE20_5C);
ZZ_MARK_TARGET(0x8003CE8C,0x8003CE94,ZZ_3CE20_6C);
ZZ_MARK_TARGET(0x8003CE94,0x8003CEA8,ZZ_3CE20_74);
