#ifdef ZZ_INCLUDE_CODE
ZZ_4D680:
	SP -= 64;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S5); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	EMU_Write32(SP + 40,S2); //+ 0x28
	EMU_Write32(SP + 36,S1); //+ 0x24
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = R0;
	S3 = R0;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 6332); //+ 0xFFFFE744
	V1 = 0x80060000;
	V1 += 3440;
	A0 = 0x80060000;
	A0 = EMU_ReadU8(A0 - 7360); //+ 0xFFFFE340
	V0 += 1;
	V0 &= 0xF;
	AT = 0x80060000;
	EMU_Write32(AT - 6332,V0); //+ 0xFFFFE744
	V0 <<= 2;
	V0 += V1;
	if ((int32_t)A0 <= 0)
	{
		EMU_Write32(V0,R0);
		ZZ_CLOCKCYCLES(24,0x8004D73C);
		goto ZZ_4D680_BC;
	}
	EMU_Write32(V0,R0);
	A2 = V0;
	T0 = 0x1;
	A3 = A0;
	A0 = 0x80050000;
	A0 += 29362;
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 25200); //+ 0x6270
	ZZ_CLOCKCYCLES(31,0x8004D6FC);
ZZ_4D680_7C:
	V0 = EMU_ReadU16(A1 + 12); //+ 0xC
	EMU_Write16(A0,V0);
	V0 = EMU_ReadU16(A0);
	if (V0)
	{
		A0 += 52;
		ZZ_CLOCKCYCLES(8,0x8004D72C);
		goto ZZ_4D680_AC;
	}
	A0 += 52;
	V1 = EMU_ReadU32(A2);
	V0 = T0 << S0;
	V0 |= V1;
	EMU_Write32(A2,V0);
	ZZ_CLOCKCYCLES(12,0x8004D72C);
ZZ_4D680_AC:
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)A3;
	if (V0)
	{
		A1 += 16;
		ZZ_CLOCKCYCLES(4,0x8004D6FC);
		goto ZZ_4D680_7C;
	}
	A1 += 16;
	ZZ_CLOCKCYCLES(4,0x8004D73C);
ZZ_4D680_BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 6384); //+ 0xFFFFE710
	if (V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(5,0x8004D7F0);
		goto ZZ_4D680_170;
	}
	S0 = R0;
	S2 = -1;
	V1 = 0x80060000;
	V1 += 3440;
	ZZ_CLOCKCYCLES(8,0x8004D75C);
ZZ_4D680_DC:
	V0 = EMU_ReadU32(V1);
	S0 += 1;
	S2 &= V0;
	V0 = (int32_t)S0 < 15;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(6,0x8004D75C);
		goto ZZ_4D680_DC;
	}
	V1 += 4;
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(11,0x8004D7EC);
		goto ZZ_4D680_16C;
	}
	S0 = R0;
	S5 = 0x1;
	S4 = 0x2;
	S1 = R0;
	ZZ_CLOCKCYCLES(14,0x8004D794);
ZZ_4D680_114:
	V0 = S5 << S0;
	V0 &= S2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8004D7D4);
		goto ZZ_4D680_154;
	}
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadU8(AT + 29383); //+ 0x72C7
	if (V0 != S4)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(10,0x8004D7C8);
		goto ZZ_4D680_148;
	}
	A0 = R0;
	A1 = 0xFF0000;
	RA = 0x8004D7C8; //ZZ_4D680_148
	A1 |= 0xFFFF;
	ZZ_CLOCKCYCLES(13,0x8004DA78);
	goto ZZ_4DA78;
ZZ_4D680_148:
	AT = 0x80050000;
	AT += S1;
	EMU_Write8(AT + 29383,R0); //+ 0x72C7
	ZZ_CLOCKCYCLES(3,0x8004D7D4);
ZZ_4D680_154:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 += 52;
		ZZ_CLOCKCYCLES(6,0x8004D794);
		goto ZZ_4D680_114;
	}
	S1 += 52;
	ZZ_CLOCKCYCLES(6,0x8004D7EC);
ZZ_4D680_16C:
	S0 = R0;
	ZZ_CLOCKCYCLES(1,0x8004D7F0);
ZZ_4D680_170:
	S1 = R0;
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 6760); //+ 0x1A68
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 29260); //+ 0x724C
	A0 = 0x80060000;
	A0 = EMU_ReadU16(A0 + 6768); //+ 0x1A70
	A1 = 0x80050000;
	A1 = EMU_ReadU16(A1 + 29268); //+ 0x7254
	V0 = ~V0;
	V1 &= V0;
	AT = 0x80050000;
	EMU_Write16(AT + 29260,V1); //+ 0x724C
	A0 = ~A0;
	A1 &= A0;
	AT = 0x80050000;
	EMU_Write16(AT + 29268,A1); //+ 0x7254
	ZZ_CLOCKCYCLES(17,0x8004D834);
ZZ_4D680_1B4:
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadS16(AT + 29384); //+ 0x72C8
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8004D860);
		goto ZZ_4D680_1E0;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 6392); //+ 0xFFFFE708
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004D860; //ZZ_4D680_1E0
	A0 = S0;
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004D858)
	ZZ_JUMPREGISTER_END();
ZZ_4D680_1E0:
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadS16(AT + 29396); //+ 0x72D4
	if (!V0)
	{
		S1 += 52;
		ZZ_CLOCKCYCLES(6,0x8004D88C);
		goto ZZ_4D680_20C;
	}
	S1 += 52;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 6832); //+ 0xFFFFE550
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004D88C; //ZZ_4D680_20C
	A0 = S0;
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004D884)
	ZZ_JUMPREGISTER_END();
ZZ_4D680_20C:
	S0 += 1;
	V0 = (int32_t)S0 < 24;
	if (V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x8004D834);
		goto ZZ_4D680_1B4;
	}
	A0 = R0;
	A1 = 0x80050000;
	A1 += 30628;
	V0 = 0x80060000;
	V0 -= 6776;
	T1 = V0 + 10;
	T0 = V0 + 8;
	A3 = V0 + 2;
	A2 = V0;
	ZZ_CLOCKCYCLES(12,0x8004D8BC);
ZZ_4D680_23C:
	V0 = EMU_ReadU8(A1);
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004D8F0);
		goto ZZ_4D680_270;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25200); //+ 0x6270
	V1 = EMU_ReadU16(A2);
	V0 += A0;
	EMU_Write16(V0,V1);
	V1 = EMU_ReadU16(A3);
	EMU_Write16(V0 + 2,V1); //+ 0x2
	ZZ_CLOCKCYCLES(13,0x8004D8F0);
ZZ_4D680_270:
	V0 = EMU_ReadU8(A1);
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004D920);
		goto ZZ_4D680_2A0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25200); //+ 0x6270
	AT = 0x80060000;
	AT += A0;
	V1 = EMU_ReadU16(AT - 6772); //+ 0xFFFFE58C
	V0 += A0;
	EMU_Write16(V0 + 4,V1); //+ 0x4
	ZZ_CLOCKCYCLES(12,0x8004D920);
ZZ_4D680_2A0:
	V0 = EMU_ReadU8(A1);
	V0 &= 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004D950);
		goto ZZ_4D680_2D0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25200); //+ 0x6270
	AT = 0x80060000;
	AT += A0;
	V1 = EMU_ReadU16(AT - 6770); //+ 0xFFFFE58E
	V0 += A0;
	EMU_Write16(V0 + 6,V1); //+ 0x6
	ZZ_CLOCKCYCLES(12,0x8004D950);
ZZ_4D680_2D0:
	V0 = EMU_ReadU8(A1);
	V0 &= 0x10;
	if (!V0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(5,0x8004D984);
		goto ZZ_4D680_304;
	}
	A3 += 16;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25200); //+ 0x6270
	V1 = EMU_ReadU16(T0);
	V0 += A0;
	EMU_Write16(V0 + 8,V1); //+ 0x8
	V1 = EMU_ReadU16(T1);
	EMU_Write16(V0 + 10,V1); //+ 0xA
	ZZ_CLOCKCYCLES(13,0x8004D984);
ZZ_4D680_304:
	EMU_Write8(A1,R0);
	A1 += 1;
	T1 += 16;
	T0 += 16;
	A0 += 16;
	V0 = 0x80050000;
	V0 += 30652;
	V0 = (int32_t)A1 < (int32_t)V0;
	if (V0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(10,0x8004D8BC);
		goto ZZ_4D680_23C;
	}
	A2 += 16;
	A3 = 0x80050000;
	A3 = EMU_ReadU32(A3 + 25200); //+ 0x6270
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 + 6760); //+ 0x1A68
	A0 = 0x80060000;
	A0 = EMU_ReadU16(A0 + 6768); //+ 0x1A70
	A1 = 0x80050000;
	A1 = EMU_ReadU16(A1 + 29260); //+ 0x724C
	A2 = 0x80050000;
	A2 = EMU_ReadU16(A2 + 29268); //+ 0x7254
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	EMU_Write16(A3 + 396,V1); //+ 0x18C
	EMU_Write16(A3 + 398,A0); //+ 0x18E
	EMU_Write16(A3 + 392,A1); //+ 0x188
	V0 = V0 < 24;
	if (!V0)
	{
		EMU_Write16(A3 + 394,A2); //+ 0x18A
		ZZ_CLOCKCYCLES(28,0x8004DA10);
		goto ZZ_4D680_390;
	}
	EMU_Write16(A3 + 394,A2); //+ 0x18A
	V0 = EMU_ReadU16(A3 + 410); //+ 0x19A
	V1 = EMU_ReadU16(A3 + 408); //+ 0x198
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 25204); //+ 0x6274
	V0 <<= 16;
	S3 = V0 | V1;
	S3 &= A0;
	ZZ_CLOCKCYCLES(35,0x8004DA10);
ZZ_4D680_390:
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 29276); //+ 0x725C
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 29284); //+ 0x7264
	AT = 0x80060000;
	EMU_Write16(AT + 6760,R0); //+ 0x1A68
	AT = 0x80060000;
	EMU_Write16(AT + 6768,R0); //+ 0x1A70
	AT = 0x80050000;
	EMU_Write16(AT + 29260,R0); //+ 0x724C
	AT = 0x80050000;
	EMU_Write16(AT + 29268,R0); //+ 0x7254
	V0 |= S3;
	EMU_Write16(A3 + 408,V0); //+ 0x198
	V0 = S3 >> 16;
	V1 |= V0;
	EMU_Write16(A3 + 410,V1); //+ 0x19A
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 64;
	ZZ_CLOCKCYCLES_JR(26);
	ZZ_JUMPREGISTER(0x8004BBB8,ZZ_4BB7C_3C);
	ZZ_JUMPREGISTER(0x8004DD94,ZZ_4DA9C_2F8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004D680,0x8004D6FC,ZZ_4D680);
ZZ_MARK_TARGET(0x8004D6FC,0x8004D72C,ZZ_4D680_7C);
ZZ_MARK_TARGET(0x8004D72C,0x8004D73C,ZZ_4D680_AC);
ZZ_MARK_TARGET(0x8004D73C,0x8004D75C,ZZ_4D680_BC);
ZZ_MARK_TARGET(0x8004D75C,0x8004D794,ZZ_4D680_DC);
ZZ_MARK_TARGET(0x8004D794,0x8004D7C8,ZZ_4D680_114);
ZZ_MARK_TARGET(0x8004D7C8,0x8004D7D4,ZZ_4D680_148);
ZZ_MARK_TARGET(0x8004D7D4,0x8004D7EC,ZZ_4D680_154);
ZZ_MARK_TARGET(0x8004D7EC,0x8004D7F0,ZZ_4D680_16C);
ZZ_MARK_TARGET(0x8004D7F0,0x8004D834,ZZ_4D680_170);
ZZ_MARK_TARGET(0x8004D834,0x8004D860,ZZ_4D680_1B4);
ZZ_MARK_TARGET(0x8004D860,0x8004D88C,ZZ_4D680_1E0);
ZZ_MARK_TARGET(0x8004D88C,0x8004D8BC,ZZ_4D680_20C);
ZZ_MARK_TARGET(0x8004D8BC,0x8004D8F0,ZZ_4D680_23C);
ZZ_MARK_TARGET(0x8004D8F0,0x8004D920,ZZ_4D680_270);
ZZ_MARK_TARGET(0x8004D920,0x8004D950,ZZ_4D680_2A0);
ZZ_MARK_TARGET(0x8004D950,0x8004D984,ZZ_4D680_2D0);
ZZ_MARK_TARGET(0x8004D984,0x8004DA10,ZZ_4D680_304);
ZZ_MARK_TARGET(0x8004DA10,0x8004DA78,ZZ_4D680_390);
