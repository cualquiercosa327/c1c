#ifdef ZZ_INCLUDE_CODE
ZZ_2C8EC:
	SP -= 144;
	EMU_Write32(SP + 116,S3); //+ 0x74
	S3 = A0;
	EMU_Write32(SP + 136,FP); //+ 0x88
	FP = A1;
	EMU_Write32(SP + 120,S4); //+ 0x78
	S4 = A2;
	EMU_Write32(SP + 108,S1); //+ 0x6C
	S1 = A3;
	V1 = 0xFFFF0000;
	EMU_Write32(SP + 140,RA); //+ 0x8C
	EMU_Write32(SP + 132,S7); //+ 0x84
	EMU_Write32(SP + 128,S6); //+ 0x80
	EMU_Write32(SP + 124,S5); //+ 0x7C
	EMU_Write32(SP + 112,S2); //+ 0x70
	EMU_Write32(SP + 104,S0); //+ 0x68
	EMU_Write32(SP + 96,R0); //+ 0x60
	V0 = EMU_ReadU32(S4);
	V1 |= 0x6A00;
	V0 += V1;
	EMU_Write32(S1 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S4);
	V1 = 0x9600;
	V0 += V1;
	EMU_Write32(S1 + 4140,V0); //+ 0x102C
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	A0 = 0x20000;
	EMU_Write32(S1 + 4132,V0); //+ 0x1024
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	A0 |= 0x9900;
	V0 += A0;
	EMU_Write32(S1 + 4144,V0); //+ 0x1030
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	S7 = 0x40000;
	V0 = V0 - V1;
	EMU_Write32(S1 + 4136,V0); //+ 0x1028
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	S7 |= 0x1;
	A1 = V0 + V1;
	V0 = EMU_ReadU32(S1 + 4096); //+ 0x1000
	S6 = S1 + 4128;
	if (!V0)
	{
		EMU_Write32(S1 + 4148,A1); //+ 0x1034
		ZZ_CLOCKCYCLES(43,0x8002CA24);
		goto ZZ_2C8EC_138;
	}
	EMU_Write32(S1 + 4148,A1); //+ 0x1034
	V0 = EMU_ReadU32(S1 + 4128); //+ 0x1020
	V1 = EMU_ReadU32(S1 + 4104); //+ 0x1008
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(49,0x8002CA1C);
		goto ZZ_2C8EC_130;
	}
	A0 = R0;
	V0 = EMU_ReadU32(S1 + 4132); //+ 0x1024
	V1 = EMU_ReadU32(S1 + 4108); //+ 0x100C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(55,0x8002CA1C);
		goto ZZ_2C8EC_130;
	}
	V0 = EMU_ReadU32(S1 + 4136); //+ 0x1028
	V1 = EMU_ReadU32(S1 + 4112); //+ 0x1010
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(61,0x8002CA1C);
		goto ZZ_2C8EC_130;
	}
	V0 = EMU_ReadU32(S1 + 4140); //+ 0x102C
	V1 = EMU_ReadU32(S1 + 4116); //+ 0x1014
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(67,0x8002CA1C);
		goto ZZ_2C8EC_130;
	}
	V0 = EMU_ReadU32(S1 + 4144); //+ 0x1030
	V1 = EMU_ReadU32(S1 + 4120); //+ 0x1018
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(73,0x8002CA1C);
		goto ZZ_2C8EC_130;
	}
	V0 = EMU_ReadU32(S1 + 4124); //+ 0x101C
	A0 = (int32_t)A1 < (int32_t)V0;
	ZZ_CLOCKCYCLES(76,0x8002CA1C);
ZZ_2C8EC_130:
	if (A0)
	{
		ZZ_CLOCKCYCLES(2,0x8002CA34);
		goto ZZ_2C8EC_148;
	}
	ZZ_CLOCKCYCLES(2,0x8002CA24);
ZZ_2C8EC_138:
	A0 = S4;
	A1 = S3;
	RA = 0x8002CA34; //ZZ_2C8EC_148
	A2 = S1;
	ZZ_CLOCKCYCLES(4,0x800294B0);
	goto ZZ_294B0;
ZZ_2C8EC_148:
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	V1 = EMU_ReadU32(GP + 192); //+ 0xC0
	T1 = SP + 32;
	T0 = V0 + V1;
	V1 = EMU_ReadU32(FP + 4); //+ 0x4
	V1 = V1 - V0;
	if ((int32_t)V1 <= 0)
	{
		A3 = S1 + 4128;
		ZZ_CLOCKCYCLES(9,0x8002CA5C);
		goto ZZ_2C8EC_170;
	}
	A3 = S1 + 4128;
	T0 += V1;
	ZZ_CLOCKCYCLES(10,0x8002CA5C);
ZZ_2C8EC_170:
	V1 = 0x20000;
	V0 = EMU_ReadU32(S4);
	V1 |= 0x9900;
	V0 -= 1600;
	EMU_Write32(S1 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S4);
	S0 = 0xC4650000;
	V0 += 1600;
	EMU_Write32(S1 + 4140,V0); //+ 0x102C
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	S0 |= 0x3601;
	EMU_Write32(S1 + 4132,V0); //+ 0x1024
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	A0 = S3;
	V0 += V1;
	EMU_Write32(S1 + 4144,V0); //+ 0x1030
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	A1 = S1;
	V0 -= 1600;
	EMU_Write32(S1 + 4136,V0); //+ 0x1028
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	A2 = S1 + 4104;
	V0 += 1600;
	EMU_Write32(S1 + 4148,V0); //+ 0x1034
	V0 = 0x80030000;
	V0 -= 15432;
	EMU_Write32(SP + 16,T0); //+ 0x10
	EMU_Write32(SP + 20,T1); //+ 0x14
	EMU_Write32(SP + 24,S0); //+ 0x18
	RA = 0x8002CAD8; //ZZ_2C8EC_1EC
	EMU_Write32(SP + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(31,0x80038AC4);
	goto ZZ_38AC4;
ZZ_2C8EC_1EC:
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	if (S2 != S0)
	{
		ZZ_CLOCKCYCLES(4,0x8002CAF0);
		goto ZZ_2C8EC_204;
	}
	EMU_Write32(S1 + 4160,R0); //+ 0x1040
	ZZ_CLOCKCYCLES(6,0x8002CAF4);
	goto ZZ_2C8EC_208;
ZZ_2C8EC_204:
	EMU_Write32(S1 + 4160,S2); //+ 0x1040
	ZZ_CLOCKCYCLES(1,0x8002CAF4);
ZZ_2C8EC_208:
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (S5 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002CB0C);
		goto ZZ_2C8EC_220;
	}
	EMU_Write32(S1 + 4164,R0); //+ 0x1044
	ZZ_CLOCKCYCLES(6,0x8002CB10);
	goto ZZ_2C8EC_224;
ZZ_2C8EC_220:
	EMU_Write32(S1 + 4164,S5); //+ 0x1044
	ZZ_CLOCKCYCLES(1,0x8002CB10);
ZZ_2C8EC_224:
	A0 = S3;
	A1 = FP;
	A2 = S4;
	RA = 0x8002CB24; //ZZ_2C8EC_238
	A3 = S1;
	ZZ_CLOCKCYCLES(5,0x8002C660);
	goto ZZ_2C660;
ZZ_2C8EC_238:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(4,0x8002CB3C);
		goto ZZ_2C8EC_250;
	}
	EMU_Write32(S1 + 4168,R0); //+ 0x1048
	ZZ_CLOCKCYCLES(6,0x8002CBA4);
	goto ZZ_2C8EC_2B8;
ZZ_2C8EC_250:
	S2 = V0;
	V0 = 0xFFFB0000;
	V0 |= 0xFFFF;
	EMU_Write32(S1 + 4168,S2); //+ 0x1048
	V1 = EMU_ReadU32(S3 + 120); //+ 0x78
	if (!V1)
	{
		S7 &= V0;
		ZZ_CLOCKCYCLES(8,0x8002CB9C);
		goto ZZ_2C8EC_2B0;
	}
	S7 &= V0;
	V0 = EMU_ReadU32(V1 + 204); //+ 0xCC
	V1 = 0x400000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8002CB7C);
		goto ZZ_2C8EC_290;
	}
	T2 = 0x10000;
	T2 |= 0x9000;
	EMU_Write32(SP + 96,T2); //+ 0x60
	ZZ_CLOCKCYCLES(16,0x8002CB7C);
ZZ_2C8EC_290:
	V0 = EMU_ReadU32(S3 + 252); //+ 0xFC
	V1 = EMU_ReadU32(S3 + 304); //+ 0x130
	V0 = V0 - V1;
	V0 = V0 < 4;
	if (V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(7,0x8002CBA0);
		goto ZZ_2C8EC_2B4;
	}
	V0 = 0x200000;
	S7 = 0x4001;
	ZZ_CLOCKCYCLES(8,0x8002CB9C);
ZZ_2C8EC_2B0:
	V0 = 0x200000;
	ZZ_CLOCKCYCLES(1,0x8002CBA0);
ZZ_2C8EC_2B4:
	S7 |= V0;
	ZZ_CLOCKCYCLES(1,0x8002CBA4);
ZZ_2C8EC_2B8:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (S2 != V1)
	{
		ZZ_CLOCKCYCLES(4,0x8002CBBC);
		goto ZZ_2C8EC_2D0;
	}
	if (S5 == S2)
	{
		ZZ_CLOCKCYCLES(6,0x8002CBCC);
		goto ZZ_2C8EC_2E0;
	}
	ZZ_CLOCKCYCLES(6,0x8002CBBC);
ZZ_2C8EC_2D0:
	V0 = EMU_ReadU32(S3 + 168); //+ 0xA8
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(4,0x8002CBFC);
		goto ZZ_2C8EC_310;
	}
	ZZ_CLOCKCYCLES(4,0x8002CBCC);
ZZ_2C8EC_2E0:
	V0 = EMU_ReadU32(S3 + 168); //+ 0xA8
	if ((int32_t)V0 <= 0)
	{
		S0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002CBF0);
		goto ZZ_2C8EC_304;
	}
	S0 = 0xC4650000;
	V1 = 0xFFDB0000;
	V0 = EMU_ReadU32(S3 + 200); //+ 0xC8
	V1 |= 0xBFFE;
	V0 &= V1;
	EMU_Write32(S3 + 200,V0); //+ 0xC8
	ZZ_CLOCKCYCLES(9,0x8002CBF0);
ZZ_2C8EC_304:
	EMU_Write32(S1 + 4152,R0); //+ 0x1038
	S0 |= 0x3601;
	ZZ_CLOCKCYCLES(3,0x8002CD64);
	goto ZZ_2C8EC_478;
ZZ_2C8EC_310:
	if (S2 != V1)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(2,0x8002CC0C);
		goto ZZ_2C8EC_320;
	}
	V0 = S2;
	V0 = S5;
	S7 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8002CC0C);
ZZ_2C8EC_320:
	EMU_Write32(S1 + 4152,V0); //+ 0x1038
	S0 = V0 + 1;
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (S2 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002CC30);
		goto ZZ_2C8EC_344;
	}
	V0 = EMU_ReadU32(S3 + 132); //+ 0x84
	ZZ_CLOCKCYCLES(9,0x8002CC44);
	goto ZZ_2C8EC_358;
ZZ_2C8EC_344:
	V0 = EMU_ReadU32(S3 + 132); //+ 0x84
	V1 = EMU_ReadU32(GP + 192); //+ 0xC0
	T2 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 += V1;
	V0 += T2;
	ZZ_CLOCKCYCLES(5,0x8002CC44);
ZZ_2C8EC_358:
	T2 = EMU_ReadU32(SP + 160); //+ 0xA0
	EMU_Write32(T2,V0);
	V0 = (int32_t)V0 < (int32_t)S0;
	if (!V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(6,0x8002CC60);
		goto ZZ_2C8EC_374;
	}
	V0 = 0x20000;
	S0 = EMU_ReadU32(S3 + 132); //+ 0x84
	ZZ_CLOCKCYCLES(7,0x8002CC60);
ZZ_2C8EC_374:
	V0 |= 0x9900;
	V0 += S0;
	EMU_Write32(S6 + 4,S0); //+ 0x4
	EMU_Write32(S6 + 16,V0); //+ 0x10
	EMU_Write32(S4 + 4,S0); //+ 0x4
	V0 = EMU_ReadU32(S1 + 4096); //+ 0x1000
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8002CD14);
		goto ZZ_2C8EC_428;
	}
	V0 = EMU_ReadU32(S6);
	V1 = EMU_ReadU32(S1 + 4104); //+ 0x1008
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(15,0x8002CD0C);
		goto ZZ_2C8EC_420;
	}
	A0 = R0;
	V0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V1 = EMU_ReadU32(S1 + 4108); //+ 0x100C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(21,0x8002CD0C);
		goto ZZ_2C8EC_420;
	}
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 4112); //+ 0x1010
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(27,0x8002CD0C);
		goto ZZ_2C8EC_420;
	}
	V0 = EMU_ReadU32(S6 + 12); //+ 0xC
	V1 = EMU_ReadU32(S1 + 4116); //+ 0x1014
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(33,0x8002CD0C);
		goto ZZ_2C8EC_420;
	}
	V0 = EMU_ReadU32(S6 + 16); //+ 0x10
	V1 = EMU_ReadU32(S1 + 4120); //+ 0x1018
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(39,0x8002CD0C);
		goto ZZ_2C8EC_420;
	}
	V1 = EMU_ReadU32(S6 + 20); //+ 0x14
	V0 = EMU_ReadU32(S1 + 4124); //+ 0x101C
	A0 = (int32_t)V1 < (int32_t)V0;
	ZZ_CLOCKCYCLES(43,0x8002CD0C);
ZZ_2C8EC_420:
	if (A0)
	{
		ZZ_CLOCKCYCLES(2,0x8002CD24);
		goto ZZ_2C8EC_438;
	}
	ZZ_CLOCKCYCLES(2,0x8002CD14);
ZZ_2C8EC_428:
	A0 = S4;
	A1 = S3;
	RA = 0x8002CD24; //ZZ_2C8EC_438
	A2 = S1;
	ZZ_CLOCKCYCLES(4,0x800294B0);
	goto ZZ_294B0;
ZZ_2C8EC_438:
	V1 = EMU_ReadU32(S3 + 168); //+ 0xA8
	if ((int32_t)V1 >= 0)
	{
		V0 = S7 & 0x1;
		ZZ_CLOCKCYCLES(4,0x8002CD44);
		goto ZZ_2C8EC_458;
	}
	V0 = S7 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002CD44);
		goto ZZ_2C8EC_458;
	}
	EMU_Write32(S3 + 308,V1); //+ 0x134
	EMU_Write32(S3 + 168,R0); //+ 0xA8
	ZZ_CLOCKCYCLES(8,0x8002CD44);
ZZ_2C8EC_458:
	V0 = EMU_ReadU32(S3 + 200); //+ 0xC8
	V0 |= S7;
	EMU_Write32(S3 + 200,V0); //+ 0xC8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	EMU_Write32(S3 + 304,V0); //+ 0x130
	ZZ_CLOCKCYCLES(8,0x8002CD64);
ZZ_2C8EC_478:
	V0 = S0;
	RA = EMU_ReadU32(SP + 140); //+ 0x8C
	FP = EMU_ReadU32(SP + 136); //+ 0x88
	S7 = EMU_ReadU32(SP + 132); //+ 0x84
	S6 = EMU_ReadU32(SP + 128); //+ 0x80
	S5 = EMU_ReadU32(SP + 124); //+ 0x7C
	S4 = EMU_ReadU32(SP + 120); //+ 0x78
	S3 = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 144;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8002D41C,ZZ_2D384_98);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002C8EC,0x8002CA1C,ZZ_2C8EC);
ZZ_MARK_TARGET(0x8002CA1C,0x8002CA24,ZZ_2C8EC_130);
ZZ_MARK_TARGET(0x8002CA24,0x8002CA34,ZZ_2C8EC_138);
ZZ_MARK_TARGET(0x8002CA34,0x8002CA5C,ZZ_2C8EC_148);
ZZ_MARK_TARGET(0x8002CA5C,0x8002CAD8,ZZ_2C8EC_170);
ZZ_MARK_TARGET(0x8002CAD8,0x8002CAF0,ZZ_2C8EC_1EC);
ZZ_MARK_TARGET(0x8002CAF0,0x8002CAF4,ZZ_2C8EC_204);
ZZ_MARK_TARGET(0x8002CAF4,0x8002CB0C,ZZ_2C8EC_208);
ZZ_MARK_TARGET(0x8002CB0C,0x8002CB10,ZZ_2C8EC_220);
ZZ_MARK_TARGET(0x8002CB10,0x8002CB24,ZZ_2C8EC_224);
ZZ_MARK_TARGET(0x8002CB24,0x8002CB3C,ZZ_2C8EC_238);
ZZ_MARK_TARGET(0x8002CB3C,0x8002CB7C,ZZ_2C8EC_250);
ZZ_MARK_TARGET(0x8002CB7C,0x8002CB9C,ZZ_2C8EC_290);
ZZ_MARK_TARGET(0x8002CB9C,0x8002CBA0,ZZ_2C8EC_2B0);
ZZ_MARK_TARGET(0x8002CBA0,0x8002CBA4,ZZ_2C8EC_2B4);
ZZ_MARK_TARGET(0x8002CBA4,0x8002CBBC,ZZ_2C8EC_2B8);
ZZ_MARK_TARGET(0x8002CBBC,0x8002CBCC,ZZ_2C8EC_2D0);
ZZ_MARK_TARGET(0x8002CBCC,0x8002CBF0,ZZ_2C8EC_2E0);
ZZ_MARK_TARGET(0x8002CBF0,0x8002CBFC,ZZ_2C8EC_304);
ZZ_MARK_TARGET(0x8002CBFC,0x8002CC0C,ZZ_2C8EC_310);
ZZ_MARK_TARGET(0x8002CC0C,0x8002CC30,ZZ_2C8EC_320);
ZZ_MARK_TARGET(0x8002CC30,0x8002CC44,ZZ_2C8EC_344);
ZZ_MARK_TARGET(0x8002CC44,0x8002CC60,ZZ_2C8EC_358);
ZZ_MARK_TARGET(0x8002CC60,0x8002CD0C,ZZ_2C8EC_374);
ZZ_MARK_TARGET(0x8002CD0C,0x8002CD14,ZZ_2C8EC_420);
ZZ_MARK_TARGET(0x8002CD14,0x8002CD24,ZZ_2C8EC_428);
ZZ_MARK_TARGET(0x8002CD24,0x8002CD44,ZZ_2C8EC_438);
ZZ_MARK_TARGET(0x8002CD44,0x8002CD64,ZZ_2C8EC_458);
ZZ_MARK_TARGET(0x8002CD64,0x8002CD9C,ZZ_2C8EC_478);
