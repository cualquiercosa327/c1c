#ifdef ZZ_INCLUDE_CODE
ZZ_2EBB4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = V0 - 15;
	V0 = V1 < 37;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(10,0x8002EC30);
		goto ZZ_2EBB4_7C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2428); //+ 0x97C
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(16);
	ZZ_JUMPREGISTER(0x8002EBF4,ZZ_2EBB4_40);
	ZZ_JUMPREGISTER(0x8002EC30,ZZ_2EBB4_7C);
	ZZ_JUMPREGISTER(0x8002EC08,ZZ_2EBB4_54);
	ZZ_JUMPREGISTER(0x8002EC1C,ZZ_2EBB4_68);
	ZZ_JUMPREGISTER_END();
ZZ_2EBB4_40:
	V0 = 0xA;
	AT = 0x80050000;
	EMU_Write32(AT + 25716,V0); //+ 0x6474
	V0 = 0x7F;
	ZZ_CLOCKCYCLES(5,0x8002EC40);
	goto ZZ_2EBB4_8C;
ZZ_2EBB4_54:
	V0 = 0xA;
	AT = 0x80050000;
	EMU_Write32(AT + 25716,V0); //+ 0x6474
	V0 = 0x7F;
	ZZ_CLOCKCYCLES(5,0x8002EC40);
	goto ZZ_2EBB4_8C;
ZZ_2EBB4_68:
	V0 = 0x4;
	AT = 0x80050000;
	EMU_Write32(AT + 25716,V0); //+ 0x6474
	V0 = 0x7F;
	ZZ_CLOCKCYCLES(5,0x8002EC40);
	goto ZZ_2EBB4_8C;
ZZ_2EBB4_7C:
	V0 = 0x1;
	AT = 0x80050000;
	EMU_Write32(AT + 25716,V0); //+ 0x6474
	V0 = 0x17;
	ZZ_CLOCKCYCLES(4,0x8002EC40);
ZZ_2EBB4_8C:
	AT = 0x80050000;
	EMU_Write32(AT + 25720,V0); //+ 0x6478
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8002EC58);
		goto ZZ_2EBB4_A4;
	}
	RA = 0x8002EC58; //ZZ_2EBB4_A4
	A0 = R0;
	ZZ_CLOCKCYCLES(6,0x80019DE0);
	goto ZZ_19DE0;
ZZ_2EBB4_A4:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80025604,ZZ_253A0_264);
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002EBB4,0x8002EBF4,ZZ_2EBB4);
ZZ_MARK_TARGET(0x8002EBF4,0x8002EC08,ZZ_2EBB4_40);
ZZ_MARK_TARGET(0x8002EC08,0x8002EC1C,ZZ_2EBB4_54);
ZZ_MARK_TARGET(0x8002EC1C,0x8002EC30,ZZ_2EBB4_68);
ZZ_MARK_TARGET(0x8002EC30,0x8002EC40,ZZ_2EBB4_7C);
ZZ_MARK_TARGET(0x8002EC40,0x8002EC58,ZZ_2EBB4_8C);
ZZ_MARK_TARGET(0x8002EC58,0x8002EC68,ZZ_2EBB4_A4);
