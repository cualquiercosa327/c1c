#ifdef ZZ_INCLUDE_CODE
ZZ_201DC:
	SP -= 320;
	EMU_Write32(SP + 288,S2); //+ 0x120
	S2 = A0;
	EMU_Write32(SP + 316,RA); //+ 0x13C
	EMU_Write32(SP + 312,FP); //+ 0x138
	EMU_Write32(SP + 308,S7); //+ 0x134
	EMU_Write32(SP + 304,S6); //+ 0x130
	EMU_Write32(SP + 300,S5); //+ 0x12C
	EMU_Write32(SP + 296,S4); //+ 0x128
	EMU_Write32(SP + 292,S3); //+ 0x124
	EMU_Write32(SP + 284,S1); //+ 0x11C
	EMU_Write32(SP + 280,S0); //+ 0x118
	EMU_Write32(SP + 208,A1); //+ 0xD0
	EMU_Write32(SP + 216,A2); //+ 0xD8
	ZZ_CLOCKCYCLES(14,0x80020214);
ZZ_201DC_38:
	FP = 0xE1F;
	ZZ_CLOCKCYCLES(1,0x80020218);
ZZ_201DC_3C:
  /* begin code extension */
 // #ifdef GOOL_DEBUG
  while (0);
  extern void GOOL_PrintObjectDebugInfo(uint32_t obj);
  GOOL_PrintObjectDebugInfo(S2);
 // #endif
  /* end code extension */
	V0 = EMU_ReadU32(S2 + 224); //+ 0xE0
	V1 = V0 + 4;
	EMU_Write32(S2 + 224,V1); //+ 0xE0
	S1 = EMU_ReadU32(V0);
	S5 = S1 >> 24;
	V0 = S5 < 146;
	if (!V0)
	{
		V0 = S5 << 2;
		ZZ_CLOCKCYCLES(10,0x80024008);
		goto ZZ_201DC_3E2C;
	}
	V0 = S5 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1304); //+ 0x518
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(16);
	//ZZ_JUMPREGISTER(0x80020AC0,ZZ_201DC_8E4);
	//ZZ_JUMPREGISTER(0x80020B8C,ZZ_201DC_9B0);
	//ZZ_JUMPREGISTER(0x80020D04,ZZ_201DC_B28);
	//ZZ_JUMPREGISTER(0x80020DD4,ZZ_201DC_BF8);
	//ZZ_JUMPREGISTER(0x8002144C,ZZ_201DC_1270);
	//ZZ_JUMPREGISTER(0x8002183C,ZZ_201DC_1660);
	//ZZ_JUMPREGISTER(0x8002190C,ZZ_201DC_1730);
	//ZZ_JUMPREGISTER(0x80021128,ZZ_201DC_F4C);
	//ZZ_JUMPREGISTER(0x800211F0,ZZ_201DC_1014);
	//ZZ_JUMPREGISTER(0x8002151C,ZZ_201DC_1340);
	//ZZ_JUMPREGISTER(0x800215E0,ZZ_201DC_1404);
	//ZZ_JUMPREGISTER(0x800216A4,ZZ_201DC_14C8);
	//ZZ_JUMPREGISTER(0x8002176C,ZZ_201DC_1590);
	//ZZ_JUMPREGISTER(0x80020EC8,ZZ_201DC_CEC);
	//ZZ_JUMPREGISTER(0x800212B8,ZZ_201DC_10DC);
	//ZZ_JUMPREGISTER(0x80021380,ZZ_201DC_11A4);
	//ZZ_JUMPREGISTER(0x80020FB4,ZZ_201DC_DD8);
	//ZZ_JUMPREGISTER(0x80020258,ZZ_201DC_7C);
	//ZZ_JUMPREGISTER(0x800206AC,ZZ_201DC_4D0);
	//ZZ_JUMPREGISTER(0x8002080C,ZZ_201DC_630);
	//ZZ_JUMPREGISTER(0x8002040C,ZZ_201DC_230);
	//ZZ_JUMPREGISTER(0x80021068,ZZ_201DC_E8C);
	//ZZ_JUMPREGISTER(0x800202CC,ZZ_201DC_F0);
	//ZZ_JUMPREGISTER(0x8002075C,ZZ_201DC_580);
	//ZZ_JUMPREGISTER(0x80020640,ZZ_201DC_464);
	//ZZ_JUMPREGISTER(0x80020584,ZZ_201DC_3A8);
	//ZZ_JUMPREGISTER(0x800219E8,ZZ_201DC_180C);
	//ZZ_JUMPREGISTER(0x80021A08,ZZ_201DC_182C);
	//ZZ_JUMPREGISTER(0x80021EE8,ZZ_201DC_1D0C);
	//ZZ_JUMPREGISTER(0x80021AF4,ZZ_201DC_1918);
	//ZZ_JUMPREGISTER(0x80021C08,ZZ_201DC_1A2C);
	//ZZ_JUMPREGISTER(0x80021CF4,ZZ_201DC_1B18);
	//ZZ_JUMPREGISTER(0x80021D78,ZZ_201DC_1B9C);
	//ZZ_JUMPREGISTER(0x80020C54,ZZ_201DC_A78);
	//ZZ_JUMPREGISTER(0x800209A8,ZZ_201DC_7CC);
	//ZZ_JUMPREGISTER(0x80021E38,ZZ_201DC_1C5C);
	//ZZ_JUMPREGISTER(0x80021E6C,ZZ_201DC_1C90);
	//ZZ_JUMPREGISTER(0x800204C0,ZZ_201DC_2E4);
	//ZZ_JUMPREGISTER(0x80024008,ZZ_201DC_3E2C);
	//ZZ_JUMPREGISTER(0x80020218,ZZ_201DC_3C);
	//ZZ_JUMPREGISTER(0x80022CA4,ZZ_201DC_2AC8);
	//ZZ_JUMPREGISTER(0x8002300C,ZZ_201DC_2E30);
	//ZZ_JUMPREGISTER(0x80023128,ZZ_201DC_2F4C);
	//ZZ_JUMPREGISTER(0x8002330C,ZZ_201DC_3130);
	//ZZ_JUMPREGISTER(0x80022F60,ZZ_201DC_2D84);
	//ZZ_JUMPREGISTER(0x80023BB4,ZZ_201DC_39D8);
	//ZZ_JUMPREGISTER(0x80022A98,ZZ_201DC_28BC);
	//ZZ_JUMPREGISTER(0x80023DC0,ZZ_201DC_3BE4);
	//ZZ_JUMPREGISTER(0x80023234,ZZ_201DC_3058);
	//ZZ_JUMPREGISTER(0x80023E78,ZZ_201DC_3C9C);
	//ZZ_JUMPREGISTER(0x80023F2C,ZZ_201DC_3D50);
	//ZZ_JUMPREGISTER(0x800237EC,ZZ_201DC_3610);
	//ZZ_JUMPREGISTER(0x80023BCC,ZZ_201DC_39F0);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_7C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x8002029C);
		goto ZZ_201DC_C0;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x8002028C);
		goto ZZ_201DC_B0;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800202A4);
	goto ZZ_201DC_C8;
ZZ_201DC_B0:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800202A4);
	goto ZZ_201DC_C8;
ZZ_201DC_C0:
	RA = 0x800202A4; //ZZ_201DC_C8
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_C8:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x800204A4);
		goto ZZ_201DC_2C8;
	}
	A1 = V1;
	if (V1 == FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x8002047C);
		goto ZZ_201DC_2A0;
	}
	V0 = S1 & 0x1FF;
	ZZ_CLOCKCYCLES(10,0x80020494);
	goto ZZ_201DC_2B8;
ZZ_201DC_F0:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020314);
		goto ZZ_201DC_138;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020304);
		goto ZZ_201DC_128;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020320);
	goto ZZ_201DC_144;
ZZ_201DC_128:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020320);
	goto ZZ_201DC_144;
ZZ_201DC_138:
	RA = 0x8002031C; //ZZ_201DC_140
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_140:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020320);
ZZ_201DC_144:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020364);
		goto ZZ_201DC_188;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020354);
		goto ZZ_201DC_178;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A0 = V0;
	EMU_Write32(S2 + 220,A0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020370);
	goto ZZ_201DC_194;
ZZ_201DC_178:
	V0 <<= 2;
	V0 += 96;
	A0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020370);
	goto ZZ_201DC_194;
ZZ_201DC_188:
	RA = 0x8002036C; //ZZ_201DC_190
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_190:
	A0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020370);
ZZ_201DC_194:
	V1 = S1 >> 24;
	V0 = 0x26;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x800203B8);
		goto ZZ_201DC_1DC;
	}
	if (!A0)
	{
		ZZ_CLOCKCYCLES(6,0x80020218);
		goto ZZ_201DC_3C;
	}
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	if (!S0)
	{
		EMU_Write32(V1,A0);
		ZZ_CLOCKCYCLES(12,0x80020218);
		goto ZZ_201DC_3C;
	}
	EMU_Write32(V1,A0);
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	EMU_Write32(V1,S0);
	ZZ_CLOCKCYCLES(18,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1DC:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	if (!S0)
	{
		ZZ_CLOCKCYCLES(4,0x800203D4);
		goto ZZ_201DC_1F8;
	}
	T1 = EMU_ReadU32(S0);
	EMU_Write32(SP + 232,T1); //+ 0xE8
	ZZ_CLOCKCYCLES(7,0x800203D4);
ZZ_201DC_1F8:
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0 + 4;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	V1 = EMU_ReadU32(A0);
	if (!S0)
	{
		EMU_Write32(V0,V1);
		ZZ_CLOCKCYCLES(7,0x80020218);
		goto ZZ_201DC_3C;
	}
	EMU_Write32(V0,V1);
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	T1 = EMU_ReadU32(SP + 232); //+ 0xE8
	EMU_Write32(V1,T1);
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_230:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020454);
		goto ZZ_201DC_278;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020444);
		goto ZZ_201DC_268;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020460);
	goto ZZ_201DC_284;
ZZ_201DC_268:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020460);
	goto ZZ_201DC_284;
ZZ_201DC_278:
	RA = 0x8002045C; //ZZ_201DC_280
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_280:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020460);
ZZ_201DC_284:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800204A4);
		goto ZZ_201DC_2C8;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020494);
		goto ZZ_201DC_2B8;
	}
	V0 = S1 & 0x1FF;
	ZZ_CLOCKCYCLES(7,0x8002047C);
ZZ_201DC_2A0:
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0;
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(6,0x800204B0);
	goto ZZ_201DC_2D4;
ZZ_201DC_2B8:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800204B0);
	goto ZZ_201DC_2D4;
ZZ_201DC_2C8:
	RA = 0x800204AC; //ZZ_201DC_2D0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_2D0:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800204B0);
ZZ_201DC_2D4:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	EMU_Write32(V1,S0);
	ZZ_CLOCKCYCLES(4,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2E4:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020508);
		goto ZZ_201DC_32C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800204F8);
		goto ZZ_201DC_31C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020514);
	goto ZZ_201DC_338;
ZZ_201DC_31C:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020514);
	goto ZZ_201DC_338;
ZZ_201DC_32C:
	RA = 0x80020510; //ZZ_201DC_334
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_334:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020514);
ZZ_201DC_338:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020558);
		goto ZZ_201DC_37C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020548);
		goto ZZ_201DC_36C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A0 = V0;
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020564);
	goto ZZ_201DC_388;
ZZ_201DC_36C:
	V0 <<= 2;
	V0 += 96;
	A0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020564);
	goto ZZ_201DC_388;
ZZ_201DC_37C:
	RA = 0x80020560; //ZZ_201DC_384
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_384:
	A0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020564);
ZZ_201DC_388:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(S2 + 32); //+ 0x20
	V0 >>= 8;
	V1 = EMU_ReadU32(V1 + 36); //+ 0x24
	V0 <<= 2;
	ZZ_CLOCKCYCLES(8,0x80020B7C);
	goto ZZ_201DC_9A0;
ZZ_201DC_3A8:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800205C8);
		goto ZZ_201DC_3EC;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800205B8);
		goto ZZ_201DC_3DC;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800205D0);
	goto ZZ_201DC_3F4;
ZZ_201DC_3DC:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800205D0);
	goto ZZ_201DC_3F4;
ZZ_201DC_3EC:
	RA = 0x800205D0; //ZZ_201DC_3F4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3F4:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80020618);
		goto ZZ_201DC_43C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020608);
		goto ZZ_201DC_42C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0;
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020624);
	goto ZZ_201DC_448;
ZZ_201DC_42C:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020624);
	goto ZZ_201DC_448;
ZZ_201DC_43C:
	RA = 0x80020620; //ZZ_201DC_444
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_444:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020624);
ZZ_201DC_448:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	if ((int32_t)S0 >= 0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(4,0x80020638);
		goto ZZ_201DC_45C;
	}
	V0 = S0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(5,0x80020638);
ZZ_201DC_45C:
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_464:
	V1 = S1 >> 14;
	V1 &= 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(5,0x8002066C);
		goto ZZ_201DC_490;
	}
	A0 = V1;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	T0 = V0;
	V0 = T0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(11,0x80020678);
	goto ZZ_201DC_49C;
ZZ_201DC_490:
	V0 = A0 << 2;
	V0 += 96;
	T0 = S2 + V0;
	ZZ_CLOCKCYCLES(3,0x80020678);
ZZ_201DC_49C:
	A0 = S1 & 0x3FFF;
	V0 = 0x3FFF;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x800206A4);
		goto ZZ_201DC_4C8;
	}
	V0 = EMU_ReadU32(S2 + 32); //+ 0x20
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = A0 << 2;
	V0 += V1;
	EMU_Write32(T0,V0);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_4C8:
	EMU_Write32(T0,R0);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_4D0:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800206F0);
		goto ZZ_201DC_514;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800206E0);
		goto ZZ_201DC_504;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800206F8);
	goto ZZ_201DC_51C;
ZZ_201DC_504:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800206F8);
	goto ZZ_201DC_51C;
ZZ_201DC_514:
	RA = 0x800206F8; //ZZ_201DC_51C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_51C:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80020740);
		goto ZZ_201DC_564;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020730);
		goto ZZ_201DC_554;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0;
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x8002074C);
	goto ZZ_201DC_570;
ZZ_201DC_554:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x8002074C);
	goto ZZ_201DC_570;
ZZ_201DC_564:
	RA = 0x80020748; //ZZ_201DC_56C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_56C:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x8002074C);
ZZ_201DC_570:
	if (!V1)
	{
		V0 = S0 < 1;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = S0 < 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(4,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_580:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800207A0);
		goto ZZ_201DC_5C4;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020790);
		goto ZZ_201DC_5B4;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800207A8);
	goto ZZ_201DC_5CC;
ZZ_201DC_5B4:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800207A8);
	goto ZZ_201DC_5CC;
ZZ_201DC_5C4:
	RA = 0x800207A8; //ZZ_201DC_5CC
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_5CC:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x800207F0);
		goto ZZ_201DC_614;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800207E0);
		goto ZZ_201DC_604;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0;
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x800207FC);
	goto ZZ_201DC_620;
ZZ_201DC_604:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800207FC);
	goto ZZ_201DC_620;
ZZ_201DC_614:
	RA = 0x800207F8; //ZZ_201DC_61C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_61C:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800207FC);
ZZ_201DC_620:
	if (!V1)
	{
		V0 = ~S0;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = ~S0;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(4,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_630:
	V1 = S1 >> 12;
	A1 = V1 & 0xFFF;
	V0 = 0xBF0;
	if (A1 != V0)
	{
		V0 = V1 & 0xE00;
		ZZ_CLOCKCYCLES(5,0x80020848);
		goto ZZ_201DC_66C;
	}
	V0 = V1 & 0xE00;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0 - 4;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	S4 = EMU_ReadU32(V0 - 4); //+ 0xFFFFFFFC
	V1 = V0 - 8;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	S3 = EMU_ReadU32(V0 - 8); //+ 0xFFFFFFF8
	V1 = S1 & 0xFFF;
	ZZ_CLOCKCYCLES(15,0x80020890);
	goto ZZ_201DC_6B4;
ZZ_201DC_66C:
	T1 = 0xE00;
	if (V0 != T1)
	{
		S4 = 0x100;
		ZZ_CLOCKCYCLES(3,0x80020880);
		goto ZZ_201DC_6A4;
	}
	S4 = 0x100;
	if (A1 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(5,0x80020870);
		goto ZZ_201DC_694;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80020888);
	goto ZZ_201DC_6AC;
ZZ_201DC_694:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020888);
	goto ZZ_201DC_6AC;
ZZ_201DC_6A4:
	RA = 0x80020888; //ZZ_201DC_6AC
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_6AC:
	S3 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	ZZ_CLOCKCYCLES(2,0x80020890);
ZZ_201DC_6B4:
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(4,0x800208CC);
		goto ZZ_201DC_6F0;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(6,0x800208BC);
		goto ZZ_201DC_6E0;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(11,0x800208D4);
	goto ZZ_201DC_6F8;
ZZ_201DC_6E0:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800208D4);
	goto ZZ_201DC_6F8;
ZZ_201DC_6F0:
	RA = 0x800208D4; //ZZ_201DC_6F8
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_6F8:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	S0 = EMU_ReadU32(V0);
	if ((int32_t)S3 < 0)
	{
		ZZ_CLOCKCYCLES(5,0x80020914);
		goto ZZ_201DC_738;
	}
	S0 += S4;
	V0 = (int32_t)S0 < (int32_t)S3;
	if (V0)
	{
		V1 = S1 & 0xFFF;
		ZZ_CLOCKCYCLES(9,0x80020900);
		goto ZZ_201DC_724;
	}
	V1 = S1 & 0xFFF;
	V0 = S4 << 1;
	S0 = V0 - S3;
	ZZ_CLOCKCYCLES(11,0x80020900);
ZZ_201DC_724:
	if ((int32_t)S0 >= 0)
	{
		S3 = S0;
		ZZ_CLOCKCYCLES(2,0x8002090C);
		goto ZZ_201DC_730;
	}
	S3 = S0;
	S3 = -S3;
	ZZ_CLOCKCYCLES(3,0x8002090C);
ZZ_201DC_730:
	V0 = S1 & 0xE00;
	ZZ_CLOCKCYCLES(2,0x80020944);
	goto ZZ_201DC_768;
ZZ_201DC_738:
	S0 = S0 - S4;
	V0 = (int32_t)S3 < (int32_t)S0;
	if (V0)
	{
		V1 = -S3;
		ZZ_CLOCKCYCLES(4,0x8002092C);
		goto ZZ_201DC_750;
	}
	V1 = -S3;
	V0 = S4 << 1;
	S0 = V1 - V0;
	ZZ_CLOCKCYCLES(6,0x8002092C);
ZZ_201DC_750:
	if ((int32_t)S0 >= 0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(2,0x80020938);
		goto ZZ_201DC_75C;
	}
	V0 = S0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x80020938);
ZZ_201DC_75C:
	S3 = -V0;
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	ZZ_CLOCKCYCLES(3,0x80020944);
ZZ_201DC_768:
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(3,0x80020980);
		goto ZZ_201DC_7A4;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(5,0x80020970);
		goto ZZ_201DC_794;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0;
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(11,0x8002098C);
	goto ZZ_201DC_7B0;
ZZ_201DC_794:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x8002098C);
	goto ZZ_201DC_7B0;
ZZ_201DC_7A4:
	RA = 0x80020988; //ZZ_201DC_7AC
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_7AC:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x8002098C);
ZZ_201DC_7B0:
	EMU_Write32(V1,S0);
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	EMU_Write32(V1,S3);
	ZZ_CLOCKCYCLES(7,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_7CC:
	V1 = S1 >> 12;
	A1 = V1 & 0xFFF;
	V0 = 0xBF0;
	if (A1 != V0)
	{
		V0 = V1 & 0xE00;
		ZZ_CLOCKCYCLES(5,0x800209E4);
		goto ZZ_201DC_808;
	}
	V0 = V1 & 0xE00;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0 - 4;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	S0 = EMU_ReadU32(V0 - 4); //+ 0xFFFFFFFC
	V1 = V0 - 8;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	S3 = EMU_ReadU32(V0 - 8); //+ 0xFFFFFFF8
	V1 = S1 & 0xFFF;
	ZZ_CLOCKCYCLES(15,0x80020A2C);
	goto ZZ_201DC_850;
ZZ_201DC_808:
	T1 = 0xE00;
	if (V0 != T1)
	{
		S0 = 0x100;
		ZZ_CLOCKCYCLES(3,0x80020A1C);
		goto ZZ_201DC_840;
	}
	S0 = 0x100;
	if (A1 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(5,0x80020A0C);
		goto ZZ_201DC_830;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80020A24);
	goto ZZ_201DC_848;
ZZ_201DC_830:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020A24);
	goto ZZ_201DC_848;
ZZ_201DC_840:
	RA = 0x80020A24; //ZZ_201DC_848
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_848:
	S3 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	ZZ_CLOCKCYCLES(2,0x80020A2C);
ZZ_201DC_850:
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(4,0x80020A68);
		goto ZZ_201DC_88C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(6,0x80020A58);
		goto ZZ_201DC_87C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(11,0x80020A70);
	goto ZZ_201DC_894;
ZZ_201DC_87C:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020A70);
	goto ZZ_201DC_894;
ZZ_201DC_88C:
	RA = 0x80020A70; //ZZ_201DC_894
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_894:
	if (!V0)
	{
		V1 = S1 >> 24;
		ZZ_CLOCKCYCLES(2,0x800229D0);
		goto ZZ_201DC_27F4;
	}
	V1 = S1 >> 24;
	A0 = EMU_ReadU32(V0);
	V0 = 0x22;
	if (V1 != V0)
	{
		A1 = S3;
		ZZ_CLOCKCYCLES(6,0x80020AA8);
		goto ZZ_201DC_8CC;
	}
	A1 = S3;
	if ((int32_t)S0 >= 0)
	{
		ZZ_CLOCKCYCLES(8,0x80020A94);
		goto ZZ_201DC_8B8;
	}
	S0 = -S0;
	ZZ_CLOCKCYCLES(9,0x80020A94);
ZZ_201DC_8B8:
	RA = 0x80020A9C; //ZZ_201DC_8C0
	A2 = S0;
	ZZ_CLOCKCYCLES(2,0x80024628);
	goto ZZ_24628;
ZZ_201DC_8C0:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_8CC:
	A2 = S0;
	RA = 0x80020AB4; //ZZ_201DC_8D8
	A3 = R0;
	ZZ_CLOCKCYCLES(3,0x800243A0);
	goto ZZ_243A0;
ZZ_201DC_8D8:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_8E4:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020B08);
		goto ZZ_201DC_92C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020AF8);
		goto ZZ_201DC_91C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020B14);
	goto ZZ_201DC_938;
ZZ_201DC_91C:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020B14);
	goto ZZ_201DC_938;
ZZ_201DC_92C:
	RA = 0x80020B10; //ZZ_201DC_934
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_934:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020B14);
ZZ_201DC_938:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020B58);
		goto ZZ_201DC_97C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020B48);
		goto ZZ_201DC_96C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020B64);
	goto ZZ_201DC_988;
ZZ_201DC_96C:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020B64);
	goto ZZ_201DC_988;
ZZ_201DC_97C:
	RA = 0x80020B60; //ZZ_201DC_984
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_984:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020B64);
ZZ_201DC_988:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	ZZ_CLOCKCYCLES(6,0x80020B7C);
ZZ_201DC_9A0:
	V0 += V1;
	ZZ_CLOCKCYCLES(2,0x80020B84);
ZZ_201DC_9A8:
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_9B0:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020BD4);
		goto ZZ_201DC_9F8;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020BC4);
		goto ZZ_201DC_9E8;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020BE0);
	goto ZZ_201DC_A04;
ZZ_201DC_9E8:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020BE0);
	goto ZZ_201DC_A04;
ZZ_201DC_9F8:
	RA = 0x80020BDC; //ZZ_201DC_A00
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_A00:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020BE0);
ZZ_201DC_A04:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020C28);
		goto ZZ_201DC_A4C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x80020C14);
		goto ZZ_201DC_A38;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A1 = V0;
	EMU_Write32(S2 + 220,A1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020C34);
	goto ZZ_201DC_A58;
ZZ_201DC_A38:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	A1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x80020C34);
	goto ZZ_201DC_A58;
ZZ_201DC_A4C:
	RA = 0x80020C30; //ZZ_201DC_A54
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_A54:
	A1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020C34);
ZZ_201DC_A58:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(S0);
	V0 = EMU_ReadU32(A1);
	V0 = V0 - V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_A78:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020C98);
		goto ZZ_201DC_ABC;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020C88);
		goto ZZ_201DC_AAC;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020CA0);
	goto ZZ_201DC_AC4;
ZZ_201DC_AAC:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020CA0);
	goto ZZ_201DC_AC4;
ZZ_201DC_ABC:
	RA = 0x80020CA0; //ZZ_201DC_AC4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_AC4:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80020CE4);
		goto ZZ_201DC_B08;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020CD4);
		goto ZZ_201DC_AF8;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020CEC);
	goto ZZ_201DC_B10;
ZZ_201DC_AF8:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020CEC);
	goto ZZ_201DC_B10;
ZZ_201DC_B08:
	RA = 0x80020CEC; //ZZ_201DC_B10
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_B10:
	A0 = EMU_ReadU32(V0);
	RA = 0x80020CF8; //ZZ_201DC_B1C
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x800245F0);
	goto ZZ_245F0;
ZZ_201DC_B1C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_B28:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020D4C);
		goto ZZ_201DC_B70;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020D3C);
		goto ZZ_201DC_B60;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020D58);
	goto ZZ_201DC_B7C;
ZZ_201DC_B60:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020D58);
	goto ZZ_201DC_B7C;
ZZ_201DC_B70:
	RA = 0x80020D54; //ZZ_201DC_B78
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_B78:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020D58);
ZZ_201DC_B7C:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020D9C);
		goto ZZ_201DC_BC0;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020D8C);
		goto ZZ_201DC_BB0;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A1 = V0;
	EMU_Write32(S2 + 220,A1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020DA8);
	goto ZZ_201DC_BCC;
ZZ_201DC_BB0:
	V0 <<= 2;
	V0 += 96;
	A1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020DA8);
	goto ZZ_201DC_BCC;
ZZ_201DC_BC0:
	RA = 0x80020DA4; //ZZ_201DC_BC8
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_BC8:
	A1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020DA8);
ZZ_201DC_BCC:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(S0);
	V0 = EMU_ReadU32(A1);
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_BF8:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020E1C);
		goto ZZ_201DC_C40;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020E0C);
		goto ZZ_201DC_C30;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020E28);
	goto ZZ_201DC_C4C;
ZZ_201DC_C30:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020E28);
	goto ZZ_201DC_C4C;
ZZ_201DC_C40:
	RA = 0x80020E24; //ZZ_201DC_C48
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_C48:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80020E28);
ZZ_201DC_C4C:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80020E6C);
		goto ZZ_201DC_C90;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80020E5C);
		goto ZZ_201DC_C80;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020E78);
	goto ZZ_201DC_C9C;
ZZ_201DC_C80:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020E78);
	goto ZZ_201DC_C9C;
ZZ_201DC_C90:
	RA = 0x80020E74; //ZZ_201DC_C98
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_C98:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020E78);
ZZ_201DC_C9C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(V1);
	V0 = EMU_ReadU32(S0);
	EMU_SDivide(V1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(10,0x80020EA4);
		goto ZZ_201DC_CC8;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x80020EA4);
ZZ_201DC_CC8:
	AT = -1;
	if (V0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80020EBC);
		goto ZZ_201DC_CE0;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80020EBC);
		goto ZZ_201DC_CE0;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80020EBC);
ZZ_201DC_CE0:
	V1 = LO;
	ZZ_CLOCKCYCLES(1,0x80020EC0);
ZZ_201DC_CE4:
	EMU_Write32(A0,V1);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_CEC:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020F0C);
		goto ZZ_201DC_D30;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020EFC);
		goto ZZ_201DC_D20;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80020F14);
	goto ZZ_201DC_D38;
ZZ_201DC_D20:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80020F14);
	goto ZZ_201DC_D38;
ZZ_201DC_D30:
	RA = 0x80020F14; //ZZ_201DC_D38
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_D38:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80020F5C);
		goto ZZ_201DC_D80;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020F4C);
		goto ZZ_201DC_D70;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80020F68);
	goto ZZ_201DC_D8C;
ZZ_201DC_D70:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80020F68);
	goto ZZ_201DC_D8C;
ZZ_201DC_D80:
	RA = 0x80020F64; //ZZ_201DC_D88
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_D88:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020F68);
ZZ_201DC_D8C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1);
	EMU_SDivide(V0,S0);
	if (S0)
	{
		ZZ_CLOCKCYCLES(9,0x80020F90);
		goto ZZ_201DC_DB4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x80020F90);
ZZ_201DC_DB4:
	AT = -1;
	if (S0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80020FA8);
		goto ZZ_201DC_DCC;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80020FA8);
		goto ZZ_201DC_DCC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80020FA8);
ZZ_201DC_DCC:
	V1 = HI;
	EMU_Write32(A0,V1);
	ZZ_CLOCKCYCLES(3,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_DD8:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80020FF8);
		goto ZZ_201DC_E1C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80020FE8);
		goto ZZ_201DC_E0C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021000);
	goto ZZ_201DC_E24;
ZZ_201DC_E0C:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021000);
	goto ZZ_201DC_E24;
ZZ_201DC_E1C:
	RA = 0x80021000; //ZZ_201DC_E24
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_E24:
	S3 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80021048);
		goto ZZ_201DC_E6C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(8,0x80021034);
		goto ZZ_201DC_E58;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021050);
	goto ZZ_201DC_E74;
ZZ_201DC_E58:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(5,0x80021050);
	goto ZZ_201DC_E74;
ZZ_201DC_E6C:
	RA = 0x80021050; //ZZ_201DC_E74
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_E74:
	S0 = EMU_ReadU32(V0);
	RA = 0x8002105C; //ZZ_201DC_E80
	A0 = S3 - S0;
	ZZ_CLOCKCYCLES(3,0x8002F6B0);
	goto ZZ_2F6B0;
ZZ_201DC_E80:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 += S0;
	ZZ_CLOCKCYCLES(3,0x80023300);
	goto ZZ_201DC_3124;
ZZ_201DC_E8C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800210AC);
		goto ZZ_201DC_ED0;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x8002109C);
		goto ZZ_201DC_EC0;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800210B4);
	goto ZZ_201DC_ED8;
ZZ_201DC_EC0:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800210B4);
	goto ZZ_201DC_ED8;
ZZ_201DC_ED0:
	RA = 0x800210B4; //ZZ_201DC_ED8
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_ED8:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x800210F8);
		goto ZZ_201DC_F1C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800210E8);
		goto ZZ_201DC_F0C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021100);
	goto ZZ_201DC_F24;
ZZ_201DC_F0C:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021100);
	goto ZZ_201DC_F24;
ZZ_201DC_F1C:
	RA = 0x80021100; //ZZ_201DC_F24
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_F24:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = EMU_ReadU32(V0);
	V0 = A0 + 4;
	if ((int32_t)S0 >= 0)
	{
		EMU_Write32(S2 + 220,V0); //+ 0xDC
		ZZ_CLOCKCYCLES(5,0x80021120);
		goto ZZ_201DC_F44;
	}
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = -S0;
	V0 = (int32_t)V1 >> V0;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_F44:
	V0 = V1 << S0;
	ZZ_CLOCKCYCLES(2,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_F4C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021170);
		goto ZZ_201DC_F94;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021160);
		goto ZZ_201DC_F84;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x8002117C);
	goto ZZ_201DC_FA0;
ZZ_201DC_F84:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x8002117C);
	goto ZZ_201DC_FA0;
ZZ_201DC_F94:
	RA = 0x80021178; //ZZ_201DC_F9C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_F9C:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x8002117C);
ZZ_201DC_FA0:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800211C4);
		goto ZZ_201DC_FE8;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x800211B0);
		goto ZZ_201DC_FD4;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800211D0);
	goto ZZ_201DC_FF4;
ZZ_201DC_FD4:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x800211D0);
	goto ZZ_201DC_FF4;
ZZ_201DC_FE8:
	RA = 0x800211CC; //ZZ_201DC_FF0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_FF0:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800211D0);
ZZ_201DC_FF4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 &= V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1014:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021238);
		goto ZZ_201DC_105C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021228);
		goto ZZ_201DC_104C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021244);
	goto ZZ_201DC_1068;
ZZ_201DC_104C:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021244);
	goto ZZ_201DC_1068;
ZZ_201DC_105C:
	RA = 0x80021240; //ZZ_201DC_1064
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1064:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021244);
ZZ_201DC_1068:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x8002128C);
		goto ZZ_201DC_10B0;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x80021278);
		goto ZZ_201DC_109C;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021298);
	goto ZZ_201DC_10BC;
ZZ_201DC_109C:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x80021298);
	goto ZZ_201DC_10BC;
ZZ_201DC_10B0:
	RA = 0x80021294; //ZZ_201DC_10B8
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_10B8:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80021298);
ZZ_201DC_10BC:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 |= V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_10DC:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021300);
		goto ZZ_201DC_1124;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800212F0);
		goto ZZ_201DC_1114;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x8002130C);
	goto ZZ_201DC_1130;
ZZ_201DC_1114:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x8002130C);
	goto ZZ_201DC_1130;
ZZ_201DC_1124:
	RA = 0x80021308; //ZZ_201DC_112C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_112C:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x8002130C);
ZZ_201DC_1130:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021354);
		goto ZZ_201DC_1178;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x80021340);
		goto ZZ_201DC_1164;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021360);
	goto ZZ_201DC_1184;
ZZ_201DC_1164:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x80021360);
	goto ZZ_201DC_1184;
ZZ_201DC_1178:
	RA = 0x8002135C; //ZZ_201DC_1180
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1180:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80021360);
ZZ_201DC_1184:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 ^= V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_11A4:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800213C4);
		goto ZZ_201DC_11E8;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800213B4);
		goto ZZ_201DC_11D8;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800213CC);
	goto ZZ_201DC_11F0;
ZZ_201DC_11D8:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x800213CC);
	goto ZZ_201DC_11F0;
ZZ_201DC_11E8:
	RA = 0x800213CC; //ZZ_201DC_11F0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_11F0:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80021414);
		goto ZZ_201DC_1238;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021404);
		goto ZZ_201DC_1228;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A0 = V0;
	EMU_Write32(S2 + 220,A0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021420);
	goto ZZ_201DC_1244;
ZZ_201DC_1228:
	V0 <<= 2;
	V0 += 96;
	A0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021420);
	goto ZZ_201DC_1244;
ZZ_201DC_1238:
	RA = 0x8002141C; //ZZ_201DC_1240
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1240:
	A0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021420);
ZZ_201DC_1244:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(A0);
	V0 &= S0;
	V0 ^= S0;
	V0 = V0 < 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1270:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021494);
		goto ZZ_201DC_12B8;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021484);
		goto ZZ_201DC_12A8;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x800214A0);
	goto ZZ_201DC_12C4;
ZZ_201DC_12A8:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800214A0);
	goto ZZ_201DC_12C4;
ZZ_201DC_12B8:
	RA = 0x8002149C; //ZZ_201DC_12C0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_12C0:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x800214A0);
ZZ_201DC_12C4:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800214E8);
		goto ZZ_201DC_130C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x800214D4);
		goto ZZ_201DC_12F8;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800214F4);
	goto ZZ_201DC_1318;
ZZ_201DC_12F8:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x800214F4);
	goto ZZ_201DC_1318;
ZZ_201DC_130C:
	RA = 0x800214F0; //ZZ_201DC_1314
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1314:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800214F4);
ZZ_201DC_1318:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 ^= V1;
	V0 = V0 < 1;
	ZZ_CLOCKCYCLES(10,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1340:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021564);
		goto ZZ_201DC_1388;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021554);
		goto ZZ_201DC_1378;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021570);
	goto ZZ_201DC_1394;
ZZ_201DC_1378:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021570);
	goto ZZ_201DC_1394;
ZZ_201DC_1388:
	RA = 0x8002156C; //ZZ_201DC_1390
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1390:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021570);
ZZ_201DC_1394:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800215B4);
		goto ZZ_201DC_13D8;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x800215A4);
		goto ZZ_201DC_13C8;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A1 = V0;
	EMU_Write32(S2 + 220,A1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800215C0);
	goto ZZ_201DC_13E4;
ZZ_201DC_13C8:
	V0 <<= 2;
	V0 += 96;
	A1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800215C0);
	goto ZZ_201DC_13E4;
ZZ_201DC_13D8:
	RA = 0x800215BC; //ZZ_201DC_13E0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_13E0:
	A1 = V0;
	ZZ_CLOCKCYCLES(1,0x800215C0);
ZZ_201DC_13E4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(S0);
	V0 = EMU_ReadU32(A1);
	V0 = (int32_t)V0 < (int32_t)V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1404:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021628);
		goto ZZ_201DC_144C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021618);
		goto ZZ_201DC_143C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021634);
	goto ZZ_201DC_1458;
ZZ_201DC_143C:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021634);
	goto ZZ_201DC_1458;
ZZ_201DC_144C:
	RA = 0x80021630; //ZZ_201DC_1454
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1454:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021634);
ZZ_201DC_1458:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021678);
		goto ZZ_201DC_149C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80021668);
		goto ZZ_201DC_148C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021684);
	goto ZZ_201DC_14A8;
ZZ_201DC_148C:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021684);
	goto ZZ_201DC_14A8;
ZZ_201DC_149C:
	RA = 0x80021680; //ZZ_201DC_14A4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_14A4:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80021684);
ZZ_201DC_14A8:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 = (int32_t)V0 < (int32_t)V1;
	ZZ_CLOCKCYCLES(8,0x80021834);
	goto ZZ_201DC_1658;
ZZ_201DC_14C8:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800216EC);
		goto ZZ_201DC_1510;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800216DC);
		goto ZZ_201DC_1500;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x800216F8);
	goto ZZ_201DC_151C;
ZZ_201DC_1500:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800216F8);
	goto ZZ_201DC_151C;
ZZ_201DC_1510:
	RA = 0x800216F4; //ZZ_201DC_1518
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1518:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x800216F8);
ZZ_201DC_151C:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021740);
		goto ZZ_201DC_1564;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x8002172C);
		goto ZZ_201DC_1550;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x8002174C);
	goto ZZ_201DC_1570;
ZZ_201DC_1550:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x8002174C);
	goto ZZ_201DC_1570;
ZZ_201DC_1564:
	RA = 0x80021748; //ZZ_201DC_156C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_156C:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x8002174C);
ZZ_201DC_1570:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(V1);
	V0 = (int32_t)V0 < (int32_t)V1;
	ZZ_CLOCKCYCLES(8,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1590:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x800217B4);
		goto ZZ_201DC_15D8;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x800217A4);
		goto ZZ_201DC_15C8;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x800217C0);
	goto ZZ_201DC_15E4;
ZZ_201DC_15C8:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800217C0);
	goto ZZ_201DC_15E4;
ZZ_201DC_15D8:
	RA = 0x800217BC; //ZZ_201DC_15E0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_15E0:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x800217C0);
ZZ_201DC_15E4:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021808);
		goto ZZ_201DC_162C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(7,0x800217F4);
		goto ZZ_201DC_1618;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A1 = V0;
	EMU_Write32(S2 + 220,A1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021814);
	goto ZZ_201DC_1638;
ZZ_201DC_1618:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	A1 = S2 + V0;
	ZZ_CLOCKCYCLES(5,0x80021814);
	goto ZZ_201DC_1638;
ZZ_201DC_162C:
	RA = 0x80021810; //ZZ_201DC_1634
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1634:
	A1 = V0;
	ZZ_CLOCKCYCLES(1,0x80021814);
ZZ_201DC_1638:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(S0);
	V0 = EMU_ReadU32(A1);
	V0 = (int32_t)V0 < (int32_t)V1;
	ZZ_CLOCKCYCLES(8,0x80021834);
ZZ_201DC_1658:
	V0 ^= 0x1;
	ZZ_CLOCKCYCLES(2,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1660:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021884);
		goto ZZ_201DC_16A8;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021874);
		goto ZZ_201DC_1698;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021890);
	goto ZZ_201DC_16B4;
ZZ_201DC_1698:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021890);
	goto ZZ_201DC_16B4;
ZZ_201DC_16A8:
	RA = 0x8002188C; //ZZ_201DC_16B0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_16B0:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021890);
ZZ_201DC_16B4:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800218D4);
		goto ZZ_201DC_16F8;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x800218C4);
		goto ZZ_201DC_16E8;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800218E0);
	goto ZZ_201DC_1704;
ZZ_201DC_16E8:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800218E0);
	goto ZZ_201DC_1704;
ZZ_201DC_16F8:
	RA = 0x800218DC; //ZZ_201DC_1700
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1700:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800218E0);
ZZ_201DC_1704:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1);
	if (!V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(8,0x80020EC0);
		goto ZZ_201DC_CE4;
	}
	V1 = R0;
	V0 = EMU_ReadU32(S0);
	V1 = R0 < V0;
	ZZ_CLOCKCYCLES(11,0x80020EC0);
	goto ZZ_201DC_CE4;
ZZ_201DC_1730:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021954);
		goto ZZ_201DC_1778;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021944);
		goto ZZ_201DC_1768;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021960);
	goto ZZ_201DC_1784;
ZZ_201DC_1768:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021960);
	goto ZZ_201DC_1784;
ZZ_201DC_1778:
	RA = 0x8002195C; //ZZ_201DC_1780
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1780:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021960);
ZZ_201DC_1784:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x800219A4);
		goto ZZ_201DC_17C8;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80021994);
		goto ZZ_201DC_17B8;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x800219B0);
	goto ZZ_201DC_17D4;
ZZ_201DC_17B8:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800219B0);
	goto ZZ_201DC_17D4;
ZZ_201DC_17C8:
	RA = 0x800219AC; //ZZ_201DC_17D0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_17D0:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x800219B0);
ZZ_201DC_17D4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1);
	if (V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(8,0x800219E0);
		goto ZZ_201DC_1804;
	}
	V1 = R0;
	V0 = EMU_ReadU32(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80020EC0);
		goto ZZ_201DC_CE4;
	}
	ZZ_CLOCKCYCLES(12,0x800219E0);
ZZ_201DC_1804:
	V1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80020EC0);
	goto ZZ_201DC_CE4;
ZZ_201DC_180C:
	A0 = 0x1F0000;
	A0 |= 0xFFFF;
	A0 &= S1;
	RA = 0x800219FC; //ZZ_201DC_1820
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x8001FDC4);
	goto ZZ_1FDC4;
ZZ_201DC_1820:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_182C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021A4C);
		goto ZZ_201DC_1870;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021A3C);
		goto ZZ_201DC_1860;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021A54);
	goto ZZ_201DC_1878;
ZZ_201DC_1860:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021A54);
	goto ZZ_201DC_1878;
ZZ_201DC_1870:
	RA = 0x80021A54; //ZZ_201DC_1878
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1878:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80021A98);
		goto ZZ_201DC_18BC;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021A88);
		goto ZZ_201DC_18AC;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021AA0);
	goto ZZ_201DC_18C4;
ZZ_201DC_18AC:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021AA0);
	goto ZZ_201DC_18C4;
ZZ_201DC_18BC:
	RA = 0x80021AA0; //ZZ_201DC_18C4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_18C4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A1 = EMU_ReadU32(V0);
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31740); //+ 0xFFFF8404
	V1 = EMU_ReadU32(V0 + 132); //+ 0x84
	V0 = V1 < 103;
	if (V0)
	{
		EMU_SMultiply(S0,V1);
		ZZ_CLOCKCYCLES(12,0x80021AD8);
		goto ZZ_201DC_18FC;
	}
	EMU_SMultiply(S0,V1);
	V1 = 0x66;
	EMU_SMultiply(S0,V1);
	ZZ_CLOCKCYCLES(14,0x80021AD8);
ZZ_201DC_18FC:
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(3,0x80021AE8);
		goto ZZ_201DC_190C;
	}
	V0 += 1023;
	ZZ_CLOCKCYCLES(4,0x80021AE8);
ZZ_201DC_190C:
	V0 = (int32_t)V0 >> 10;
	V0 += A1;
	ZZ_CLOCKCYCLES(3,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1918:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021B38);
		goto ZZ_201DC_195C;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021B28);
		goto ZZ_201DC_194C;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021B40);
	goto ZZ_201DC_1964;
ZZ_201DC_194C:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021B40);
	goto ZZ_201DC_1964;
ZZ_201DC_195C:
	RA = 0x80021B40; //ZZ_201DC_1964
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1964:
	S3 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80021B88);
		goto ZZ_201DC_19AC;
	}
	A1 = V1;
	if (V1 != FP)
	{
		ZZ_CLOCKCYCLES(8,0x80021B74);
		goto ZZ_201DC_1998;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021B90);
	goto ZZ_201DC_19B4;
ZZ_201DC_1998:
	V0 = S1 & 0x1FF;
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(5,0x80021B90);
	goto ZZ_201DC_19B4;
ZZ_201DC_19AC:
	RA = 0x80021B90; //ZZ_201DC_19B4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_19B4:
	A0 = EMU_ReadU32(V0);
	A0 <<= 11;
	EMU_SDivide(A0,S3);
	if (S3)
	{
		ZZ_CLOCKCYCLES(6,0x80021BAC);
		goto ZZ_201DC_19D0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x80021BAC);
ZZ_201DC_19D0:
	AT = -1;
	if (S3 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80021BC4);
		goto ZZ_201DC_19E8;
	}
	AT = 0x80000000;
	if (A0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80021BC4);
		goto ZZ_201DC_19E8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80021BC4);
ZZ_201DC_19E8:
	A0 = LO;
	S0 = 0xFFFF;
	S0 = (int32_t)S0 < (int32_t)S3;
	S0 <<= 1;
	RA = 0x80021BDC; //ZZ_201DC_1A00
	A0 -= 1024;
	ZZ_CLOCKCYCLES(6,0x8003905C);
	goto ZZ_3905C;
ZZ_201DC_1A00:
	V0 += 4096;
	V0 = (int32_t)V0 >> S0;
	EMU_SMultiply(V0,S3);
	V1 = 0xD;
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V1 - S0;
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = LO;
	V0 = (int32_t)V0 >> V1;
	ZZ_CLOCKCYCLES(11,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_1A2C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021C4C);
		goto ZZ_201DC_1A70;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021C3C);
		goto ZZ_201DC_1A60;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021C54);
	goto ZZ_201DC_1A78;
ZZ_201DC_1A60:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021C54);
	goto ZZ_201DC_1A78;
ZZ_201DC_1A70:
	RA = 0x80021C54; //ZZ_201DC_1A78
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1A78:
	S0 = EMU_ReadU32(V0);
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x80021C98);
		goto ZZ_201DC_1ABC;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021C88);
		goto ZZ_201DC_1AAC;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021CA0);
	goto ZZ_201DC_1AC4;
ZZ_201DC_1AAC:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021CA0);
	goto ZZ_201DC_1AC4;
ZZ_201DC_1ABC:
	RA = 0x80021CA0; //ZZ_201DC_1AC4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1AC4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = EMU_ReadU32(V0);
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31072); //+ 0x7960
	V0 += S0;
	EMU_SDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(11,0x80021CD0);
		goto ZZ_201DC_1AF4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(12,0x80021CD0);
ZZ_201DC_1AF4:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80021CE8);
		goto ZZ_201DC_1B0C;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80021CE8);
		goto ZZ_201DC_1B0C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80021CE8);
ZZ_201DC_1B0C:
	V1 = HI;
	EMU_Write32(A0,V1);
	ZZ_CLOCKCYCLES(3,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1B18:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021D38);
		goto ZZ_201DC_1B5C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80021D28);
		goto ZZ_201DC_1B4C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A0 = V0;
	EMU_Write32(S2 + 220,A0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021D44);
	goto ZZ_201DC_1B68;
ZZ_201DC_1B4C:
	V0 <<= 2;
	V0 += 96;
	A0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021D44);
	goto ZZ_201DC_1B68;
ZZ_201DC_1B5C:
	RA = 0x80021D40; //ZZ_201DC_1B64
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1B64:
	A0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021D44);
ZZ_201DC_1B68:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(A0);
	V0 = (int32_t)V0 >> 8;
	V0 <<= 2;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 6284); //+ 0x188C
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(13,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1B9C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80021DC0);
		goto ZZ_201DC_1BE4;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80021DB0);
		goto ZZ_201DC_1BD4;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80021DCC);
	goto ZZ_201DC_1BF0;
ZZ_201DC_1BD4:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021DCC);
	goto ZZ_201DC_1BF0;
ZZ_201DC_1BE4:
	RA = 0x80021DC8; //ZZ_201DC_1BEC
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1BEC:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80021DCC);
ZZ_201DC_1BF0:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021E0C);
		goto ZZ_201DC_1C30;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80021DFC);
		goto ZZ_201DC_1C20;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(12,0x80021E14);
	goto ZZ_201DC_1C38;
ZZ_201DC_1C20:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80021E14);
	goto ZZ_201DC_1C38;
ZZ_201DC_1C30:
	RA = 0x80021E14; //ZZ_201DC_1C38
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1C38:
	V0 = EMU_ReadU32(V0);
	V1 = EMU_ReadU32(S0);
	V0 = (int32_t)V0 >> 8;
	V0 <<= 2;
	AT = 0x80060000;
	AT += V0;
	EMU_Write32(AT + 6284,V1); //+ 0x188C
	ZZ_CLOCKCYCLES(9,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1C5C:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = EMU_ReadU32(V0 + 96); //+ 0x60
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = S1 >> 14;
	V0 &= 0x7E;
	V0 += V1;
	V0 = EMU_ReadU16(V0 + 48); //+ 0x30
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(13,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1C90:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	S3 = EMU_ReadU32(V0 + 96); //+ 0x60
	V0 = S1 >> 15;
	S0 = V0 & 0x3F;
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(11,0x80021EC8);
		goto ZZ_201DC_1CEC;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(13,0x80021EB8);
		goto ZZ_201DC_1CDC;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	V1 = V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(19,0x80021ED4);
	goto ZZ_201DC_1CF8;
ZZ_201DC_1CDC:
	V0 <<= 2;
	V0 += 96;
	V1 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021ED4);
	goto ZZ_201DC_1CF8;
ZZ_201DC_1CEC:
	RA = 0x80021ED0; //ZZ_201DC_1CF4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1CF4:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80021ED4);
ZZ_201DC_1CF8:
	V0 = S0 << 1;
	V1 = EMU_ReadU16(V1);
	V0 += S3;
	EMU_Write16(V0 + 48,V1); //+ 0x30
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1D0C:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80021F2C);
		goto ZZ_201DC_1D50;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80021F1C);
		goto ZZ_201DC_1D40;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S3 = V0;
	EMU_Write32(S2 + 220,S3); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80021F38);
	goto ZZ_201DC_1D5C;
ZZ_201DC_1D40:
	V0 <<= 2;
	V0 += 96;
	S3 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80021F38);
	goto ZZ_201DC_1D5C;
ZZ_201DC_1D50:
	RA = 0x80021F34; //ZZ_201DC_1D58
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_1D58:
	S3 = V0;
	ZZ_CLOCKCYCLES(1,0x80021F38);
ZZ_201DC_1D5C:
	V0 = S1 << 12;
	A2 = (int32_t)V0 >> 27;
	V0 = S1 >> 20;
	V1 = V0 & 0xF;
	V0 = V1 < 16;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(7,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1888); //+ 0x760
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(13);
	//ZZ_JUMPREGISTER(0x80021F6C,ZZ_201DC_1D90);
	//ZZ_JUMPREGISTER(0x80021FAC,ZZ_201DC_1DD0);
	//ZZ_JUMPREGISTER(0x80022094,ZZ_201DC_1EB8);
	//ZZ_JUMPREGISTER(0x800220F4,ZZ_201DC_1F18);
	//ZZ_JUMPREGISTER(0x8002212C,ZZ_201DC_1F50);
	//ZZ_JUMPREGISTER(0x80022048,ZZ_201DC_1E6C);
	//ZZ_JUMPREGISTER(0x80022164,ZZ_201DC_1F88);
	//ZZ_JUMPREGISTER(0x8002226C,ZZ_201DC_2090);
	//ZZ_JUMPREGISTER(0x800225F4,ZZ_201DC_2418);
	//ZZ_JUMPREGISTER(0x800222CC,ZZ_201DC_20F0);
	//ZZ_JUMPREGISTER(0x800224F4,ZZ_201DC_2318);
	//ZZ_JUMPREGISTER(0x80022640,ZZ_201DC_2464);
	//ZZ_JUMPREGISTER(0x800228D4,ZZ_201DC_26F8);
	//ZZ_JUMPREGISTER(0x800229E8,ZZ_201DC_280C);
	//ZZ_JUMPREGISTER(0x80022A84,ZZ_201DC_28A8);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_1D90:
	if (!S3)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S3);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800229D0);
		goto ZZ_201DC_27F4;
	}
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V1 = EMU_ReadU32(S3);
	V0 = A2 << 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0);
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(16,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1DD0:
	V0 = S1 >> 20;
	V0 &= 0xF;
	V1 = 0x6;
	if (V0 != V1)
	{
		A0 = S2 + 128;
		ZZ_CLOCKCYCLES(5,0x80021FC4);
		goto ZZ_201DC_1DE8;
	}
	A0 = S2 + 128;
	A0 = S3;
	ZZ_CLOCKCYCLES(6,0x80021FC4);
ZZ_201DC_1DE8:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	V1 = EMU_ReadU32(V0 + 96); //+ 0x60
	V0 = A2 & 0x2;
	if (!V0)
	{
		A1 = V1 + 128;
		ZZ_CLOCKCYCLES(7,0x80022014);
		goto ZZ_201DC_1E38;
	}
	A1 = V1 + 128;
	V0 = EMU_ReadU32(A0);
	EMU_Write32(SP + 28,R0); //+ 0x1C
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(V1 + 128); //+ 0x80
	A1 = SP + 40;
	EMU_Write32(SP + 44,R0); //+ 0x2C
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(V1 + 136); //+ 0x88
	A0 = SP + 24;
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(20,0x80022014);
ZZ_201DC_1E38:
	V0 = A2 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80022034);
		goto ZZ_201DC_1E58;
	}
	RA = 0x80022028; //ZZ_201DC_1E4C
	ZZ_CLOCKCYCLES(5,0x80029D30);
	goto ZZ_29D30;
ZZ_201DC_1E4C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_1E58:
	RA = 0x8002203C; //ZZ_201DC_1E60
	ZZ_CLOCKCYCLES(2,0x80029B90);
	goto ZZ_29B90;
ZZ_201DC_1E60:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_1E6C:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	A1 = EMU_ReadU32(V0 + 96); //+ 0x60
	A0 = S2 + 128;
	RA = 0x80022064; //ZZ_201DC_1E88
	A1 += 128;
	ZZ_CLOCKCYCLES(7,0x80029E10);
	goto ZZ_29E10;
ZZ_201DC_1E88:
	V1 = EMU_ReadU32(S2 + 144); //+ 0x90
	V1 &= 0xFFF;
	A0 = V0 - V1;
	if ((int32_t)A0 >= 0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(6,0x80022080);
		goto ZZ_201DC_1EA4;
	}
	V0 = A0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(7,0x80022080);
ZZ_201DC_1EA4:
	V0 = (int32_t)V0 < 2048;
	if (V0)
	{
		V0 = -A0;
		ZZ_CLOCKCYCLES(3,0x80022254);
		goto ZZ_201DC_2078;
	}
	V0 = -A0;
	A0 = V0 & 0xFFF;
	ZZ_CLOCKCYCLES(5,0x80022254);
	goto ZZ_201DC_2078;
ZZ_201DC_1EB8:
	V1 = 0x200000;
	V0 = EMU_ReadU32(S2 + 204); //+ 0xCC
	V1 |= 0x200;
	V0 &= V1;
	if (V0)
	{
		V0 = S1 >> 10;
		ZZ_CLOCKCYCLES(6,0x800220D0);
		goto ZZ_201DC_1EF4;
	}
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	A0 = EMU_ReadU32(V0 + 96); //+ 0x60
	A1 = S3;
	RA = 0x800220C4; //ZZ_201DC_1EE8
	A0 += 128;
	ZZ_CLOCKCYCLES(12,0x80029E10);
	goto ZZ_29E10;
ZZ_201DC_1EE8:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_1EF4:
	V0 &= 0x1C;
	V0 += S2;
	A0 = EMU_ReadU32(V0 + 96); //+ 0x60
	A1 = S3;
	RA = 0x800220E8; //ZZ_201DC_1F0C
	A0 += 128;
	ZZ_CLOCKCYCLES(6,0x80029E48);
	goto ZZ_29E48;
ZZ_201DC_1F0C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_1F18:
	V1 = S1 >> 10;
	V1 &= 0x1C;
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 += S2;
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S3);
	V1 = EMU_ReadU32(V1 + 96); //+ 0x60
	V0 >>= 8;
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 96); //+ 0x60
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1F50:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	A1 = EMU_ReadU32(V0 + 96); //+ 0x60
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = EMU_ReadU32(S3);
	V1 = A0 - 4;
	V0 >>= 8;
	V0 <<= 2;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	V1 = EMU_ReadU32(A0 - 4); //+ 0xFFFFFFFC
	V0 += A1;
	EMU_Write32(V0 + 96,V1); //+ 0x60
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_1F88:
	if (!S3)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S3);
	if (!V0)
	{
		V0 >>= 8;
		ZZ_CLOCKCYCLES(6,0x800229D0);
		goto ZZ_201DC_27F4;
	}
	V0 >>= 8;
	V0 <<= 2;
	T1 = 0x80060000;
	T1 -= 168;
	V0 += T1;
	V0 = EMU_ReadU32(V0);
	V0 &= 0x1;
	if (!V0)
	{
		S4 = 0x3;
		ZZ_CLOCKCYCLES(15,0x800229D0);
		goto ZZ_201DC_27F4;
	}
	S4 = 0x3;
	V1 = S4 << 3;
	ZZ_CLOCKCYCLES(16,0x800221A4);
ZZ_201DC_1FC8:
	S4 += 1;
	V0 = 0x80060000;
	V0 += 3512;
	S0 = V1 + V0;
	S1 = EMU_ReadU32(S3);
	if (S0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(7,0x800221C8);
		goto ZZ_201DC_1FEC;
	}
	A1 = R0;
	A0 = R0;
	ZZ_CLOCKCYCLES(9,0x80022244);
	goto ZZ_201DC_2068;
ZZ_201DC_1FEC:
	V0 = EMU_ReadU32(S0);
	T1 = 0x2;
	if (V0 == T1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x800221FC);
		goto ZZ_201DC_2020;
	}
	A0 = S0;
	RA = 0x800221E0; //ZZ_201DC_2004
	A1 = S1;
	ZZ_CLOCKCYCLES(6,0x8001BA90);
	goto ZZ_1BA90;
ZZ_201DC_2004:
	A1 = V0;
	if (A1)
	{
		A0 = A1;
		ZZ_CLOCKCYCLES(3,0x80022244);
		goto ZZ_201DC_2068;
	}
	A0 = A1;
	V0 = EMU_ReadU32(S0);
	T1 = 0x2;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(7,0x80022208);
		goto ZZ_201DC_202C;
	}
	ZZ_CLOCKCYCLES(7,0x800221FC);
ZZ_201DC_2020:
	A0 = EMU_ReadU32(S0 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(3,0x80022230);
	goto ZZ_201DC_2054;
ZZ_201DC_202C:
	A0 = EMU_ReadU32(S0 + 108); //+ 0x6C
	ZZ_CLOCKCYCLES(3,0x80022230);
	goto ZZ_201DC_2054;
ZZ_201DC_2038:
	A1 = 0x80020000;
	A1 -= 17776;
	S0 = EMU_ReadU32(A0 + 104); //+ 0x68
	RA = 0x80022228; //ZZ_201DC_204C
	A2 = S1;
	ZZ_CLOCKCYCLES(5,0x8001B788);
	goto ZZ_1B788;
ZZ_201DC_204C:
	A1 = V0;
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80022230);
ZZ_201DC_2054:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x80022240);
		goto ZZ_201DC_2064;
	}
	if (!A1)
	{
		ZZ_CLOCKCYCLES(4,0x80022214);
		goto ZZ_201DC_2038;
	}
	ZZ_CLOCKCYCLES(4,0x80022240);
ZZ_201DC_2064:
	A0 = A1;
	ZZ_CLOCKCYCLES(1,0x80022244);
ZZ_201DC_2068:
	if (A0)
	{
		V0 = (int32_t)S4 < 5;
		ZZ_CLOCKCYCLES(2,0x80022254);
		goto ZZ_201DC_2078;
	}
	V0 = (int32_t)S4 < 5;
	if (V0)
	{
		V1 = S4 << 3;
		ZZ_CLOCKCYCLES(4,0x800221A4);
		goto ZZ_201DC_1FC8;
	}
	V1 = S4 << 3;
	ZZ_CLOCKCYCLES(4,0x80022254);
ZZ_201DC_2078:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	EMU_Write32(V1,A0);
	ZZ_CLOCKCYCLES(6,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2090:
	if (!S3)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	if (!A2)
	{
		A0 = -3;
		ZZ_CLOCKCYCLES(4,0x800222A0);
		goto ZZ_201DC_20C4;
	}
	A0 = -3;
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	V1 &= A0;
	ZZ_CLOCKCYCLES(13,0x800224EC);
	goto ZZ_201DC_2310;
ZZ_201DC_20C4:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	V1 |= 0x2;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_20F0:
	if (!S3)
	{
		V0 = A2 < 10;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = A2 < 10;
	if (!V0)
	{
		V0 = A2 << 2;
		ZZ_CLOCKCYCLES(4,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = A2 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1952); //+ 0x7A0
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(10);
	//ZZ_JUMPREGISTER(0x800222F4,ZZ_201DC_2118);
	//ZZ_JUMPREGISTER(0x80022318,ZZ_201DC_213C);
	//ZZ_JUMPREGISTER(0x800223B8,ZZ_201DC_21DC);
	//ZZ_JUMPREGISTER(0x80022470,ZZ_201DC_2294);
	//ZZ_JUMPREGISTER(0x8002234C,ZZ_201DC_2170);
	//ZZ_JUMPREGISTER(0x800223DC,ZZ_201DC_2200);
	//ZZ_JUMPREGISTER(0x80020218,ZZ_201DC_3C);
	//ZZ_JUMPREGISTER(0x800224C8,ZZ_201DC_22EC);
	//ZZ_JUMPREGISTER(0x8002249C,ZZ_201DC_22C0);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_2118:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	A0 = -5;
	ZZ_CLOCKCYCLES(9,0x800224E8);
	goto ZZ_201DC_230C;
ZZ_201DC_213C:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	V1 |= 0x4;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2168:
	EMU_Write16(A1,V0);
	ZZ_CLOCKCYCLES(2,0x800223B8);
	goto ZZ_201DC_21DC;
ZZ_201DC_2170:
	A1 = 0x80060000;
	A1 -= 7352;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	V1 = EMU_ReadU32(S3);
	A0 = EMU_ReadU16(A1);
	V0 = EMU_ReadU16(V0 + 4); //+ 0x4
	V1 = (int32_t)V1 >> 8;
	V0 <<= 9;
	if (!A0)
	{
		V1 |= V0;
		ZZ_CLOCKCYCLES(11,0x800223B8);
		goto ZZ_201DC_21DC;
	}
	V1 |= V0;
	V1 &= 0xFFFF;
	V0 = EMU_ReadU16(A1);
	ZZ_CLOCKCYCLES(13,0x80022380);
ZZ_201DC_21A4:
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(3,0x800223A4);
		goto ZZ_201DC_21C8;
	}
	V0 = EMU_ReadU16(A1 + 2); //+ 0x2
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x80022344);
		goto ZZ_201DC_2168;
	}
	V0 = 0x1;
	EMU_Write16(A1,R0);
	ZZ_CLOCKCYCLES(9,0x800223B8);
	goto ZZ_201DC_21DC;
ZZ_201DC_21C8:
	A1 += 2;
	V0 = EMU_ReadU16(A1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80022380);
		goto ZZ_201DC_21A4;
	}
	ZZ_CLOCKCYCLES(5,0x800223B8);
ZZ_201DC_21DC:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	A0 = -9;
	ZZ_CLOCKCYCLES(9,0x800224E8);
	goto ZZ_201DC_230C;
ZZ_201DC_2200:
	A2 = 0x80060000;
	A2 -= 7352;
	A3 = R0;
	A1 = EMU_ReadU32(S3);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	A1 = (int32_t)A1 >> 8;
	V1 = EMU_ReadU16(V0 + 4); //+ 0x4
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V1 <<= 9;
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 &= 0x2000;
	if (V0)
	{
		A1 |= V1;
		ZZ_CLOCKCYCLES(17,0x80022470);
		goto ZZ_201DC_2294;
	}
	A1 |= V1;
	V0 = EMU_ReadU16(A2);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x80022460);
		goto ZZ_201DC_2284;
	}
	V1 = A1 & 0xFFFF;
	A0 = 0x1;
	ZZ_CLOCKCYCLES(23,0x80022438);
ZZ_201DC_225C:
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x80022470);
		goto ZZ_201DC_2294;
	}
	if (V0 != A0)
	{
		ZZ_CLOCKCYCLES(4,0x8002244C);
		goto ZZ_201DC_2270;
	}
	A3 = A2;
	ZZ_CLOCKCYCLES(5,0x8002244C);
ZZ_201DC_2270:
	A2 += 2;
	V0 = EMU_ReadU16(A2);
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80022438);
		goto ZZ_201DC_225C;
	}
	ZZ_CLOCKCYCLES(5,0x80022460);
ZZ_201DC_2284:
	if (A3)
	{
		ZZ_CLOCKCYCLES(2,0x8002246C);
		goto ZZ_201DC_2290;
	}
	A3 = A2;
	ZZ_CLOCKCYCLES(3,0x8002246C);
ZZ_201DC_2290:
	EMU_Write16(A3,A1);
	ZZ_CLOCKCYCLES(1,0x80022470);
ZZ_201DC_2294:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	V1 |= 0x8;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_22C0:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	V1 |= 0x1;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_22EC:
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V1 = EMU_ReadU32(V0);
	A0 = -2;
	ZZ_CLOCKCYCLES(8,0x800224E8);
ZZ_201DC_230C:
	V1 &= A0;
	ZZ_CLOCKCYCLES(1,0x800224EC);
ZZ_201DC_2310:
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2318:
	T1 = 0x2;
	if (A2 == T1)
	{
		V0 = (int32_t)A2 < 3;
		ZZ_CLOCKCYCLES(3,0x80022574);
		goto ZZ_201DC_2398;
	}
	V0 = (int32_t)A2 < 3;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(5,0x80022518);
		goto ZZ_201DC_233C;
	}
	V0 = 0x1;
	if (A2 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002252C);
		goto ZZ_201DC_2350;
	}
	ZZ_CLOCKCYCLES(9,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_233C:
	V0 = 0x3;
	if (A2 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x800225B4);
		goto ZZ_201DC_23D8;
	}
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2350:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	if (!S3)
	{
		EMU_Write32(S2 + 220,V0); //+ 0xDC
		ZZ_CLOCKCYCLES(5,0x800229E0);
		goto ZZ_201DC_2804;
	}
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V0 = EMU_ReadU32(V0);
	V0 >>= 1;
	V0 ^= 0x1;
	V0 &= 0x1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(18,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2398:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	if (!S3)
	{
		EMU_Write32(S2 + 220,V0); //+ 0xDC
		ZZ_CLOCKCYCLES(5,0x800229E0);
		goto ZZ_201DC_2804;
	}
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V0 = EMU_ReadU32(V0);
	V0 &= 0x4;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(16,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_23D8:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	if (!S3)
	{
		EMU_Write32(S2 + 220,V0); //+ 0xDC
		ZZ_CLOCKCYCLES(5,0x800229E0);
		goto ZZ_201DC_2804;
	}
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(S3);
	T1 = 0x80060000;
	T1 -= 168;
	V0 >>= 8;
	V0 <<= 2;
	V0 += T1;
	V0 = EMU_ReadU32(V0);
	V0 &= 0x8;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(16,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2418:
	if (S3)
	{
		ZZ_CLOCKCYCLES(2,0x8002260C);
		goto ZZ_201DC_2430;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	V0 = (int32_t)V1 < -254;
	ZZ_CLOCKCYCLES(6,0x80022624);
	goto ZZ_201DC_2448;
ZZ_201DC_2430:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	RA = 0x8002261C; //ZZ_201DC_2440
	A1 = S3;
	ZZ_CLOCKCYCLES(4,0x80026DD4);
	goto ZZ_26DD4;
ZZ_201DC_2440:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	ZZ_CLOCKCYCLES(2,0x80022624);
ZZ_201DC_2448:
	if (!V0)
	{
		V0 = S1 >> 10;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	V0 = EMU_ReadU32(V0 + 96); //+ 0x60
	EMU_Write32(V0 + 40,V1); //+ 0x28
	ZZ_CLOCKCYCLES(7,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2464:
	V0 = A2 < 12;
	if (!V0)
	{
		V0 = A2 << 2;
		ZZ_CLOCKCYCLES(3,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = A2 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1992); //+ 0x7C8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(9);
	//ZZ_JUMPREGISTER(0x80022664,ZZ_201DC_2488);
	//ZZ_JUMPREGISTER(0x80022680,ZZ_201DC_24A4);
	//ZZ_JUMPREGISTER(0x80022698,ZZ_201DC_24BC);
	//ZZ_JUMPREGISTER(0x80022780,ZZ_201DC_25A4);
	//ZZ_JUMPREGISTER(0x80022794,ZZ_201DC_25B8);
	//ZZ_JUMPREGISTER(0x800227A8,ZZ_201DC_25CC);
	//ZZ_JUMPREGISTER(0x800227B8,ZZ_201DC_25DC);
	//ZZ_JUMPREGISTER(0x800227CC,ZZ_201DC_25F0);
	//ZZ_JUMPREGISTER(0x80022858,ZZ_201DC_267C);
	//ZZ_JUMPREGISTER(0x80022894,ZZ_201DC_26B8);
	//ZZ_JUMPREGISTER(0x800228B0,ZZ_201DC_26D4);
	//ZZ_JUMPREGISTER(0x800228C4,ZZ_201DC_26E8);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_2488:
	A0 = S2;
	A1 = 0x80050000;
	A1 += 31092;
	RA = 0x80022678; //ZZ_201DC_249C
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x80026460);
	goto ZZ_26460;
ZZ_201DC_249C:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_24A4:
	A0 = 0x80050000;
	A0 += 31092;
	RA = 0x80022690; //ZZ_201DC_24B4
	ZZ_CLOCKCYCLES(4,0x80026650);
	goto ZZ_26650;
ZZ_201DC_24B4:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_24BC:
	V1 = 0x80060000;
	V1 += 3512;
	V0 = EMU_ReadU32(S3);
	A0 = EMU_ReadU32(S2 + 100); //+ 0x64
	V0 >>= 8;
	V0 <<= 3;
	if (!A0)
	{
		A1 = V0 + V1;
		ZZ_CLOCKCYCLES(8,0x80022738);
		goto ZZ_201DC_255C;
	}
	A1 = V0 + V1;
	V0 = EMU_ReadU32(A0);
	T1 = 0x2;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(12,0x800226D4);
		goto ZZ_201DC_24F8;
	}
	V1 = EMU_ReadU32(A0 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(15,0x800226D8);
	goto ZZ_201DC_24FC;
ZZ_201DC_24F8:
	V1 = EMU_ReadU32(A0 + 108); //+ 0x6C
	ZZ_CLOCKCYCLES(1,0x800226D8);
ZZ_201DC_24FC:
	if (V1 != S2)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(3,0x80022710);
		goto ZZ_201DC_2534;
	}
	T1 = 0x2;
	V0 = EMU_ReadU32(A0);
	if (V0 != T1)
	{
		V1 = A0 + 108;
		ZZ_CLOCKCYCLES(7,0x800226F8);
		goto ZZ_201DC_251C;
	}
	V1 = A0 + 108;
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(8,0x800226F8);
ZZ_201DC_251C:
	V0 = EMU_ReadU32(S2 + 104); //+ 0x68
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(3,0x80022738);
	goto ZZ_201DC_255C;
ZZ_201DC_2528:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V1 = EMU_ReadU32(V1 + 104); //+ 0x68
	ZZ_CLOCKCYCLES(3,0x80022710);
ZZ_201DC_2534:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80020214);
		goto ZZ_201DC_38;
	}
	V0 = EMU_ReadU32(V1 + 104); //+ 0x68
	if (V0 != S2)
	{
		ZZ_CLOCKCYCLES(7,0x80022704);
		goto ZZ_201DC_2528;
	}
	V0 = EMU_ReadU32(S2 + 104); //+ 0x68
	EMU_Write32(V1 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(10,0x80022738);
ZZ_201DC_255C:
	EMU_Write32(S2 + 100,A1); //+ 0x64
	V0 = EMU_ReadU32(A1);
	T1 = 0x2;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(5,0x80022758);
		goto ZZ_201DC_257C;
	}
	V0 = EMU_ReadU32(A1 + 4); //+ 0x4
	EMU_Write32(S2 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(8,0x80022764);
	goto ZZ_201DC_2588;
ZZ_201DC_257C:
	V0 = EMU_ReadU32(A1 + 108); //+ 0x6C
	EMU_Write32(S2 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(3,0x80022764);
ZZ_201DC_2588:
	V0 = EMU_ReadU32(A1);
	T1 = 0x2;
	if (V0 != T1)
	{
		V0 = A1 + 108;
		ZZ_CLOCKCYCLES(4,0x80022778);
		goto ZZ_201DC_259C;
	}
	V0 = A1 + 108;
	V0 = A1 + 4;
	ZZ_CLOCKCYCLES(5,0x80022778);
ZZ_201DC_259C:
	EMU_Write32(V0,S2);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_25A4:
	A0 = EMU_ReadU32(S3);
	RA = 0x8002278C; //ZZ_201DC_25B0
	ZZ_CLOCKCYCLES(3,0x8002FDD8);
	goto ZZ_2FDD8;
ZZ_201DC_25B0:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_25B8:
	V1 = EMU_ReadU32(S3);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31000); //+ 0x7918
	EMU_Write32(V1 + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_25CC:
	RA = 0x800227B0; //ZZ_201DC_25D4
	ZZ_CLOCKCYCLES(2,0x800313B4);
	goto ZZ_313B4;
ZZ_201DC_25D4:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_25DC:
	A0 = EMU_ReadU32(S3);
	RA = 0x800227C4; //ZZ_201DC_25E8
	ZZ_CLOCKCYCLES(3,0x800313C4);
	goto ZZ_313C4;
ZZ_201DC_25E8:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_25F0:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	if (!A0)
	{
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	S6 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S6 + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(11,0x80020218);
		goto ZZ_201DC_3C;
	}
	S3 = R0;
	S7 = 0x80060000;
	S7 += 3512;
	S4 = 0x214;
	ZZ_CLOCKCYCLES(14,0x80022804);
ZZ_201DC_2628:
	RA = 0x8002280C; //ZZ_201DC_2630
	A0 = S6 + S4;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_201DC_2630:
	S5 = V0;
	S1 = R0;
	S0 = S7;
	ZZ_CLOCKCYCLES(3,0x80022818);
ZZ_201DC_263C:
	A0 = S0;
	A1 = 0x80020000;
	A1 -= 12004;
	RA = 0x8002282C; //ZZ_201DC_2650
	A2 = S5;
	ZZ_CLOCKCYCLES(5,0x8001B92C);
	goto ZZ_1B92C;
ZZ_201DC_2650:
	S1 += 1;
	V0 = (int32_t)S1 < 8;
	if (V0)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(4,0x80022818);
		goto ZZ_201DC_263C;
	}
	S0 += 8;
	V0 = EMU_ReadU32(S6 + 528); //+ 0x210
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)V0;
	if (V0)
	{
		S4 += 4;
		ZZ_CLOCKCYCLES(9,0x80022804);
		goto ZZ_201DC_2628;
	}
	S4 += 4;
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_267C:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	S0 = EMU_ReadU32(V0 + 96); //+ 0x60
	A1 = S3;
	RA = 0x80022874; //ZZ_201DC_2698
	A0 = S0 + 128;
	ZZ_CLOCKCYCLES(7,0x80029DB0);
	goto ZZ_29DB0;
ZZ_201DC_2698:
	V1 = EMU_ReadU32(S0 + 132); //+ 0x84
	A0 = EMU_ReadU32(S3 + 4); //+ 0x4
	A1 = V0;
	RA = 0x80022888; //ZZ_201DC_26AC
	A0 = V1 - A0;
	ZZ_CLOCKCYCLES(5,0x8004301C);
	goto ZZ_4301C;
ZZ_201DC_26AC:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_26B8:
	V0 = EMU_ReadU32(S3);
	V0 >>= 8;
	AT = 0x80050000;
	EMU_Write32(AT + 26388,V0); //+ 0x6714
	ZZ_CLOCKCYCLES(7,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_26D4:
	A0 = EMU_ReadU32(S3);
	RA = 0x800228BC; //ZZ_201DC_26E0
	A0 >>= 8;
	ZZ_CLOCKCYCLES(3,0x80013798);
	goto ZZ_13798;
ZZ_201DC_26E0:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_26E8:
	RA = 0x800228CC; //ZZ_201DC_26F0
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80026200);
	goto ZZ_26200;
ZZ_201DC_26F0:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_26F8:
	V1 = 0x7FFF0000;
	V0 = S1 >> 15;
	V0 &= 0x1F;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	V0 = EMU_ReadU32(V0 + 96); //+ 0x60
	V1 |= 0xFFFF;
	EMU_Write32(SP + 68,V1); //+ 0x44
	V1 = R0;
	EMU_Write32(SP + 64,R0); //+ 0x40
	EMU_Write32(SP + 60,V0); //+ 0x3C
	V0 = EMU_ReadU32(S3);
	A0 = 0x80060000;
	A0 += 3544;
	if (!A0)
	{
		EMU_Write32(SP + 72,V0); //+ 0x48
		ZZ_CLOCKCYCLES(18,0x800229A4);
		goto ZZ_201DC_27C8;
	}
	EMU_Write32(SP + 72,V0); //+ 0x48
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3544); //+ 0xDD8
	T1 = 0x2;
	if (V0 == T1)
	{
		ZZ_CLOCKCYCLES(23,0x80022958);
		goto ZZ_201DC_277C;
	}
	RA = 0x80022938; //ZZ_201DC_275C
	A1 = SP + 56;
	ZZ_CLOCKCYCLES(25,0x8001BAB0);
	goto ZZ_1BAB0;
ZZ_201DC_275C:
	V1 = V0;
	if (V1)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(3,0x800229A4);
		goto ZZ_201DC_27C8;
	}
	T1 = 0x2;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3544); //+ 0xDD8
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(8,0x80022968);
		goto ZZ_201DC_278C;
	}
	ZZ_CLOCKCYCLES(8,0x80022958);
ZZ_201DC_277C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 3548); //+ 0xDDC
	ZZ_CLOCKCYCLES(4,0x80022994);
	goto ZZ_201DC_27B8;
ZZ_201DC_278C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 3652); //+ 0xE44
	ZZ_CLOCKCYCLES(4,0x80022994);
	goto ZZ_201DC_27B8;
ZZ_201DC_279C:
	A1 = 0x80020000;
	A1 -= 17744;
	S0 = EMU_ReadU32(A0 + 104); //+ 0x68
	RA = 0x8002298C; //ZZ_201DC_27B0
	A2 = SP + 56;
	ZZ_CLOCKCYCLES(5,0x8001B788);
	goto ZZ_1B788;
ZZ_201DC_27B0:
	V1 = V0;
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80022994);
ZZ_201DC_27B8:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x800229A4);
		goto ZZ_201DC_27C8;
	}
	if (!V1)
	{
		ZZ_CLOCKCYCLES(4,0x80022978);
		goto ZZ_201DC_279C;
	}
	ZZ_CLOCKCYCLES(4,0x800229A4);
ZZ_201DC_27C8:
	V0 = EMU_ReadU32(SP + 64); //+ 0x40
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800229D0);
		goto ZZ_201DC_27F4;
	}
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = V0 + 4;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	V1 = EMU_ReadU32(SP + 64); //+ 0x40
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_27F4:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(4,0x800229E0);
ZZ_201DC_2804:
	EMU_Write32(V1,R0);
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_280C:
	V0 = S1 >> 10;
	V0 &= 0x1C;
	V0 += S2;
	A1 = EMU_ReadU32(V0 + 96); //+ 0x60
	V0 = EMU_ReadU32(A1 + 128); //+ 0x80
	V1 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 += V1;
	EMU_Write32(SP + 80,V0); //+ 0x50
	V0 = EMU_ReadU32(A1 + 132); //+ 0x84
	V1 = EMU_ReadU32(A1 + 12); //+ 0xC
	V0 += V1;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V0 = EMU_ReadU32(A1 + 136); //+ 0x88
	V1 = EMU_ReadU32(A1 + 16); //+ 0x10
	V0 += V1;
	EMU_Write32(SP + 88,V0); //+ 0x58
	V0 = EMU_ReadU32(A1 + 128); //+ 0x80
	V1 = EMU_ReadU32(A1 + 20); //+ 0x14
	V0 += V1;
	EMU_Write32(SP + 92,V0); //+ 0x5C
	V0 = EMU_ReadU32(A1 + 132); //+ 0x84
	V1 = EMU_ReadU32(A1 + 24); //+ 0x18
	A0 = S3;
	V0 += V1;
	EMU_Write32(SP + 96,V0); //+ 0x60
	V0 = EMU_ReadU32(A1 + 136); //+ 0x88
	V1 = EMU_ReadU32(A1 + 28); //+ 0x1C
	A1 = SP + 80;
	V0 += V1;
	RA = 0x80022A78; //ZZ_201DC_289C
	EMU_Write32(SP + 100,V0); //+ 0x64
	ZZ_CLOCKCYCLES(36,0x80026B80);
	goto ZZ_26B80;
ZZ_201DC_289C:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_28A8:
	A1 = EMU_ReadU32(S3);
	RA = 0x80022A90; //ZZ_201DC_28B4
	A0 = A2;
	ZZ_CLOCKCYCLES(3,0x8003D4EC);
	goto ZZ_3D4EC;
ZZ_201DC_28B4:
	EMU_Write32(S2 + 244,V0); //+ 0xF4
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_28BC:
	V0 = S1 >> 22;
	A0 = V0 & 0x3;
	V0 = S1 >> 20;
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V1 = V0 & 0x3;
	V0 = T1 & 0x8;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(8,0x80024008);
		goto ZZ_201DC_3E2C;
	}
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(10,0x80022AE4);
		goto ZZ_201DC_2908;
	}
	if (!V1)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(12,0x80022AD8);
		goto ZZ_201DC_28FC;
	}
	T1 = 0x2;
	if (V1 == T1)
	{
		ZZ_CLOCKCYCLES(14,0x80022B20);
		goto ZZ_201DC_2944;
	}
	ZZ_CLOCKCYCLES(16,0x80022B60);
	goto ZZ_201DC_2984;
ZZ_201DC_28FC:
	T1 = 0x1;
	EMU_Write32(SP + 240,T1); //+ 0xF0
	ZZ_CLOCKCYCLES(3,0x80022B60);
	goto ZZ_201DC_2984;
ZZ_201DC_2908:
	V0 = S1 >> 14;
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80022B0C);
		goto ZZ_201DC_2930;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80022B14);
	goto ZZ_201DC_2938;
ZZ_201DC_2930:
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x80022B14);
ZZ_201DC_2938:
	V0 = EMU_ReadU32(V0);
	EMU_Write32(SP + 240,V0); //+ 0xF0
	ZZ_CLOCKCYCLES(3,0x80022B60);
	goto ZZ_201DC_2984;
ZZ_201DC_2944:
	V0 = S1 >> 14;
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80022B48);
		goto ZZ_201DC_296C;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80022B50);
	goto ZZ_201DC_2974;
ZZ_201DC_296C:
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x80022B50);
ZZ_201DC_2974:
	V0 = EMU_ReadU32(V0);
	V0 = V0 < 1;
	EMU_Write32(SP + 240,V0); //+ 0xF0
	ZZ_CLOCKCYCLES(4,0x80022B60);
ZZ_201DC_2984:
	T1 = EMU_ReadU32(SP + 240); //+ 0xF0
	if (!T1)
	{
		V0 = S5 ^ 0x88;
		ZZ_CLOCKCYCLES(4,0x80022C7C);
		goto ZZ_201DC_2AA0;
	}
	V0 = S5 ^ 0x88;
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	T1 |= 0x20;
	EMU_Write32(SP + 208,T1); //+ 0xD0
	T1 = EMU_ReadU32(SP + 216); //+ 0xD8
	V0 = R0 < V0;
	EMU_Write32(T1 + 4,V0); //+ 0x4
	V0 = 0x1;
	if (A0 == V0)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(14,0x80022C0C);
		goto ZZ_201DC_2A30;
	}
	T1 = 0x2;
	if (A0 != T1)
	{
		ZZ_CLOCKCYCLES(16,0x80020218);
		goto ZZ_201DC_3C;
	}
	V1 = EMU_ReadU32(S2 + 228); //+ 0xE4
	V0 = V1 + 8;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	A1 = EMU_ReadU32(V1 + 8); //+ 0x8
	A2 = A1 >> 16;
	if (A2)
	{
		A0 = -255;
		ZZ_CLOCKCYCLES(25,0x80022BCC);
		goto ZZ_201DC_29F0;
	}
	A0 = -255;
	A0 = -25;
	ZZ_CLOCKCYCLES(27,0x80022BF8);
	goto ZZ_201DC_2A1C;
ZZ_201DC_29F0:
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = A1 & 0xFFFF;
	V0 += 96;
	V1 = EMU_ReadU32(V1 + 4); //+ 0x4
	V0 += S2;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = A2 + 96;
	V0 += S2;
	EMU_Write32(S2 + 228,V0); //+ 0xE4
	EMU_Write32(S2 + 224,V1); //+ 0xE0
	ZZ_CLOCKCYCLES(11,0x80022BF8);
ZZ_201DC_2A1C:
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80022F58);
		goto ZZ_201DC_2D7C;
	}
	ZZ_CLOCKCYCLES(5,0x80022E2C);
	goto ZZ_201DC_2C50;
ZZ_201DC_2A30:
	V1 = EMU_ReadU32(S2 + 228); //+ 0xE4
	V0 = V1 + 8;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	A1 = EMU_ReadU32(V1 + 8); //+ 0x8
	A2 = A1 >> 16;
	if (A2)
	{
		A0 = -255;
		ZZ_CLOCKCYCLES(9,0x80022C38);
		goto ZZ_201DC_2A5C;
	}
	A0 = -255;
	A0 = -25;
	ZZ_CLOCKCYCLES(11,0x80022C64);
	goto ZZ_201DC_2A88;
ZZ_201DC_2A5C:
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = A1 & 0xFFFF;
	V0 += 96;
	V1 = EMU_ReadU32(V1 + 4); //+ 0x4
	V0 += S2;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = A2 + 96;
	V0 += S2;
	EMU_Write32(S2 + 228,V0); //+ 0xE4
	EMU_Write32(S2 + 224,V1); //+ 0xE0
	ZZ_CLOCKCYCLES(11,0x80022C64);
ZZ_201DC_2A88:
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
		V0 = S1 & 0x3FFF;
		ZZ_CLOCKCYCLES(3,0x80022F58);
		goto ZZ_201DC_2D7C;
	}
	V0 = S1 & 0x3FFF;
	T1 = EMU_ReadU32(SP + 216); //+ 0xD8
	EMU_Write32(T1,V0);
	ZZ_CLOCKCYCLES(6,0x80022E38);
	goto ZZ_201DC_2C5C;
ZZ_201DC_2AA0:
	if (A0)
	{
		V0 = S1 << 22;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = S1 << 22;
	V1 = EMU_ReadU32(S2 + 224); //+ 0xE0
	V0 = (int32_t)V0 >> 20;
	V0 += V1;
	EMU_Write32(S2 + 224,V0); //+ 0xE0
	V0 = S1 >> 8;
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 &= 0x3C;
	ZZ_CLOCKCYCLES(10,0x80023D8C);
	goto ZZ_201DC_3BB0;
ZZ_201DC_2AC8:
	V0 = S1 >> 22;
	A0 = V0 & 0x3;
	V0 = S1 >> 20;
	V1 = V0 & 0x3;
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x80022CE4);
		goto ZZ_201DC_2B08;
	}
	if (!V1)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(9,0x80022CD8);
		goto ZZ_201DC_2AFC;
	}
	T1 = 0x2;
	if (V1 == T1)
	{
		ZZ_CLOCKCYCLES(11,0x80022D20);
		goto ZZ_201DC_2B44;
	}
	ZZ_CLOCKCYCLES(13,0x80022D60);
	goto ZZ_201DC_2B84;
ZZ_201DC_2AFC:
	T1 = 0x1;
	EMU_Write32(SP + 248,T1); //+ 0xF8
	ZZ_CLOCKCYCLES(3,0x80022D60);
	goto ZZ_201DC_2B84;
ZZ_201DC_2B08:
	V0 = S1 >> 14;
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80022D0C);
		goto ZZ_201DC_2B30;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80022D14);
	goto ZZ_201DC_2B38;
ZZ_201DC_2B30:
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x80022D14);
ZZ_201DC_2B38:
	V0 = EMU_ReadU32(V0);
	EMU_Write32(SP + 248,V0); //+ 0xF8
	ZZ_CLOCKCYCLES(3,0x80022D60);
	goto ZZ_201DC_2B84;
ZZ_201DC_2B44:
	V0 = S1 >> 14;
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80022D48);
		goto ZZ_201DC_2B6C;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(10,0x80022D50);
	goto ZZ_201DC_2B74;
ZZ_201DC_2B6C:
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x80022D50);
ZZ_201DC_2B74:
	V0 = EMU_ReadU32(V0);
	V0 = V0 < 1;
	EMU_Write32(SP + 248,V0); //+ 0xF8
	ZZ_CLOCKCYCLES(4,0x80022D60);
ZZ_201DC_2B84:
	T1 = EMU_ReadU32(SP + 248); //+ 0xF8
	if (!T1)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = 0x1;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(6,0x80022ED4);
		goto ZZ_201DC_2CF8;
	}
	if (!A0)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(8,0x80022EB0);
		goto ZZ_201DC_2CD4;
	}
	T1 = 0x2;
	if (A0 != T1)
	{
		ZZ_CLOCKCYCLES(10,0x80020218);
		goto ZZ_201DC_3C;
	}
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	EMU_Write32(SP + 104,T1); //+ 0x68
	V1 = EMU_ReadU32(S2 + 228); //+ 0xE4
	V0 = V1 + 8;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	A1 = EMU_ReadU32(V1 + 8); //+ 0x8
	A2 = A1 >> 16;
	if (A2)
	{
		V0 = V1 + 4;
		ZZ_CLOCKCYCLES(22,0x80022DC0);
		goto ZZ_201DC_2BE4;
	}
	V0 = V1 + 4;
	A0 = -25;
	ZZ_CLOCKCYCLES(24,0x80022E10);
	goto ZZ_201DC_2C34;
ZZ_201DC_2BE4:
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A0 = -255;
	EMU_Write32(S2 + 224,V0); //+ 0xE0
	V0 = V1 - 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = 0xFFFF0000;
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V1 = EMU_ReadU16(V1 - 4); //+ 0xFFFFFFFC
	V0 &= T1;
	V0 |= V1;
	EMU_Write32(SP + 104,V0); //+ 0x68
	V0 = A1 & 0xFFFF;
	V0 += 96;
	V0 += S2;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = A2 + 96;
	V0 += S2;
	EMU_Write32(S2 + 228,V0); //+ 0xE4
	ZZ_CLOCKCYCLES(20,0x80022E10);
ZZ_201DC_2C34:
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = T1 & 0x8;
	if (!V0)
	{
		V0 = T1 & 0x20;
		ZZ_CLOCKCYCLES(5,0x80022E48);
		goto ZZ_201DC_2C6C;
	}
	V0 = T1 & 0x20;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80022E40);
		goto ZZ_201DC_2C64;
	}
	ZZ_CLOCKCYCLES(7,0x80022E2C);
ZZ_201DC_2C50:
	T1 = EMU_ReadU32(SP + 216); //+ 0xD8
	V0 = 0xFF;
	EMU_Write32(T1,V0);
	ZZ_CLOCKCYCLES(3,0x80022E38);
ZZ_201DC_2C5C:
	V0 = -255;
	ZZ_CLOCKCYCLES(2,0x8002400C);
	goto ZZ_201DC_3E30;
ZZ_201DC_2C64:
	V0 = -26;
	ZZ_CLOCKCYCLES(2,0x8002400C);
	goto ZZ_201DC_3E30;
ZZ_201DC_2C6C:
	V0 = T1 & 0x1;
	if (V0)
	{
		V0 = T1 & 0x10;
		ZZ_CLOCKCYCLES(3,0x80022E6C);
		goto ZZ_201DC_2C90;
	}
	V0 = T1 & 0x10;
	V0 = (int32_t)A0 < -254;
	if (V0)
	{
		V0 = 0xFFFF;
		ZZ_CLOCKCYCLES(6,0x80022E94);
		goto ZZ_201DC_2CB8;
	}
	V0 = 0xFFFF;
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = T1 & 0x10;
	ZZ_CLOCKCYCLES(9,0x80022E6C);
ZZ_201DC_2C90:
	if (!V0)
	{
		V0 = (int32_t)A0 < -254;
		ZZ_CLOCKCYCLES(2,0x80022F58);
		goto ZZ_201DC_2D7C;
	}
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(4,0x8002400C);
		goto ZZ_201DC_3E30;
	}
	V0 = A0;
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	EMU_Write32(V1,R0);
	ZZ_CLOCKCYCLES(10,0x80022F58);
	goto ZZ_201DC_2D7C;
ZZ_201DC_2CB8:
	A0 = EMU_ReadU32(SP + 104); //+ 0x68
	V1 = A0 & 0xFFFF;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	EMU_Write32(SP + 208,A0); //+ 0xD0
	ZZ_CLOCKCYCLES(7,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2CD4:
	V0 = S1 << 22;
	V1 = EMU_ReadU32(S2 + 224); //+ 0xE0
	V0 = (int32_t)V0 >> 20;
	V0 += V1;
	EMU_Write32(S2 + 224,V0); //+ 0xE0
	V0 = S1 >> 8;
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 &= 0x3C;
	ZZ_CLOCKCYCLES(9,0x80023D8C);
	goto ZZ_201DC_3BB0;
ZZ_201DC_2CF8:
	V1 = S1 & 0x3FFF;
	V1 <<= 4;
	V0 = EMU_ReadU32(S2 + 32); //+ 0x20
	A1 = EMU_ReadU32(S2 + 296); //+ 0x128
	V0 = EMU_ReadU32(V0 + 32); //+ 0x20
	A0 = EMU_ReadU32(S2 + 208); //+ 0xD0
	V1 += V0;
	V0 = A1 - 3;
	V0 = V0 < 2;
	V1 = EMU_ReadU32(V1);
	if (V0)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(12,0x80022F0C);
		goto ZZ_201DC_2D30;
	}
	T1 = 0x2;
	if (A1 != T1)
	{
		ZZ_CLOCKCYCLES(14,0x80022F18);
		goto ZZ_201DC_2D3C;
	}
	ZZ_CLOCKCYCLES(14,0x80022F0C);
ZZ_201DC_2D30:
	V0 = A0 | 0x1002;
	V0 &= V1;
	ZZ_CLOCKCYCLES(3,0x80022F1C);
	goto ZZ_201DC_2D40;
ZZ_201DC_2D3C:
	V0 = A0 & V1;
	ZZ_CLOCKCYCLES(1,0x80022F1C);
ZZ_201DC_2D40:
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	A0 = S2;
	A1 = S1 & 0x3FFF;
	A2 = R0;
	RA = 0x80022F34; //ZZ_201DC_2D58
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x8001D698);
	EMU_NativeCall(GOOL_ChangeObjectState);
ZZ_201DC_2D58:
	A0 = V0;
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80023DAC);
		goto ZZ_201DC_3BD0;
	}
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = T1 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80023DAC);
		goto ZZ_201DC_3BD0;
	}
	ZZ_CLOCKCYCLES(9,0x80022F58);
ZZ_201DC_2D7C:
	V0 = A0;
	ZZ_CLOCKCYCLES(2,0x8002400C);
	goto ZZ_201DC_3E30;
ZZ_201DC_2D84:
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A1 = EMU_ReadU32(S2 + 228); //+ 0xE4
	V0 = A0 + 4;
	A1 -= 96;
	EMU_Write32(S2 + 228,V1); //+ 0xE4
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	A1 = A1 - S2;
	EMU_Write32(A0,T1);
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A2 = EMU_ReadU32(S2 + 224); //+ 0xE0
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	EMU_Write32(A0,A2);
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A1 <<= 16;
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = S1 >> 18;
	V0 &= 0x3C;
	V1 = V1 - V0;
	V1 -= 96;
	V1 = V1 - S2;
	V1 |= A1;
	EMU_Write32(A0,V1);
	A0 = S1 & 0x3FFF;
	V0 = 0x3FFF;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(30,0x80022FF4);
		goto ZZ_201DC_2E18;
	}
	V0 = EMU_ReadU32(S2 + 32); //+ 0x20
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = A0 << 2;
	V0 += V1;
	EMU_Write32(S2 + 224,V0); //+ 0xE0
	ZZ_CLOCKCYCLES(37,0x80022FF8);
	goto ZZ_201DC_2E1C;
ZZ_201DC_2E18:
	EMU_Write32(S2 + 224,R0); //+ 0xE0
	ZZ_CLOCKCYCLES(1,0x80022FF8);
ZZ_201DC_2E1C:
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = -10;
	T1 &= V0;
	EMU_Write32(SP + 208,T1); //+ 0xD0
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_2E30:
	V0 = S1 & 0x7F;
	V1 = EMU_ReadU32(S2 + 32); //+ 0x20
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = EMU_ReadU32(V1 + 36); //+ 0x24
	V0 <<= 8;
	EMU_Write32(S2 + 268,V0); //+ 0x10C
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = S1 >> 5;
	V0 &= 0x7FC;
	V0 += V1;
	EMU_Write32(S2 + 264,V0); //+ 0x108
	V0 = S1 >> 16;
	V0 &= 0x3F;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 3588); //+ 0xE04
	V0 <<= 24;
	V0 |= V1;
	EMU_Write32(A0,V0);
	V0 = S1 >> 22;
	V1 = V0 & 0x3;
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(24,0x8002309C);
		goto ZZ_201DC_2EC0;
	}
	if (!V1)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(26,0x80023084);
		goto ZZ_201DC_2EA8;
	}
	T1 = 0x2;
	if (V1 == T1)
	{
		ZZ_CLOCKCYCLES(28,0x800230B4);
		goto ZZ_201DC_2ED8;
	}
	ZZ_CLOCKCYCLES(30,0x800230C4);
	goto ZZ_201DC_2EE8;
ZZ_201DC_2EA8:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	if ((int32_t)V0 >= 0)
	{
		V0 = -V0;
		ZZ_CLOCKCYCLES(4,0x800230C4);
		goto ZZ_201DC_2EE8;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x800230C0);
	goto ZZ_201DC_2EE4;
ZZ_201DC_2EC0:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	if ((int32_t)V0 <= 0)
	{
		V0 = -V0;
		ZZ_CLOCKCYCLES(4,0x800230C4);
		goto ZZ_201DC_2EE8;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x800230C0);
	goto ZZ_201DC_2EE4;
ZZ_201DC_2ED8:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x800230C0);
ZZ_201DC_2EE4:
	EMU_Write32(S2 + 152,V0); //+ 0x98
	ZZ_CLOCKCYCLES(1,0x800230C4);
ZZ_201DC_2EE8:
	V0 = EMU_ReadU32(S2 + 204); //+ 0xCC
	V0 &= 0x18;
	if (!V0)
	{
		V1 = 0xA0000;
		ZZ_CLOCKCYCLES(5,0x80023218);
		goto ZZ_201DC_303C;
	}
	V1 = 0xA0000;
	V1 |= 0xF000;
	V0 = 0x70000;
	V0 |= 0xD000;
	A0 = S2;
	A1 = S2 + 128;
	A3 = 0x70000;
	A2 = EMU_ReadU32(GP + 696); //+ 0x2B8
	A3 |= 0xD000;
	EMU_Write32(SP + 16,V1); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	RA = 0x80023108; //ZZ_201DC_2F2C
	A2 += 128;
	ZZ_CLOCKCYCLES(17,0x80029C90);
	goto ZZ_29C90;
ZZ_201DC_2F2C:
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x80023210);
		goto ZZ_201DC_3034;
	}
	A0 = S2;
	V0 = EMU_ReadU32(S2 + 204); //+ 0xCC
	if ((int32_t)V0 < 0)
	{
		ZZ_CLOCKCYCLES(6,0x80023210);
		goto ZZ_201DC_3034;
	}
	ZZ_CLOCKCYCLES(8,0x80023218);
	goto ZZ_201DC_303C;
ZZ_201DC_2F4C:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80023168);
		goto ZZ_201DC_2F8C;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80023158);
		goto ZZ_201DC_2F7C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(12,0x80023170);
	goto ZZ_201DC_2F94;
ZZ_201DC_2F7C:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80023170);
	goto ZZ_201DC_2F94;
ZZ_201DC_2F8C:
	RA = 0x80023170; //ZZ_201DC_2F94
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_2F94:
	V0 = EMU_ReadU32(V0);
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	EMU_Write32(S2 + 268,V0); //+ 0x10C
	V0 = A0 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = S1 >> 16;
	V0 &= 0x3F;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 3588); //+ 0xE04
	V0 <<= 24;
	V0 |= V1;
	EMU_Write32(A0,V0);
	V0 = S1 >> 22;
	V1 = V0 & 0x3;
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(17,0x800231E4);
		goto ZZ_201DC_3008;
	}
	if (!V1)
	{
		T1 = 0x2;
		ZZ_CLOCKCYCLES(19,0x800231CC);
		goto ZZ_201DC_2FF0;
	}
	T1 = 0x2;
	if (V1 == T1)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(21,0x800231FC);
		goto ZZ_201DC_3020;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(23,0x80023210);
	goto ZZ_201DC_3034;
ZZ_201DC_2FF0:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	if ((int32_t)V0 >= 0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x80023210);
		goto ZZ_201DC_3034;
	}
	A0 = S2;
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x80023208);
	goto ZZ_201DC_302C;
ZZ_201DC_3008:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	if ((int32_t)V0 <= 0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x80023210);
		goto ZZ_201DC_3034;
	}
	A0 = S2;
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x80023208);
	goto ZZ_201DC_302C;
ZZ_201DC_3020:
	V0 = EMU_ReadU32(S2 + 152); //+ 0x98
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x80023208);
ZZ_201DC_302C:
	EMU_Write32(S2 + 152,V0); //+ 0x98
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x80023210);
ZZ_201DC_3034:
	RA = 0x80023218; //ZZ_201DC_303C
	A1 = S2 + 152;
	ZZ_CLOCKCYCLES(2,0x8001D33C);
	goto ZZ_1D33C;
ZZ_201DC_303C:
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = T1 & 0x4;
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(7,0x8002400C);
	goto ZZ_201DC_3E30;
ZZ_201DC_3058:
	A0 = S2;
	A1 = S1 >> 12;
	A1 &= 0xFFF;
	RA = 0x80023248; //ZZ_201DC_306C
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x8001FC4C);
	goto ZZ_1FC4C;
ZZ_201DC_306C:
	A0 = S2;
	A1 = S1 & 0xFFF;
	S0 = EMU_ReadU32(V0);
	RA = 0x8002325C; //ZZ_201DC_3080
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x8001FC4C);
	goto ZZ_1FC4C;
ZZ_201DC_3080:
	A0 = V0;
	S0 -= 1;
	V0 = S0 < 6;
	if (!V0)
	{
		V0 = S0 << 2;
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = S0 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2040); //+ 0x7F8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	//ZZ_JUMPREGISTER(0x80023288,ZZ_201DC_30AC);
	//ZZ_JUMPREGISTER(0x800232A4,ZZ_201DC_30C8);
	//ZZ_JUMPREGISTER(0x800232B4,ZZ_201DC_30D8);
	//ZZ_JUMPREGISTER(0x800232C8,ZZ_201DC_30EC);
	//ZZ_JUMPREGISTER(0x800232DC,ZZ_201DC_3100);
	//ZZ_JUMPREGISTER(0x80023290,ZZ_201DC_30B4);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_30AC:
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80023294);
	goto ZZ_201DC_30B8;
ZZ_201DC_30B4:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80023294);
ZZ_201DC_30B8:
	RA = 0x8002329C; //ZZ_201DC_30C0
	A2 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80015118);
	goto ZZ_15118;
ZZ_201DC_30C0:
	EMU_Write32(S2 + 244,V0); //+ 0xF4
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_30C8:
	RA = 0x800232AC; //ZZ_201DC_30D0
	A1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80015458);
	goto ZZ_15458;
ZZ_201DC_30D0:
	EMU_Write32(S2 + 244,V0); //+ 0xF4
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_30D8:
	RA = 0x800232BC; //ZZ_201DC_30E0
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80015458);
	goto ZZ_15458;
ZZ_201DC_30E0:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_30EC:
	RA = 0x800232D0; //ZZ_201DC_30F4
	ZZ_CLOCKCYCLES(2,0x800156D4);
	goto ZZ_156D4;
ZZ_201DC_30F4:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(3,0x80023304);
	goto ZZ_201DC_3128;
ZZ_201DC_3100:
	S0 = EMU_ReadU32(A0);
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A0 = S0 << 2;
	A0 = V0 - A0;
	RA = 0x800232F4; //ZZ_201DC_3118
	A1 = S0;
	ZZ_CLOCKCYCLES(6,0x8001579C);
	goto ZZ_1579C;
ZZ_201DC_3118:
	A0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	S0 <<= 2;
	A0 = A0 - S0;
	ZZ_CLOCKCYCLES(3,0x80023300);
ZZ_201DC_3124:
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(1,0x80023304);
ZZ_201DC_3128:
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(2,0x80020B84);
	goto ZZ_201DC_9A8;
ZZ_201DC_3130:
	V0 = S1 >> 12;
	V0 &= 0x7;
	V1 = V0 << 1;
	V1 += V0;
	V1 <<= 2;
	V1 += 128;
	S4 = S2 + V1;
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(12,0x8002336C);
		goto ZZ_201DC_3190;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(14,0x8002335C);
		goto ZZ_201DC_3180;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S3 = V0;
	EMU_Write32(S2 + 220,S3); //+ 0xDC
	ZZ_CLOCKCYCLES(20,0x80023378);
	goto ZZ_201DC_319C;
ZZ_201DC_3180:
	V0 <<= 2;
	V0 += 96;
	S3 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023378);
	goto ZZ_201DC_319C;
ZZ_201DC_3190:
	RA = 0x80023374; //ZZ_201DC_3198
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3198:
	S3 = V0;
	ZZ_CLOCKCYCLES(1,0x80023378);
ZZ_201DC_319C:
	V0 = S1 >> 18;
	V1 = V0 & 0x7;
	V0 = V1 < 8;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2064); //+ 0x810
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	//ZZ_JUMPREGISTER(0x800233A4,ZZ_201DC_31C8);
	//ZZ_JUMPREGISTER(0x80023694,ZZ_201DC_34B8);
	//ZZ_JUMPREGISTER(0x80023408,ZZ_201DC_322C);
	//ZZ_JUMPREGISTER(0x80020218,ZZ_201DC_3C);
	//ZZ_JUMPREGISTER(0x8002349C,ZZ_201DC_32C0);
	//ZZ_JUMPREGISTER(0x80023534,ZZ_201DC_3358);
	//ZZ_JUMPREGISTER(0x800237BC,ZZ_201DC_35E0);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_31C8:
	if (!S3)
	{
		ZZ_CLOCKCYCLES(2,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S2 + 272); //+ 0x110
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S4);
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	A0 = EMU_ReadU32(S4 + 8); //+ 0x8
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	A0 = S2;
	A1 = EMU_ReadU32(S3);
	RA = 0x800233E4; //ZZ_201DC_3208
	A2 = SP + 40;
	ZZ_CLOCKCYCLES(16,0x8001AC9C);
	goto ZZ_1AC9C;
ZZ_201DC_3208:
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	EMU_Write32(S4,V0);
	EMU_Write32(S4 + 4,V1); //+ 0x4
	EMU_Write32(S4 + 8,A0); //+ 0x8
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	EMU_Write32(S2 + 284,V0); //+ 0x11C
	ZZ_CLOCKCYCLES(9,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_322C:
	A0 = EMU_ReadU32(S2 + 180); //+ 0xB4
	RA = 0x80023414; //ZZ_201DC_3238
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(3,0x8003905C);
	goto ZZ_3905C;
ZZ_201DC_3238:
	V1 = EMU_ReadU32(S3);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	V1 = 0x200000;
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(S4,V0);
	V0 = EMU_ReadU32(S2 + 204); //+ 0xCC
	V1 |= 0x200;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002346C);
		goto ZZ_201DC_3290;
	}
	A0 = EMU_ReadU32(S2 + 180); //+ 0xB4
	RA = 0x80023450; //ZZ_201DC_3274
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(15,0x800390D0);
	goto ZZ_390D0;
ZZ_201DC_3274:
	V1 = EMU_ReadU32(S3);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(S4 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(7,0x80023490);
	goto ZZ_201DC_32B4;
ZZ_201DC_3290:
	A0 = EMU_ReadU32(S2 + 180); //+ 0xB4
	RA = 0x80023478; //ZZ_201DC_329C
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(3,0x800390D0);
	goto ZZ_390D0;
ZZ_201DC_329C:
	V1 = EMU_ReadU32(S3);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(S4 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(6,0x80023490);
ZZ_201DC_32B4:
	V0 = EMU_ReadU32(S3);
	EMU_Write32(S2 + 292,V0); //+ 0x124
	ZZ_CLOCKCYCLES(3,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_32C0:
	V0 = EMU_ReadU32(S3);
	EMU_Write32(SP + 32,V0); //+ 0x20
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 - 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1 - 4); //+ 0xFFFFFFFC
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 = V1 - 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	V0 = EMU_ReadU32(V1 - 4); //+ 0xFFFFFFFC
	V1 = S1 >> 15;
	V1 &= 0x7;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 128;
	A0 = S2 + V0;
	V0 = S1 >> 18;
	V0 &= 0x7;
	V1 = 0x4;
	if (V0 != V1)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(28,0x80023518);
		goto ZZ_201DC_333C;
	}
	A3 = R0;
	A2 = S2 + 140;
	A3 = S2 + 152;
	ZZ_CLOCKCYCLES(31,0x8002351C);
	goto ZZ_201DC_3340;
ZZ_201DC_333C:
	A2 = S2 + 176;
	ZZ_CLOCKCYCLES(1,0x8002351C);
ZZ_201DC_3340:
	EMU_Write32(SP + 16,A0); //+ 0x10
	A0 = SP + 24;
	RA = 0x8002352C; //ZZ_201DC_3350
	A1 = S4;
	ZZ_CLOCKCYCLES(4,0x8002465C);
	goto ZZ_2465C;
ZZ_201DC_3350:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3358:
	V0 = S1 >> 19;
	V0 &= 0x1C;
	V0 += S2;
	S1 = EMU_ReadU32(V0 + 96); //+ 0x60
	A0 = EMU_ReadU32(S1 + 264); //+ 0x108
	if (!A0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(9,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = 0x1;
	V1 = EMU_ReadU8(A0);
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(13,0x80020218);
		goto ZZ_201DC_3C;
	}
	RA = 0x80023570; //ZZ_201DC_3394
	A0 += 4;
	ZZ_CLOCKCYCLES(15,0x80015A98);
	goto ZZ_15A98;
ZZ_201DC_3394:
	A0 = EMU_ReadU32(S1 + 264); //+ 0x108
	V1 = EMU_ReadU32(S1 + 268); //+ 0x10C
	V1 >>= 8;
	V1 <<= 2;
	V1 += V0;
	S0 = EMU_ReadU32(V1 + 16); //+ 0x10
	RA = 0x80023594; //ZZ_201DC_33B8
	A0 += 4;
	ZZ_CLOCKCYCLES(9,0x80015A98);
	goto ZZ_15A98;
ZZ_201DC_33B8:
	V1 = EMU_ReadU32(S1 + 268); //+ 0x10C
	V1 >>= 8;
	V1 <<= 2;
	V1 += V0;
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	RA = 0x800235B4; //ZZ_201DC_33D8
	A0 += 4;
	ZZ_CLOCKCYCLES(8,0x80015A98);
	goto ZZ_15A98;
ZZ_201DC_33D8:
	V1 = EMU_ReadU32(S3);
	V1 >>= 8;
	A0 = V1 << 1;
	A0 += V1;
	A0 <<= 1;
	A0 += 56;
	A0 += S0;
	V1 = EMU_ReadU8(A0);
	A1 = EMU_ReadU32(S0 + 8); //+ 0x8
	V1 -= 128;
	V1 += A1;
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 <<= 10;
	EMU_Write32(SP + 56,V1); //+ 0x38
	V0 = EMU_ReadU8(A0 + 1); //+ 0x1
	V1 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 -= 128;
	V0 += V1;
	V0 <<= 10;
	EMU_Write32(SP + 60,V0); //+ 0x3C
	V0 = EMU_ReadU8(A0 + 2); //+ 0x2
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 -= 128;
	V0 += V1;
	V0 <<= 10;
	EMU_Write32(SP + 64,V0); //+ 0x40
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	V0 = EMU_ReadU32(A1 + 4); //+ 0x4
	EMU_SMultiply(V1,V0);
	V0 = LO;
	V0 = (int32_t)V0 >> 12;
	EMU_Write32(SP + 80,V0); //+ 0x50
	V1 = EMU_ReadU32(S1 + 156); //+ 0x9C
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_SMultiply(V1,V0);
	V0 = LO;
	V0 = (int32_t)V0 >> 12;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V1 = EMU_ReadU32(S1 + 160); //+ 0xA0
	V0 = EMU_ReadU32(A1 + 12); //+ 0xC
	EMU_SMultiply(V1,V0);
	A2 = S1 + 140;
	A3 = SP + 80;
	A0 = SP + 56;
	A1 = S1 + 128;
	V0 = LO;
	V0 = (int32_t)V0 >> 12;
	EMU_Write32(SP + 88,V0); //+ 0x58
	RA = 0x8002368C; //ZZ_201DC_34B0
	EMU_Write32(SP + 16,S4); //+ 0x10
	ZZ_CLOCKCYCLES(54,0x8002465C);
	goto ZZ_2465C;
ZZ_201DC_34B0:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_34B8:
	A0 = S4;
	V1 = S1 >> 15;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 128;
	S0 = S2 + V0;
	RA = 0x800236BC; //ZZ_201DC_34E0
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x800249E0);
	goto ZZ_249E0;
ZZ_201DC_34E0:
	V1 = EMU_ReadU32(S3);
	if (!V1)
	{
		ZZ_CLOCKCYCLES(4,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	A2 = (int32_t)V0 >> 8;
	if (!A2)
	{
		A1 = V1 << 3;
		ZZ_CLOCKCYCLES(9,0x80020218);
		goto ZZ_201DC_3C;
	}
	A1 = V1 << 3;
	A1 += V1;
	A1 <<= 2;
	A1 = A1 - V1;
	A1 <<= 3;
	EMU_SDivide(A1,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(16,0x80023700);
		goto ZZ_201DC_3524;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(17,0x80023700);
ZZ_201DC_3524:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80023718);
		goto ZZ_201DC_353C;
	}
	AT = 0x80000000;
	if (A1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80023718);
		goto ZZ_201DC_353C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80023718);
ZZ_201DC_353C:
	A1 = LO;
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	V1 = V0 << 3;
	V1 += V0;
	V1 <<= 2;
	V1 = V1 - V0;
	V1 <<= 3;
	EMU_SDivide(V1,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(11,0x80023748);
		goto ZZ_201DC_356C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(12,0x80023748);
ZZ_201DC_356C:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80023760);
		goto ZZ_201DC_3584;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80023760);
		goto ZZ_201DC_3584;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80023760);
ZZ_201DC_3584:
	V1 = LO;
	A0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = A0 << 3;
	V0 += A0;
	V0 <<= 2;
	V0 = V0 - A0;
	V0 <<= 3;
	EMU_SDivide(V0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(11,0x80023790);
		goto ZZ_201DC_35B4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(12,0x80023790);
ZZ_201DC_35B4:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800237A8);
		goto ZZ_201DC_35CC;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800237A8);
		goto ZZ_201DC_35CC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800237A8);
ZZ_201DC_35CC:
	V0 = LO;
	EMU_Write32(S3,A1);
	EMU_Write32(S3 + 4,V1); //+ 0x4
	EMU_Write32(S3 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_35E0:
	A0 = S4;
	V0 = S1 >> 15;
	V0 &= 0x7;
	A1 = V0 << 1;
	A1 += V0;
	A1 <<= 2;
	A1 += 128;
	A1 += S2;
	RA = 0x800237E4; //ZZ_201DC_3608
	A2 = R0;
	ZZ_CLOCKCYCLES(10,0x800248A0);
	goto ZZ_248A0;
ZZ_201DC_3608:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3610:
	A0 = S2;
	A1 = S1 & 0xFFF;
	A2 = R0;
	V1 = S1 >> 12;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 128;
	RA = 0x80023818; //ZZ_201DC_363C
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(11,0x8001FC4C);
	goto ZZ_1FC4C;
ZZ_201DC_363C:
	V0 = S1 >> 18;
	V1 = V0 & 0x7;
	V0 = V1 < 7;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80020218);
		goto ZZ_201DC_3C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2096); //+ 0x830
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	//ZZ_JUMPREGISTER(0x80023844,ZZ_201DC_3668);
	//ZZ_JUMPREGISTER(0x80023948,ZZ_201DC_376C);
	//ZZ_JUMPREGISTER(0x80023A58,ZZ_201DC_387C);
	//ZZ_JUMPREGISTER(0x80023BA4,ZZ_201DC_39C8);
	ZZ_JUMPREGISTER_END();
ZZ_201DC_3668:
	V0 = EMU_ReadU32(S2 + 128); //+ 0x80
	V1 = EMU_ReadU32(S2 + 132); //+ 0x84
	A0 = EMU_ReadU32(S2 + 136); //+ 0x88
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	A0 = EMU_ReadU32(S0 + 8); //+ 0x8
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,V1); //+ 0x1C
	EMU_Write32(SP + 32,A0); //+ 0x20
	A0 = SP + 40;
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	A1 = SP + 24;
	V1 = V0 >> 31;
	V0 += V1;
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	V0 = (int32_t)V0 >> 1;
	V0 += V1;
	RA = 0x8002389C; //ZZ_201DC_36C0
	EMU_Write32(SP + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(22,0x800277EC);
	goto ZZ_277EC;
ZZ_201DC_36C0:
	A1 = S1 & 0xFFF;
	EMU_Write32(S2 + 244,V0); //+ 0xF4
	V0 = 0xBE0;
	if (A1 == V0)
	{
		V0 = S1 & 0xE00;
		ZZ_CLOCKCYCLES(5,0x80023910);
		goto ZZ_201DC_3734;
	}
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(8,0x800238EC);
		goto ZZ_201DC_3710;
	}
	if (A1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(10,0x800238DC);
		goto ZZ_201DC_3700;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A2 = V0;
	V0 = A2 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(16,0x800238F8);
	goto ZZ_201DC_371C;
ZZ_201DC_3700:
	V0 <<= 2;
	V0 += 96;
	A2 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x800238F8);
	goto ZZ_201DC_371C;
ZZ_201DC_3710:
	RA = 0x800238F4; //ZZ_201DC_3718
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3718:
	A2 = V0;
	ZZ_CLOCKCYCLES(1,0x800238F8);
ZZ_201DC_371C:
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	ZZ_CLOCKCYCLES(6,0x80023910);
ZZ_201DC_3734:
	V1 = S1 >> 15;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += S2;
	V1 = EMU_ReadU32(SP + 40); //+ 0x28
	A0 = EMU_ReadU32(SP + 44); //+ 0x2C
	A1 = EMU_ReadU32(SP + 48); //+ 0x30
	EMU_Write32(V0 + 128,V1); //+ 0x80
	EMU_Write32(V0 + 132,A0); //+ 0x84
	EMU_Write32(V0 + 136,A1); //+ 0x88
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_376C:
	V0 = EMU_ReadU32(S2 + 128); //+ 0x80
	V1 = EMU_ReadU32(S2 + 132); //+ 0x84
	A0 = EMU_ReadU32(S2 + 136); //+ 0x88
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 60,V1); //+ 0x3C
	EMU_Write32(SP + 64,A0); //+ 0x40
	V0 = EMU_ReadU32(S2 + 128); //+ 0x80
	V1 = EMU_ReadU32(S2 + 132); //+ 0x84
	A0 = EMU_ReadU32(S2 + 136); //+ 0x88
	EMU_Write32(SP + 80,V0); //+ 0x50
	EMU_Write32(SP + 84,V1); //+ 0x54
	EMU_Write32(SP + 88,A0); //+ 0x58
	V1 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S2 == V1)
	{
		A1 = SP + 56;
		ZZ_CLOCKCYCLES(16,0x80023998);
		goto ZZ_201DC_37BC;
	}
	A1 = SP + 56;
	V0 = EMU_ReadU32(S2 + 100); //+ 0x64
	if (V0 != V1)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(20,0x800239A4);
		goto ZZ_201DC_37C8;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(20,0x80023998);
ZZ_201DC_37BC:
	RA = 0x800239A0; //ZZ_201DC_37C4
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x800289B4);
	goto ZZ_289B4;
ZZ_201DC_37C4:
	A0 = S2;
	ZZ_CLOCKCYCLES(1,0x800239A4);
ZZ_201DC_37C8:
	RA = 0x800239AC; //ZZ_201DC_37D0
	A1 = SP + 80;
	ZZ_CLOCKCYCLES(2,0x80028644);
	goto ZZ_28644;
ZZ_201DC_37D0:
	EMU_Write32(S2 + 244,V0); //+ 0xF4
	A1 = S1 & 0xFFF;
	V0 = 0xBE0;
	if (A1 == V0)
	{
		V0 = S1 & 0xE00;
		ZZ_CLOCKCYCLES(5,0x80023A20);
		goto ZZ_201DC_3844;
	}
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(8,0x800239FC);
		goto ZZ_201DC_3820;
	}
	if (A1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(10,0x800239EC);
		goto ZZ_201DC_3810;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A2 = V0;
	V0 = A2 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(16,0x80023A08);
	goto ZZ_201DC_382C;
ZZ_201DC_3810:
	V0 <<= 2;
	V0 += 96;
	A2 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023A08);
	goto ZZ_201DC_382C;
ZZ_201DC_3820:
	RA = 0x80023A04; //ZZ_201DC_3828
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3828:
	A2 = V0;
	ZZ_CLOCKCYCLES(1,0x80023A08);
ZZ_201DC_382C:
	V0 = EMU_ReadU32(SP + 112); //+ 0x70
	V1 = EMU_ReadU32(SP + 116); //+ 0x74
	A0 = EMU_ReadU32(SP + 120); //+ 0x78
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	ZZ_CLOCKCYCLES(6,0x80023A20);
ZZ_201DC_3844:
	V1 = S1 >> 15;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += S2;
	V1 = EMU_ReadU32(SP + 80); //+ 0x50
	A0 = EMU_ReadU32(SP + 84); //+ 0x54
	A1 = EMU_ReadU32(SP + 88); //+ 0x58
	EMU_Write32(V0 + 128,V1); //+ 0x80
	EMU_Write32(V0 + 132,A0); //+ 0x84
	EMU_Write32(V0 + 136,A1); //+ 0x88
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_387C:
	V0 = S1 >> 18;
	V1 = V0 & 0x7;
	A3 = V1 - 4;
	A3 = A3 < 2;
	V0 = 0x5;
	if (V1 == V0)
	{
		T0 = R0;
		ZZ_CLOCKCYCLES(7,0x80023A80);
		goto ZZ_201DC_38A4;
	}
	T0 = R0;
	V0 = 0x3;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(10,0x80023A84);
		goto ZZ_201DC_38A8;
	}
	ZZ_CLOCKCYCLES(10,0x80023A80);
ZZ_201DC_38A4:
	T0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80023A84);
ZZ_201DC_38A8:
	V0 = EMU_ReadU32(S2 + 128); //+ 0x80
	V1 = EMU_ReadU32(S2 + 132); //+ 0x84
	A0 = EMU_ReadU32(S2 + 136); //+ 0x88
	EMU_Write32(SP + 112,V0); //+ 0x70
	EMU_Write32(SP + 116,V1); //+ 0x74
	EMU_Write32(SP + 120,A0); //+ 0x78
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	if (V0)
	{
		A1 = SP + 112;
		ZZ_CLOCKCYCLES(10,0x80023AB4);
		goto ZZ_201DC_38D8;
	}
	A1 = SP + 112;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	ZZ_CLOCKCYCLES(12,0x80023AB4);
ZZ_201DC_38D8:
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80023AE4);
		goto ZZ_201DC_3908;
	}
	if (!T0)
	{
		A2 = 0x2;
		ZZ_CLOCKCYCLES(10,0x80023AF0);
		goto ZZ_201DC_3914;
	}
	A2 = 0x2;
	A2 = 0x6;
	ZZ_CLOCKCYCLES(12,0x80023AF0);
	goto ZZ_201DC_3914;
ZZ_201DC_3908:
	if (!T0)
	{
		A2 = 0x1;
		ZZ_CLOCKCYCLES(2,0x80023AF0);
		goto ZZ_201DC_3914;
	}
	A2 = 0x1;
	A2 = 0x5;
	ZZ_CLOCKCYCLES(3,0x80023AF0);
ZZ_201DC_3914:
	A0 = S2;
	RA = 0x80023AFC; //ZZ_201DC_3920
	A3 = A3 < 1;
	ZZ_CLOCKCYCLES(3,0x80028E3C);
	goto ZZ_28E3C;
ZZ_201DC_3920:
	A1 = S1 & 0xFFF;
	V0 = 0xBE0;
	if (A1 == V0)
	{
		V0 = S1 & 0xE00;
		ZZ_CLOCKCYCLES(4,0x80023B6C);
		goto ZZ_201DC_3990;
	}
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(7,0x80023B48);
		goto ZZ_201DC_396C;
	}
	if (A1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(9,0x80023B38);
		goto ZZ_201DC_395C;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A2 = V0;
	V0 = A2 + 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(15,0x80023B54);
	goto ZZ_201DC_3978;
ZZ_201DC_395C:
	V0 <<= 2;
	V0 += 96;
	A2 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023B54);
	goto ZZ_201DC_3978;
ZZ_201DC_396C:
	RA = 0x80023B50; //ZZ_201DC_3974
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3974:
	A2 = V0;
	ZZ_CLOCKCYCLES(1,0x80023B54);
ZZ_201DC_3978:
	V0 = EMU_ReadU32(SP + 128); //+ 0x80
	V1 = EMU_ReadU32(SP + 132); //+ 0x84
	A0 = EMU_ReadU32(SP + 136); //+ 0x88
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	ZZ_CLOCKCYCLES(6,0x80023B6C);
ZZ_201DC_3990:
	V1 = S1 >> 15;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += S2;
	V1 = EMU_ReadU32(SP + 112); //+ 0x70
	A0 = EMU_ReadU32(SP + 116); //+ 0x74
	A1 = EMU_ReadU32(SP + 120); //+ 0x78
	EMU_Write32(V0 + 128,V1); //+ 0x80
	EMU_Write32(V0 + 132,A0); //+ 0x84
	EMU_Write32(V0 + 136,A1); //+ 0x88
	ZZ_CLOCKCYCLES(14,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_39C8:
	RA = 0x80023BAC; //ZZ_201DC_39D0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8002940C);
	goto ZZ_2940C;
ZZ_201DC_39D0:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_39D8:
	V0 = S1 >> 19;
	V0 &= 0x1C;
	V0 += S2;
	V0 = EMU_ReadU32(V0 + 96); //+ 0x60
	EMU_Write32(SP + 224,V0); //+ 0xE0
	ZZ_CLOCKCYCLES(6,0x80023BCC);
ZZ_201DC_39F0:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80023C10);
		goto ZZ_201DC_3A34;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80023C00);
		goto ZZ_201DC_3A24;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	T0 = V0;
	EMU_Write32(S2 + 220,T0); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80023C1C);
	goto ZZ_201DC_3A40;
ZZ_201DC_3A24:
	V0 <<= 2;
	V0 += 96;
	T0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023C1C);
	goto ZZ_201DC_3A40;
ZZ_201DC_3A34:
	RA = 0x80023C18; //ZZ_201DC_3A3C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3A3C:
	T0 = V0;
	ZZ_CLOCKCYCLES(1,0x80023C1C);
ZZ_201DC_3A40:
	V1 = 0xFFFD0000;
	V0 = EMU_ReadU32(S2 + 200); //+ 0xC8
	V1 |= 0xFFFF;
	V0 &= V1;
	V1 = S1 >> 12;
	V1 &= 0x3F;
	EMU_Write32(S2 + 200,V0); //+ 0xC8
	V0 = 0x1F;
	if (V1 != V0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(10,0x80023C58);
		goto ZZ_201DC_3A7C;
	}
	A0 = V1;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(15,0x80023C64);
	goto ZZ_201DC_3A88;
ZZ_201DC_3A7C:
	V0 = A0 << 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(3,0x80023C64);
ZZ_201DC_3A88:
	V0 = EMU_ReadU32(V0);
	if (!V0)
	{
		V0 = 0x8F;
		ZZ_CLOCKCYCLES(4,0x80023D6C);
		goto ZZ_201DC_3B90;
	}
	V0 = 0x8F;
	if (S5 == V0)
	{
		ZZ_CLOCKCYCLES(6,0x80023C8C);
		goto ZZ_201DC_3AB0;
	}
	T1 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T1)
	{
		ZZ_CLOCKCYCLES(10,0x80023D6C);
		goto ZZ_201DC_3B90;
	}
	ZZ_CLOCKCYCLES(10,0x80023C8C);
ZZ_201DC_3AB0:
	if (!T0)
	{
		V0 = S1 >> 18;
		ZZ_CLOCKCYCLES(2,0x80023D6C);
		goto ZZ_201DC_3B90;
	}
	V0 = S1 >> 18;
	A3 = V0 & 0x7;
	if (!A3)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(5,0x80023CCC);
		goto ZZ_201DC_3AF0;
	}
	A0 = R0;
	A1 = SP + 24;
	ZZ_CLOCKCYCLES(6,0x80023CA4);
ZZ_201DC_3AC8:
	V0 = A0 - A3;
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0);
	A0 += 1;
	EMU_Write32(A1 + 120,V0); //+ 0x78
	V0 = (int32_t)A0 < (int32_t)A3;
	if (V0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(10,0x80023CA4);
		goto ZZ_201DC_3AC8;
	}
	A1 += 4;
	ZZ_CLOCKCYCLES(10,0x80023CCC);
ZZ_201DC_3AF0:
	V0 = 0x8F;
	if (S5 == V0)
	{
		V0 = S5 < 144;
		ZZ_CLOCKCYCLES(3,0x80023D48);
		goto ZZ_201DC_3B6C;
	}
	V0 = S5 < 144;
	if (!V0)
	{
		V0 = 0x87;
		ZZ_CLOCKCYCLES(5,0x80023CF0);
		goto ZZ_201DC_3B14;
	}
	V0 = 0x87;
	if (S5 == V0)
	{
		V0 = SP + 144;
		ZZ_CLOCKCYCLES(7,0x80023D04);
		goto ZZ_201DC_3B28;
	}
	V0 = SP + 144;
	ZZ_CLOCKCYCLES(9,0x80023D70);
	goto ZZ_201DC_3B94;
ZZ_201DC_3B14:
	V0 = 0x90;
	if (S5 == V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(3,0x80023D20);
		goto ZZ_201DC_3B44;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(5,0x80023D70);
	goto ZZ_201DC_3B94;
ZZ_201DC_3B28:
	A1 = EMU_ReadU32(SP + 224); //+ 0xE0
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(T0);
	RA = 0x80023D18; //ZZ_201DC_3B3C
	A0 = S2;
	ZZ_CLOCKCYCLES(5,0x80024040);
	goto ZZ_24040;
ZZ_201DC_3B3C:
	ZZ_CLOCKCYCLES(2,0x80023D70);
	goto ZZ_201DC_3B94;
ZZ_201DC_3B44:
	A1 = EMU_ReadU32(SP + 224); //+ 0xE0
	V0 = SP + 144;
	EMU_Write32(SP + 16,A3); //+ 0x10
	A3 = S1 >> 21;
	EMU_Write32(SP + 20,V0); //+ 0x14
	A2 = EMU_ReadU32(T0);
	RA = 0x80023D40; //ZZ_201DC_3B64
	A3 &= 0x7;
	ZZ_CLOCKCYCLES(8,0x800251B8);
	goto ZZ_251B8;
ZZ_201DC_3B64:
	ZZ_CLOCKCYCLES(2,0x80023D70);
	goto ZZ_201DC_3B94;
ZZ_201DC_3B6C:
	A0 = S2;
	A2 = S1 >> 21;
	V0 = SP + 144;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A1 = EMU_ReadU32(T0);
	RA = 0x80023D64; //ZZ_201DC_3B88
	A2 &= 0x7;
	ZZ_CLOCKCYCLES(7,0x80025134);
	goto ZZ_25134;
ZZ_201DC_3B88:
	ZZ_CLOCKCYCLES(2,0x80023D70);
	goto ZZ_201DC_3B94;
ZZ_201DC_3B90:
	EMU_Write32(S2 + 244,R0); //+ 0xF4
	ZZ_CLOCKCYCLES(1,0x80023D70);
ZZ_201DC_3B94:
	V0 = EMU_ReadU32(S2 + 200); //+ 0xC8
	V1 = 0x20000;
	V0 &= V1;
	if (V0)
	{
		V0 = S1 >> 16;
		ZZ_CLOCKCYCLES(5,0x80023D98);
		goto ZZ_201DC_3BBC;
	}
	V0 = S1 >> 16;
	V1 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 &= 0x1C;
	ZZ_CLOCKCYCLES(7,0x80023D8C);
ZZ_201DC_3BB0:
	V1 = V1 - V0;
	EMU_Write32(S2 + 220,V1); //+ 0xDC
	ZZ_CLOCKCYCLES(3,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3BBC:
	T1 = EMU_ReadU32(SP + 208); //+ 0xD0
	V0 = T1 & 0x2;
	if (V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(5,0x8002400C);
		goto ZZ_201DC_3E30;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(5,0x80023DAC);
ZZ_201DC_3BD0:
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3BE4:
	S3 = S1 & 0x3F;
	A3 = S1 >> 20;
	if (S3)
	{
		S4 = A3 & 0xF;
		ZZ_CLOCKCYCLES(4,0x80023DE8);
		goto ZZ_201DC_3C0C;
	}
	S4 = A3 & 0xF;
	V0 = S4 + 1;
	S4 = V0;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = S4 << 2;
	V0 = V0 - V1;
	S3 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(10,0x80023DE8);
ZZ_201DC_3C0C:
	if ((int32_t)S3 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(3,0x80023E64);
		goto ZZ_201DC_3C88;
	}
	S0 = R0;
	S6 = A3 & 0xF;
	V0 = -S6;
	S7 = V0 << 2;
	V0 = S5 ^ 0x91;
	S5 = V0 < 1;
	A0 = S2;
	ZZ_CLOCKCYCLES(9,0x80023E0C);
ZZ_201DC_3C30:
	A1 = S1 >> 12;
	A1 &= 0xFF;
	A2 = S1 >> 6;
	A2 &= 0x3F;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	A3 = S6;
	EMU_Write32(SP + 20,S5); //+ 0x14
	V0 += S7;
	RA = 0x80023E34; //ZZ_201DC_3C58
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(10,0x8001C6C8);
  EMU_NativeCall(GOOL_CreateObject);
ZZ_201DC_3C58:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80023E50);
		goto ZZ_201DC_3C74;
	}
	EMU_Write32(V1 + 112,S2); //+ 0x70
	EMU_Write32(S2 + 244,V1); //+ 0xF4
	ZZ_CLOCKCYCLES(7,0x80023E54);
	goto ZZ_201DC_3C78;
ZZ_201DC_3C74:
	EMU_Write32(S2 + 244,R0); //+ 0xF4
	ZZ_CLOCKCYCLES(1,0x80023E54);
ZZ_201DC_3C78:
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)S3;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x80023E0C);
		goto ZZ_201DC_3C30;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(4,0x80023E64);
ZZ_201DC_3C88:
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V1 = S4 << 2;
	V0 = V0 - V1;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(5,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3C9C:
	V1 = S1 >> 12;
	A0 = V1 & 0xFFF;
	V0 = V1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(6,0x80023EC0);
		goto ZZ_201DC_3CE4;
	}
	A1 = A0;
	if (A0 != FP)
	{
		V0 = V1 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80023EB0);
		goto ZZ_201DC_3CD4;
	}
	V0 = V1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	S0 = V0;
	EMU_Write32(S2 + 220,S0); //+ 0xDC
	ZZ_CLOCKCYCLES(14,0x80023ECC);
	goto ZZ_201DC_3CF0;
ZZ_201DC_3CD4:
	V0 <<= 2;
	V0 += 96;
	S0 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023ECC);
	goto ZZ_201DC_3CF0;
ZZ_201DC_3CE4:
	RA = 0x80023EC8; //ZZ_201DC_3CEC
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3CEC:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80023ECC);
ZZ_201DC_3CF0:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80023F0C);
		goto ZZ_201DC_3D30;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80023EFC);
		goto ZZ_201DC_3D20;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(12,0x80023F14);
	goto ZZ_201DC_3D38;
ZZ_201DC_3D20:
	V0 <<= 2;
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(4,0x80023F14);
	goto ZZ_201DC_3D38;
ZZ_201DC_3D30:
	RA = 0x80023F14; //ZZ_201DC_3D38
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3D38:
	A0 = S2;
	A2 = EMU_ReadS16(S0);
	RA = 0x80023F24; //ZZ_201DC_3D48
	A1 = V0;
	ZZ_CLOCKCYCLES(4,0x800304C8);
	goto ZZ_304C8;
ZZ_201DC_3D48:
	EMU_Write32(S2 + 332,V0); //+ 0x14C
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3D50:
	V1 = S1 & 0xFFF;
	V0 = S1 & 0xE00;
	T1 = 0xE00;
	if (V0 != T1)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(5,0x80023F70);
		goto ZZ_201DC_3D94;
	}
	A1 = V1;
	if (V1 != FP)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(7,0x80023F60);
		goto ZZ_201DC_3D84;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	A2 = V0;
	EMU_Write32(S2 + 220,A2); //+ 0xDC
	ZZ_CLOCKCYCLES(13,0x80023F7C);
	goto ZZ_201DC_3DA0;
ZZ_201DC_3D84:
	V0 <<= 2;
	V0 += 96;
	A2 = S2 + V0;
	ZZ_CLOCKCYCLES(4,0x80023F7C);
	goto ZZ_201DC_3DA0;
ZZ_201DC_3D94:
	RA = 0x80023F78; //ZZ_201DC_3D9C
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8001FB34);
	goto ZZ_1FB34;
ZZ_201DC_3D9C:
	A2 = V0;
	ZZ_CLOCKCYCLES(1,0x80023F7C);
ZZ_201DC_3DA0:
	V0 = S1 >> 20;
	A1 = V0 & 0xF;
	V0 = S1 >> 12;
	V1 = V0 & 0x3F;
	if (V1)
	{
		V0 = 0x1F;
		ZZ_CLOCKCYCLES(6,0x80023F9C);
		goto ZZ_201DC_3DC0;
	}
	V0 = 0x1F;
	A0 = R0;
	ZZ_CLOCKCYCLES(8,0x80023FC4);
	goto ZZ_201DC_3DE8;
ZZ_201DC_3DC0:
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(2,0x80023FB8);
		goto ZZ_201DC_3DDC;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S2 + 220); //+ 0xDC
	V0 -= 4;
	EMU_Write32(S2 + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(7,0x80023FC0);
	goto ZZ_201DC_3DE4;
ZZ_201DC_3DDC:
	V0 += 96;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x80023FC0);
ZZ_201DC_3DE4:
	A0 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(1,0x80023FC4);
ZZ_201DC_3DE8:
	V0 = 0xF;
	if (A1 != V0)
	{
		V0 = 0x40000;
		ZZ_CLOCKCYCLES(3,0x80023FD4);
		goto ZZ_201DC_3DF8;
	}
	V0 = 0x40000;
	A1 = 0x80000000;
	ZZ_CLOCKCYCLES(4,0x80023FD4);
ZZ_201DC_3DF8:
	V0 &= S1;
	if (!V0)
	{
		V0 = 0x40000000;
		ZZ_CLOCKCYCLES(3,0x80023FE4);
		goto ZZ_201DC_3E08;
	}
	V0 = 0x40000000;
	A1 |= V0;
	ZZ_CLOCKCYCLES(4,0x80023FE4);
ZZ_201DC_3E08:
	V0 = 0x80000;
	V0 &= S1;
	if (!V0)
	{
		V0 = 0x20000000;
		ZZ_CLOCKCYCLES(4,0x80023FF8);
		goto ZZ_201DC_3E1C;
	}
	V0 = 0x20000000;
	A1 |= V0;
	ZZ_CLOCKCYCLES(5,0x80023FF8);
ZZ_201DC_3E1C:
	RA = 0x80024000; //ZZ_201DC_3E24
	A3 = S2;
	ZZ_CLOCKCYCLES(2,0x80030840);
	goto ZZ_30840;
ZZ_201DC_3E24:
	ZZ_CLOCKCYCLES(2,0x80020218);
	goto ZZ_201DC_3C;
ZZ_201DC_3E2C:
	V0 = -14;
	ZZ_CLOCKCYCLES(1,0x8002400C);
ZZ_201DC_3E30:
	RA = EMU_ReadU32(SP + 316); //+ 0x13C
	FP = EMU_ReadU32(SP + 312); //+ 0x138
	S7 = EMU_ReadU32(SP + 308); //+ 0x134
	S6 = EMU_ReadU32(SP + 304); //+ 0x130
	S5 = EMU_ReadU32(SP + 300); //+ 0x12C
	S4 = EMU_ReadU32(SP + 296); //+ 0x128
	S3 = EMU_ReadU32(SP + 292); //+ 0x124
	S2 = EMU_ReadU32(SP + 288); //+ 0x120
	S1 = EMU_ReadU32(SP + 284); //+ 0x11C
	S0 = EMU_ReadU32(SP + 280); //+ 0x118
	SP += 320;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80024130,ZZ_24040_F0);
	ZZ_JUMPREGISTER(0x8002428C,ZZ_24040_24C);
	ZZ_JUMPREGISTER(0x80025390,ZZ_252C0_D0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800201DC,0x80020214,ZZ_201DC);
ZZ_MARK_TARGET(0x80020214,0x80020218,ZZ_201DC_38);
ZZ_MARK_TARGET(0x80020218,0x80020258,ZZ_201DC_3C);
ZZ_MARK_TARGET(0x80020258,0x8002028C,ZZ_201DC_7C);
ZZ_MARK_TARGET(0x8002028C,0x8002029C,ZZ_201DC_B0);
ZZ_MARK_TARGET(0x8002029C,0x800202A4,ZZ_201DC_C0);
ZZ_MARK_TARGET(0x800202A4,0x800202CC,ZZ_201DC_C8);
ZZ_MARK_TARGET(0x800202CC,0x80020304,ZZ_201DC_F0);
ZZ_MARK_TARGET(0x80020304,0x80020314,ZZ_201DC_128);
ZZ_MARK_TARGET(0x80020314,0x8002031C,ZZ_201DC_138);
ZZ_MARK_TARGET(0x8002031C,0x80020320,ZZ_201DC_140);
ZZ_MARK_TARGET(0x80020320,0x80020354,ZZ_201DC_144);
ZZ_MARK_TARGET(0x80020354,0x80020364,ZZ_201DC_178);
ZZ_MARK_TARGET(0x80020364,0x8002036C,ZZ_201DC_188);
ZZ_MARK_TARGET(0x8002036C,0x80020370,ZZ_201DC_190);
ZZ_MARK_TARGET(0x80020370,0x800203B8,ZZ_201DC_194);
ZZ_MARK_TARGET(0x800203B8,0x800203D4,ZZ_201DC_1DC);
ZZ_MARK_TARGET(0x800203D4,0x8002040C,ZZ_201DC_1F8);
ZZ_MARK_TARGET(0x8002040C,0x80020444,ZZ_201DC_230);
ZZ_MARK_TARGET(0x80020444,0x80020454,ZZ_201DC_268);
ZZ_MARK_TARGET(0x80020454,0x8002045C,ZZ_201DC_278);
ZZ_MARK_TARGET(0x8002045C,0x80020460,ZZ_201DC_280);
ZZ_MARK_TARGET(0x80020460,0x8002047C,ZZ_201DC_284);
ZZ_MARK_TARGET(0x8002047C,0x80020494,ZZ_201DC_2A0);
ZZ_MARK_TARGET(0x80020494,0x800204A4,ZZ_201DC_2B8);
ZZ_MARK_TARGET(0x800204A4,0x800204AC,ZZ_201DC_2C8);
ZZ_MARK_TARGET(0x800204AC,0x800204B0,ZZ_201DC_2D0);
ZZ_MARK_TARGET(0x800204B0,0x800204C0,ZZ_201DC_2D4);
ZZ_MARK_TARGET(0x800204C0,0x800204F8,ZZ_201DC_2E4);
ZZ_MARK_TARGET(0x800204F8,0x80020508,ZZ_201DC_31C);
ZZ_MARK_TARGET(0x80020508,0x80020510,ZZ_201DC_32C);
ZZ_MARK_TARGET(0x80020510,0x80020514,ZZ_201DC_334);
ZZ_MARK_TARGET(0x80020514,0x80020548,ZZ_201DC_338);
ZZ_MARK_TARGET(0x80020548,0x80020558,ZZ_201DC_36C);
ZZ_MARK_TARGET(0x80020558,0x80020560,ZZ_201DC_37C);
ZZ_MARK_TARGET(0x80020560,0x80020564,ZZ_201DC_384);
ZZ_MARK_TARGET(0x80020564,0x80020584,ZZ_201DC_388);
ZZ_MARK_TARGET(0x80020584,0x800205B8,ZZ_201DC_3A8);
ZZ_MARK_TARGET(0x800205B8,0x800205C8,ZZ_201DC_3DC);
ZZ_MARK_TARGET(0x800205C8,0x800205D0,ZZ_201DC_3EC);
ZZ_MARK_TARGET(0x800205D0,0x80020608,ZZ_201DC_3F4);
ZZ_MARK_TARGET(0x80020608,0x80020618,ZZ_201DC_42C);
ZZ_MARK_TARGET(0x80020618,0x80020620,ZZ_201DC_43C);
ZZ_MARK_TARGET(0x80020620,0x80020624,ZZ_201DC_444);
ZZ_MARK_TARGET(0x80020624,0x80020638,ZZ_201DC_448);
ZZ_MARK_TARGET(0x80020638,0x80020640,ZZ_201DC_45C);
ZZ_MARK_TARGET(0x80020640,0x8002066C,ZZ_201DC_464);
ZZ_MARK_TARGET(0x8002066C,0x80020678,ZZ_201DC_490);
ZZ_MARK_TARGET(0x80020678,0x800206A4,ZZ_201DC_49C);
ZZ_MARK_TARGET(0x800206A4,0x800206AC,ZZ_201DC_4C8);
ZZ_MARK_TARGET(0x800206AC,0x800206E0,ZZ_201DC_4D0);
ZZ_MARK_TARGET(0x800206E0,0x800206F0,ZZ_201DC_504);
ZZ_MARK_TARGET(0x800206F0,0x800206F8,ZZ_201DC_514);
ZZ_MARK_TARGET(0x800206F8,0x80020730,ZZ_201DC_51C);
ZZ_MARK_TARGET(0x80020730,0x80020740,ZZ_201DC_554);
ZZ_MARK_TARGET(0x80020740,0x80020748,ZZ_201DC_564);
ZZ_MARK_TARGET(0x80020748,0x8002074C,ZZ_201DC_56C);
ZZ_MARK_TARGET(0x8002074C,0x8002075C,ZZ_201DC_570);
ZZ_MARK_TARGET(0x8002075C,0x80020790,ZZ_201DC_580);
ZZ_MARK_TARGET(0x80020790,0x800207A0,ZZ_201DC_5B4);
ZZ_MARK_TARGET(0x800207A0,0x800207A8,ZZ_201DC_5C4);
ZZ_MARK_TARGET(0x800207A8,0x800207E0,ZZ_201DC_5CC);
ZZ_MARK_TARGET(0x800207E0,0x800207F0,ZZ_201DC_604);
ZZ_MARK_TARGET(0x800207F0,0x800207F8,ZZ_201DC_614);
ZZ_MARK_TARGET(0x800207F8,0x800207FC,ZZ_201DC_61C);
ZZ_MARK_TARGET(0x800207FC,0x8002080C,ZZ_201DC_620);
ZZ_MARK_TARGET(0x8002080C,0x80020848,ZZ_201DC_630);
ZZ_MARK_TARGET(0x80020848,0x80020870,ZZ_201DC_66C);
ZZ_MARK_TARGET(0x80020870,0x80020880,ZZ_201DC_694);
ZZ_MARK_TARGET(0x80020880,0x80020888,ZZ_201DC_6A4);
ZZ_MARK_TARGET(0x80020888,0x80020890,ZZ_201DC_6AC);
ZZ_MARK_TARGET(0x80020890,0x800208BC,ZZ_201DC_6B4);
ZZ_MARK_TARGET(0x800208BC,0x800208CC,ZZ_201DC_6E0);
ZZ_MARK_TARGET(0x800208CC,0x800208D4,ZZ_201DC_6F0);
ZZ_MARK_TARGET(0x800208D4,0x80020900,ZZ_201DC_6F8);
ZZ_MARK_TARGET(0x80020900,0x8002090C,ZZ_201DC_724);
ZZ_MARK_TARGET(0x8002090C,0x80020914,ZZ_201DC_730);
ZZ_MARK_TARGET(0x80020914,0x8002092C,ZZ_201DC_738);
ZZ_MARK_TARGET(0x8002092C,0x80020938,ZZ_201DC_750);
ZZ_MARK_TARGET(0x80020938,0x80020944,ZZ_201DC_75C);
ZZ_MARK_TARGET(0x80020944,0x80020970,ZZ_201DC_768);
ZZ_MARK_TARGET(0x80020970,0x80020980,ZZ_201DC_794);
ZZ_MARK_TARGET(0x80020980,0x80020988,ZZ_201DC_7A4);
ZZ_MARK_TARGET(0x80020988,0x8002098C,ZZ_201DC_7AC);
ZZ_MARK_TARGET(0x8002098C,0x800209A8,ZZ_201DC_7B0);
ZZ_MARK_TARGET(0x800209A8,0x800209E4,ZZ_201DC_7CC);
ZZ_MARK_TARGET(0x800209E4,0x80020A0C,ZZ_201DC_808);
ZZ_MARK_TARGET(0x80020A0C,0x80020A1C,ZZ_201DC_830);
ZZ_MARK_TARGET(0x80020A1C,0x80020A24,ZZ_201DC_840);
ZZ_MARK_TARGET(0x80020A24,0x80020A2C,ZZ_201DC_848);
ZZ_MARK_TARGET(0x80020A2C,0x80020A58,ZZ_201DC_850);
ZZ_MARK_TARGET(0x80020A58,0x80020A68,ZZ_201DC_87C);
ZZ_MARK_TARGET(0x80020A68,0x80020A70,ZZ_201DC_88C);
ZZ_MARK_TARGET(0x80020A70,0x80020A94,ZZ_201DC_894);
ZZ_MARK_TARGET(0x80020A94,0x80020A9C,ZZ_201DC_8B8);
ZZ_MARK_TARGET(0x80020A9C,0x80020AA8,ZZ_201DC_8C0);
ZZ_MARK_TARGET(0x80020AA8,0x80020AB4,ZZ_201DC_8CC);
ZZ_MARK_TARGET(0x80020AB4,0x80020AC0,ZZ_201DC_8D8);
ZZ_MARK_TARGET(0x80020AC0,0x80020AF8,ZZ_201DC_8E4);
ZZ_MARK_TARGET(0x80020AF8,0x80020B08,ZZ_201DC_91C);
ZZ_MARK_TARGET(0x80020B08,0x80020B10,ZZ_201DC_92C);
ZZ_MARK_TARGET(0x80020B10,0x80020B14,ZZ_201DC_934);
ZZ_MARK_TARGET(0x80020B14,0x80020B48,ZZ_201DC_938);
ZZ_MARK_TARGET(0x80020B48,0x80020B58,ZZ_201DC_96C);
ZZ_MARK_TARGET(0x80020B58,0x80020B60,ZZ_201DC_97C);
ZZ_MARK_TARGET(0x80020B60,0x80020B64,ZZ_201DC_984);
ZZ_MARK_TARGET(0x80020B64,0x80020B7C,ZZ_201DC_988);
ZZ_MARK_TARGET(0x80020B7C,0x80020B84,ZZ_201DC_9A0);
ZZ_MARK_TARGET(0x80020B84,0x80020B8C,ZZ_201DC_9A8);
ZZ_MARK_TARGET(0x80020B8C,0x80020BC4,ZZ_201DC_9B0);
ZZ_MARK_TARGET(0x80020BC4,0x80020BD4,ZZ_201DC_9E8);
ZZ_MARK_TARGET(0x80020BD4,0x80020BDC,ZZ_201DC_9F8);
ZZ_MARK_TARGET(0x80020BDC,0x80020BE0,ZZ_201DC_A00);
ZZ_MARK_TARGET(0x80020BE0,0x80020C14,ZZ_201DC_A04);
ZZ_MARK_TARGET(0x80020C14,0x80020C28,ZZ_201DC_A38);
ZZ_MARK_TARGET(0x80020C28,0x80020C30,ZZ_201DC_A4C);
ZZ_MARK_TARGET(0x80020C30,0x80020C34,ZZ_201DC_A54);
ZZ_MARK_TARGET(0x80020C34,0x80020C54,ZZ_201DC_A58);
ZZ_MARK_TARGET(0x80020C54,0x80020C88,ZZ_201DC_A78);
ZZ_MARK_TARGET(0x80020C88,0x80020C98,ZZ_201DC_AAC);
ZZ_MARK_TARGET(0x80020C98,0x80020CA0,ZZ_201DC_ABC);
ZZ_MARK_TARGET(0x80020CA0,0x80020CD4,ZZ_201DC_AC4);
ZZ_MARK_TARGET(0x80020CD4,0x80020CE4,ZZ_201DC_AF8);
ZZ_MARK_TARGET(0x80020CE4,0x80020CEC,ZZ_201DC_B08);
ZZ_MARK_TARGET(0x80020CEC,0x80020CF8,ZZ_201DC_B10);
ZZ_MARK_TARGET(0x80020CF8,0x80020D04,ZZ_201DC_B1C);
ZZ_MARK_TARGET(0x80020D04,0x80020D3C,ZZ_201DC_B28);
ZZ_MARK_TARGET(0x80020D3C,0x80020D4C,ZZ_201DC_B60);
ZZ_MARK_TARGET(0x80020D4C,0x80020D54,ZZ_201DC_B70);
ZZ_MARK_TARGET(0x80020D54,0x80020D58,ZZ_201DC_B78);
ZZ_MARK_TARGET(0x80020D58,0x80020D8C,ZZ_201DC_B7C);
ZZ_MARK_TARGET(0x80020D8C,0x80020D9C,ZZ_201DC_BB0);
ZZ_MARK_TARGET(0x80020D9C,0x80020DA4,ZZ_201DC_BC0);
ZZ_MARK_TARGET(0x80020DA4,0x80020DA8,ZZ_201DC_BC8);
ZZ_MARK_TARGET(0x80020DA8,0x80020DD4,ZZ_201DC_BCC);
ZZ_MARK_TARGET(0x80020DD4,0x80020E0C,ZZ_201DC_BF8);
ZZ_MARK_TARGET(0x80020E0C,0x80020E1C,ZZ_201DC_C30);
ZZ_MARK_TARGET(0x80020E1C,0x80020E24,ZZ_201DC_C40);
ZZ_MARK_TARGET(0x80020E24,0x80020E28,ZZ_201DC_C48);
ZZ_MARK_TARGET(0x80020E28,0x80020E5C,ZZ_201DC_C4C);
ZZ_MARK_TARGET(0x80020E5C,0x80020E6C,ZZ_201DC_C80);
ZZ_MARK_TARGET(0x80020E6C,0x80020E74,ZZ_201DC_C90);
ZZ_MARK_TARGET(0x80020E74,0x80020E78,ZZ_201DC_C98);
ZZ_MARK_TARGET(0x80020E78,0x80020EA4,ZZ_201DC_C9C);
ZZ_MARK_TARGET(0x80020EA4,0x80020EBC,ZZ_201DC_CC8);
ZZ_MARK_TARGET(0x80020EBC,0x80020EC0,ZZ_201DC_CE0);
ZZ_MARK_TARGET(0x80020EC0,0x80020EC8,ZZ_201DC_CE4);
ZZ_MARK_TARGET(0x80020EC8,0x80020EFC,ZZ_201DC_CEC);
ZZ_MARK_TARGET(0x80020EFC,0x80020F0C,ZZ_201DC_D20);
ZZ_MARK_TARGET(0x80020F0C,0x80020F14,ZZ_201DC_D30);
ZZ_MARK_TARGET(0x80020F14,0x80020F4C,ZZ_201DC_D38);
ZZ_MARK_TARGET(0x80020F4C,0x80020F5C,ZZ_201DC_D70);
ZZ_MARK_TARGET(0x80020F5C,0x80020F64,ZZ_201DC_D80);
ZZ_MARK_TARGET(0x80020F64,0x80020F68,ZZ_201DC_D88);
ZZ_MARK_TARGET(0x80020F68,0x80020F90,ZZ_201DC_D8C);
ZZ_MARK_TARGET(0x80020F90,0x80020FA8,ZZ_201DC_DB4);
ZZ_MARK_TARGET(0x80020FA8,0x80020FB4,ZZ_201DC_DCC);
ZZ_MARK_TARGET(0x80020FB4,0x80020FE8,ZZ_201DC_DD8);
ZZ_MARK_TARGET(0x80020FE8,0x80020FF8,ZZ_201DC_E0C);
ZZ_MARK_TARGET(0x80020FF8,0x80021000,ZZ_201DC_E1C);
ZZ_MARK_TARGET(0x80021000,0x80021034,ZZ_201DC_E24);
ZZ_MARK_TARGET(0x80021034,0x80021048,ZZ_201DC_E58);
ZZ_MARK_TARGET(0x80021048,0x80021050,ZZ_201DC_E6C);
ZZ_MARK_TARGET(0x80021050,0x8002105C,ZZ_201DC_E74);
ZZ_MARK_TARGET(0x8002105C,0x80021068,ZZ_201DC_E80);
ZZ_MARK_TARGET(0x80021068,0x8002109C,ZZ_201DC_E8C);
ZZ_MARK_TARGET(0x8002109C,0x800210AC,ZZ_201DC_EC0);
ZZ_MARK_TARGET(0x800210AC,0x800210B4,ZZ_201DC_ED0);
ZZ_MARK_TARGET(0x800210B4,0x800210E8,ZZ_201DC_ED8);
ZZ_MARK_TARGET(0x800210E8,0x800210F8,ZZ_201DC_F0C);
ZZ_MARK_TARGET(0x800210F8,0x80021100,ZZ_201DC_F1C);
ZZ_MARK_TARGET(0x80021100,0x80021120,ZZ_201DC_F24);
ZZ_MARK_TARGET(0x80021120,0x80021128,ZZ_201DC_F44);
ZZ_MARK_TARGET(0x80021128,0x80021160,ZZ_201DC_F4C);
ZZ_MARK_TARGET(0x80021160,0x80021170,ZZ_201DC_F84);
ZZ_MARK_TARGET(0x80021170,0x80021178,ZZ_201DC_F94);
ZZ_MARK_TARGET(0x80021178,0x8002117C,ZZ_201DC_F9C);
ZZ_MARK_TARGET(0x8002117C,0x800211B0,ZZ_201DC_FA0);
ZZ_MARK_TARGET(0x800211B0,0x800211C4,ZZ_201DC_FD4);
ZZ_MARK_TARGET(0x800211C4,0x800211CC,ZZ_201DC_FE8);
ZZ_MARK_TARGET(0x800211CC,0x800211D0,ZZ_201DC_FF0);
ZZ_MARK_TARGET(0x800211D0,0x800211F0,ZZ_201DC_FF4);
ZZ_MARK_TARGET(0x800211F0,0x80021228,ZZ_201DC_1014);
ZZ_MARK_TARGET(0x80021228,0x80021238,ZZ_201DC_104C);
ZZ_MARK_TARGET(0x80021238,0x80021240,ZZ_201DC_105C);
ZZ_MARK_TARGET(0x80021240,0x80021244,ZZ_201DC_1064);
ZZ_MARK_TARGET(0x80021244,0x80021278,ZZ_201DC_1068);
ZZ_MARK_TARGET(0x80021278,0x8002128C,ZZ_201DC_109C);
ZZ_MARK_TARGET(0x8002128C,0x80021294,ZZ_201DC_10B0);
ZZ_MARK_TARGET(0x80021294,0x80021298,ZZ_201DC_10B8);
ZZ_MARK_TARGET(0x80021298,0x800212B8,ZZ_201DC_10BC);
ZZ_MARK_TARGET(0x800212B8,0x800212F0,ZZ_201DC_10DC);
ZZ_MARK_TARGET(0x800212F0,0x80021300,ZZ_201DC_1114);
ZZ_MARK_TARGET(0x80021300,0x80021308,ZZ_201DC_1124);
ZZ_MARK_TARGET(0x80021308,0x8002130C,ZZ_201DC_112C);
ZZ_MARK_TARGET(0x8002130C,0x80021340,ZZ_201DC_1130);
ZZ_MARK_TARGET(0x80021340,0x80021354,ZZ_201DC_1164);
ZZ_MARK_TARGET(0x80021354,0x8002135C,ZZ_201DC_1178);
ZZ_MARK_TARGET(0x8002135C,0x80021360,ZZ_201DC_1180);
ZZ_MARK_TARGET(0x80021360,0x80021380,ZZ_201DC_1184);
ZZ_MARK_TARGET(0x80021380,0x800213B4,ZZ_201DC_11A4);
ZZ_MARK_TARGET(0x800213B4,0x800213C4,ZZ_201DC_11D8);
ZZ_MARK_TARGET(0x800213C4,0x800213CC,ZZ_201DC_11E8);
ZZ_MARK_TARGET(0x800213CC,0x80021404,ZZ_201DC_11F0);
ZZ_MARK_TARGET(0x80021404,0x80021414,ZZ_201DC_1228);
ZZ_MARK_TARGET(0x80021414,0x8002141C,ZZ_201DC_1238);
ZZ_MARK_TARGET(0x8002141C,0x80021420,ZZ_201DC_1240);
ZZ_MARK_TARGET(0x80021420,0x8002144C,ZZ_201DC_1244);
ZZ_MARK_TARGET(0x8002144C,0x80021484,ZZ_201DC_1270);
ZZ_MARK_TARGET(0x80021484,0x80021494,ZZ_201DC_12A8);
ZZ_MARK_TARGET(0x80021494,0x8002149C,ZZ_201DC_12B8);
ZZ_MARK_TARGET(0x8002149C,0x800214A0,ZZ_201DC_12C0);
ZZ_MARK_TARGET(0x800214A0,0x800214D4,ZZ_201DC_12C4);
ZZ_MARK_TARGET(0x800214D4,0x800214E8,ZZ_201DC_12F8);
ZZ_MARK_TARGET(0x800214E8,0x800214F0,ZZ_201DC_130C);
ZZ_MARK_TARGET(0x800214F0,0x800214F4,ZZ_201DC_1314);
ZZ_MARK_TARGET(0x800214F4,0x8002151C,ZZ_201DC_1318);
ZZ_MARK_TARGET(0x8002151C,0x80021554,ZZ_201DC_1340);
ZZ_MARK_TARGET(0x80021554,0x80021564,ZZ_201DC_1378);
ZZ_MARK_TARGET(0x80021564,0x8002156C,ZZ_201DC_1388);
ZZ_MARK_TARGET(0x8002156C,0x80021570,ZZ_201DC_1390);
ZZ_MARK_TARGET(0x80021570,0x800215A4,ZZ_201DC_1394);
ZZ_MARK_TARGET(0x800215A4,0x800215B4,ZZ_201DC_13C8);
ZZ_MARK_TARGET(0x800215B4,0x800215BC,ZZ_201DC_13D8);
ZZ_MARK_TARGET(0x800215BC,0x800215C0,ZZ_201DC_13E0);
ZZ_MARK_TARGET(0x800215C0,0x800215E0,ZZ_201DC_13E4);
ZZ_MARK_TARGET(0x800215E0,0x80021618,ZZ_201DC_1404);
ZZ_MARK_TARGET(0x80021618,0x80021628,ZZ_201DC_143C);
ZZ_MARK_TARGET(0x80021628,0x80021630,ZZ_201DC_144C);
ZZ_MARK_TARGET(0x80021630,0x80021634,ZZ_201DC_1454);
ZZ_MARK_TARGET(0x80021634,0x80021668,ZZ_201DC_1458);
ZZ_MARK_TARGET(0x80021668,0x80021678,ZZ_201DC_148C);
ZZ_MARK_TARGET(0x80021678,0x80021680,ZZ_201DC_149C);
ZZ_MARK_TARGET(0x80021680,0x80021684,ZZ_201DC_14A4);
ZZ_MARK_TARGET(0x80021684,0x800216A4,ZZ_201DC_14A8);
ZZ_MARK_TARGET(0x800216A4,0x800216DC,ZZ_201DC_14C8);
ZZ_MARK_TARGET(0x800216DC,0x800216EC,ZZ_201DC_1500);
ZZ_MARK_TARGET(0x800216EC,0x800216F4,ZZ_201DC_1510);
ZZ_MARK_TARGET(0x800216F4,0x800216F8,ZZ_201DC_1518);
ZZ_MARK_TARGET(0x800216F8,0x8002172C,ZZ_201DC_151C);
ZZ_MARK_TARGET(0x8002172C,0x80021740,ZZ_201DC_1550);
ZZ_MARK_TARGET(0x80021740,0x80021748,ZZ_201DC_1564);
ZZ_MARK_TARGET(0x80021748,0x8002174C,ZZ_201DC_156C);
ZZ_MARK_TARGET(0x8002174C,0x8002176C,ZZ_201DC_1570);
ZZ_MARK_TARGET(0x8002176C,0x800217A4,ZZ_201DC_1590);
ZZ_MARK_TARGET(0x800217A4,0x800217B4,ZZ_201DC_15C8);
ZZ_MARK_TARGET(0x800217B4,0x800217BC,ZZ_201DC_15D8);
ZZ_MARK_TARGET(0x800217BC,0x800217C0,ZZ_201DC_15E0);
ZZ_MARK_TARGET(0x800217C0,0x800217F4,ZZ_201DC_15E4);
ZZ_MARK_TARGET(0x800217F4,0x80021808,ZZ_201DC_1618);
ZZ_MARK_TARGET(0x80021808,0x80021810,ZZ_201DC_162C);
ZZ_MARK_TARGET(0x80021810,0x80021814,ZZ_201DC_1634);
ZZ_MARK_TARGET(0x80021814,0x80021834,ZZ_201DC_1638);
ZZ_MARK_TARGET(0x80021834,0x8002183C,ZZ_201DC_1658);
ZZ_MARK_TARGET(0x8002183C,0x80021874,ZZ_201DC_1660);
ZZ_MARK_TARGET(0x80021874,0x80021884,ZZ_201DC_1698);
ZZ_MARK_TARGET(0x80021884,0x8002188C,ZZ_201DC_16A8);
ZZ_MARK_TARGET(0x8002188C,0x80021890,ZZ_201DC_16B0);
ZZ_MARK_TARGET(0x80021890,0x800218C4,ZZ_201DC_16B4);
ZZ_MARK_TARGET(0x800218C4,0x800218D4,ZZ_201DC_16E8);
ZZ_MARK_TARGET(0x800218D4,0x800218DC,ZZ_201DC_16F8);
ZZ_MARK_TARGET(0x800218DC,0x800218E0,ZZ_201DC_1700);
ZZ_MARK_TARGET(0x800218E0,0x8002190C,ZZ_201DC_1704);
ZZ_MARK_TARGET(0x8002190C,0x80021944,ZZ_201DC_1730);
ZZ_MARK_TARGET(0x80021944,0x80021954,ZZ_201DC_1768);
ZZ_MARK_TARGET(0x80021954,0x8002195C,ZZ_201DC_1778);
ZZ_MARK_TARGET(0x8002195C,0x80021960,ZZ_201DC_1780);
ZZ_MARK_TARGET(0x80021960,0x80021994,ZZ_201DC_1784);
ZZ_MARK_TARGET(0x80021994,0x800219A4,ZZ_201DC_17B8);
ZZ_MARK_TARGET(0x800219A4,0x800219AC,ZZ_201DC_17C8);
ZZ_MARK_TARGET(0x800219AC,0x800219B0,ZZ_201DC_17D0);
ZZ_MARK_TARGET(0x800219B0,0x800219E0,ZZ_201DC_17D4);
ZZ_MARK_TARGET(0x800219E0,0x800219E8,ZZ_201DC_1804);
ZZ_MARK_TARGET(0x800219E8,0x800219FC,ZZ_201DC_180C);
ZZ_MARK_TARGET(0x800219FC,0x80021A08,ZZ_201DC_1820);
ZZ_MARK_TARGET(0x80021A08,0x80021A3C,ZZ_201DC_182C);
ZZ_MARK_TARGET(0x80021A3C,0x80021A4C,ZZ_201DC_1860);
ZZ_MARK_TARGET(0x80021A4C,0x80021A54,ZZ_201DC_1870);
ZZ_MARK_TARGET(0x80021A54,0x80021A88,ZZ_201DC_1878);
ZZ_MARK_TARGET(0x80021A88,0x80021A98,ZZ_201DC_18AC);
ZZ_MARK_TARGET(0x80021A98,0x80021AA0,ZZ_201DC_18BC);
ZZ_MARK_TARGET(0x80021AA0,0x80021AD8,ZZ_201DC_18C4);
ZZ_MARK_TARGET(0x80021AD8,0x80021AE8,ZZ_201DC_18FC);
ZZ_MARK_TARGET(0x80021AE8,0x80021AF4,ZZ_201DC_190C);
ZZ_MARK_TARGET(0x80021AF4,0x80021B28,ZZ_201DC_1918);
ZZ_MARK_TARGET(0x80021B28,0x80021B38,ZZ_201DC_194C);
ZZ_MARK_TARGET(0x80021B38,0x80021B40,ZZ_201DC_195C);
ZZ_MARK_TARGET(0x80021B40,0x80021B74,ZZ_201DC_1964);
ZZ_MARK_TARGET(0x80021B74,0x80021B88,ZZ_201DC_1998);
ZZ_MARK_TARGET(0x80021B88,0x80021B90,ZZ_201DC_19AC);
ZZ_MARK_TARGET(0x80021B90,0x80021BAC,ZZ_201DC_19B4);
ZZ_MARK_TARGET(0x80021BAC,0x80021BC4,ZZ_201DC_19D0);
ZZ_MARK_TARGET(0x80021BC4,0x80021BDC,ZZ_201DC_19E8);
ZZ_MARK_TARGET(0x80021BDC,0x80021C08,ZZ_201DC_1A00);
ZZ_MARK_TARGET(0x80021C08,0x80021C3C,ZZ_201DC_1A2C);
ZZ_MARK_TARGET(0x80021C3C,0x80021C4C,ZZ_201DC_1A60);
ZZ_MARK_TARGET(0x80021C4C,0x80021C54,ZZ_201DC_1A70);
ZZ_MARK_TARGET(0x80021C54,0x80021C88,ZZ_201DC_1A78);
ZZ_MARK_TARGET(0x80021C88,0x80021C98,ZZ_201DC_1AAC);
ZZ_MARK_TARGET(0x80021C98,0x80021CA0,ZZ_201DC_1ABC);
ZZ_MARK_TARGET(0x80021CA0,0x80021CD0,ZZ_201DC_1AC4);
ZZ_MARK_TARGET(0x80021CD0,0x80021CE8,ZZ_201DC_1AF4);
ZZ_MARK_TARGET(0x80021CE8,0x80021CF4,ZZ_201DC_1B0C);
ZZ_MARK_TARGET(0x80021CF4,0x80021D28,ZZ_201DC_1B18);
ZZ_MARK_TARGET(0x80021D28,0x80021D38,ZZ_201DC_1B4C);
ZZ_MARK_TARGET(0x80021D38,0x80021D40,ZZ_201DC_1B5C);
ZZ_MARK_TARGET(0x80021D40,0x80021D44,ZZ_201DC_1B64);
ZZ_MARK_TARGET(0x80021D44,0x80021D78,ZZ_201DC_1B68);
ZZ_MARK_TARGET(0x80021D78,0x80021DB0,ZZ_201DC_1B9C);
ZZ_MARK_TARGET(0x80021DB0,0x80021DC0,ZZ_201DC_1BD4);
ZZ_MARK_TARGET(0x80021DC0,0x80021DC8,ZZ_201DC_1BE4);
ZZ_MARK_TARGET(0x80021DC8,0x80021DCC,ZZ_201DC_1BEC);
ZZ_MARK_TARGET(0x80021DCC,0x80021DFC,ZZ_201DC_1BF0);
ZZ_MARK_TARGET(0x80021DFC,0x80021E0C,ZZ_201DC_1C20);
ZZ_MARK_TARGET(0x80021E0C,0x80021E14,ZZ_201DC_1C30);
ZZ_MARK_TARGET(0x80021E14,0x80021E38,ZZ_201DC_1C38);
ZZ_MARK_TARGET(0x80021E38,0x80021E6C,ZZ_201DC_1C5C);
ZZ_MARK_TARGET(0x80021E6C,0x80021EB8,ZZ_201DC_1C90);
ZZ_MARK_TARGET(0x80021EB8,0x80021EC8,ZZ_201DC_1CDC);
ZZ_MARK_TARGET(0x80021EC8,0x80021ED0,ZZ_201DC_1CEC);
ZZ_MARK_TARGET(0x80021ED0,0x80021ED4,ZZ_201DC_1CF4);
ZZ_MARK_TARGET(0x80021ED4,0x80021EE8,ZZ_201DC_1CF8);
ZZ_MARK_TARGET(0x80021EE8,0x80021F1C,ZZ_201DC_1D0C);
ZZ_MARK_TARGET(0x80021F1C,0x80021F2C,ZZ_201DC_1D40);
ZZ_MARK_TARGET(0x80021F2C,0x80021F34,ZZ_201DC_1D50);
ZZ_MARK_TARGET(0x80021F34,0x80021F38,ZZ_201DC_1D58);
ZZ_MARK_TARGET(0x80021F38,0x80021F6C,ZZ_201DC_1D5C);
ZZ_MARK_TARGET(0x80021F6C,0x80021FAC,ZZ_201DC_1D90);
ZZ_MARK_TARGET(0x80021FAC,0x80021FC4,ZZ_201DC_1DD0);
ZZ_MARK_TARGET(0x80021FC4,0x80022014,ZZ_201DC_1DE8);
ZZ_MARK_TARGET(0x80022014,0x80022028,ZZ_201DC_1E38);
ZZ_MARK_TARGET(0x80022028,0x80022034,ZZ_201DC_1E4C);
ZZ_MARK_TARGET(0x80022034,0x8002203C,ZZ_201DC_1E58);
ZZ_MARK_TARGET(0x8002203C,0x80022048,ZZ_201DC_1E60);
ZZ_MARK_TARGET(0x80022048,0x80022064,ZZ_201DC_1E6C);
ZZ_MARK_TARGET(0x80022064,0x80022080,ZZ_201DC_1E88);
ZZ_MARK_TARGET(0x80022080,0x80022094,ZZ_201DC_1EA4);
ZZ_MARK_TARGET(0x80022094,0x800220C4,ZZ_201DC_1EB8);
ZZ_MARK_TARGET(0x800220C4,0x800220D0,ZZ_201DC_1EE8);
ZZ_MARK_TARGET(0x800220D0,0x800220E8,ZZ_201DC_1EF4);
ZZ_MARK_TARGET(0x800220E8,0x800220F4,ZZ_201DC_1F0C);
ZZ_MARK_TARGET(0x800220F4,0x8002212C,ZZ_201DC_1F18);
ZZ_MARK_TARGET(0x8002212C,0x80022164,ZZ_201DC_1F50);
ZZ_MARK_TARGET(0x80022164,0x800221A4,ZZ_201DC_1F88);
ZZ_MARK_TARGET(0x800221A4,0x800221C8,ZZ_201DC_1FC8);
ZZ_MARK_TARGET(0x800221C8,0x800221E0,ZZ_201DC_1FEC);
ZZ_MARK_TARGET(0x800221E0,0x800221FC,ZZ_201DC_2004);
ZZ_MARK_TARGET(0x800221FC,0x80022208,ZZ_201DC_2020);
ZZ_MARK_TARGET(0x80022208,0x80022214,ZZ_201DC_202C);
ZZ_MARK_TARGET(0x80022214,0x80022228,ZZ_201DC_2038);
ZZ_MARK_TARGET(0x80022228,0x80022230,ZZ_201DC_204C);
ZZ_MARK_TARGET(0x80022230,0x80022240,ZZ_201DC_2054);
ZZ_MARK_TARGET(0x80022240,0x80022244,ZZ_201DC_2064);
ZZ_MARK_TARGET(0x80022244,0x80022254,ZZ_201DC_2068);
ZZ_MARK_TARGET(0x80022254,0x8002226C,ZZ_201DC_2078);
ZZ_MARK_TARGET(0x8002226C,0x800222A0,ZZ_201DC_2090);
ZZ_MARK_TARGET(0x800222A0,0x800222CC,ZZ_201DC_20C4);
ZZ_MARK_TARGET(0x800222CC,0x800222F4,ZZ_201DC_20F0);
ZZ_MARK_TARGET(0x800222F4,0x80022318,ZZ_201DC_2118);
ZZ_MARK_TARGET(0x80022318,0x80022344,ZZ_201DC_213C);
ZZ_MARK_TARGET(0x80022344,0x8002234C,ZZ_201DC_2168);
ZZ_MARK_TARGET(0x8002234C,0x80022380,ZZ_201DC_2170);
ZZ_MARK_TARGET(0x80022380,0x800223A4,ZZ_201DC_21A4);
ZZ_MARK_TARGET(0x800223A4,0x800223B8,ZZ_201DC_21C8);
ZZ_MARK_TARGET(0x800223B8,0x800223DC,ZZ_201DC_21DC);
ZZ_MARK_TARGET(0x800223DC,0x80022438,ZZ_201DC_2200);
ZZ_MARK_TARGET(0x80022438,0x8002244C,ZZ_201DC_225C);
ZZ_MARK_TARGET(0x8002244C,0x80022460,ZZ_201DC_2270);
ZZ_MARK_TARGET(0x80022460,0x8002246C,ZZ_201DC_2284);
ZZ_MARK_TARGET(0x8002246C,0x80022470,ZZ_201DC_2290);
ZZ_MARK_TARGET(0x80022470,0x8002249C,ZZ_201DC_2294);
ZZ_MARK_TARGET(0x8002249C,0x800224C8,ZZ_201DC_22C0);
ZZ_MARK_TARGET(0x800224C8,0x800224E8,ZZ_201DC_22EC);
ZZ_MARK_TARGET(0x800224E8,0x800224EC,ZZ_201DC_230C);
ZZ_MARK_TARGET(0x800224EC,0x800224F4,ZZ_201DC_2310);
ZZ_MARK_TARGET(0x800224F4,0x80022518,ZZ_201DC_2318);
ZZ_MARK_TARGET(0x80022518,0x8002252C,ZZ_201DC_233C);
ZZ_MARK_TARGET(0x8002252C,0x80022574,ZZ_201DC_2350);
ZZ_MARK_TARGET(0x80022574,0x800225B4,ZZ_201DC_2398);
ZZ_MARK_TARGET(0x800225B4,0x800225F4,ZZ_201DC_23D8);
ZZ_MARK_TARGET(0x800225F4,0x8002260C,ZZ_201DC_2418);
ZZ_MARK_TARGET(0x8002260C,0x8002261C,ZZ_201DC_2430);
ZZ_MARK_TARGET(0x8002261C,0x80022624,ZZ_201DC_2440);
ZZ_MARK_TARGET(0x80022624,0x80022640,ZZ_201DC_2448);
ZZ_MARK_TARGET(0x80022640,0x80022664,ZZ_201DC_2464);
ZZ_MARK_TARGET(0x80022664,0x80022678,ZZ_201DC_2488);
ZZ_MARK_TARGET(0x80022678,0x80022680,ZZ_201DC_249C);
ZZ_MARK_TARGET(0x80022680,0x80022690,ZZ_201DC_24A4);
ZZ_MARK_TARGET(0x80022690,0x80022698,ZZ_201DC_24B4);
ZZ_MARK_TARGET(0x80022698,0x800226D4,ZZ_201DC_24BC);
ZZ_MARK_TARGET(0x800226D4,0x800226D8,ZZ_201DC_24F8);
ZZ_MARK_TARGET(0x800226D8,0x800226F8,ZZ_201DC_24FC);
ZZ_MARK_TARGET(0x800226F8,0x80022704,ZZ_201DC_251C);
ZZ_MARK_TARGET(0x80022704,0x80022710,ZZ_201DC_2528);
ZZ_MARK_TARGET(0x80022710,0x80022738,ZZ_201DC_2534);
ZZ_MARK_TARGET(0x80022738,0x80022758,ZZ_201DC_255C);
ZZ_MARK_TARGET(0x80022758,0x80022764,ZZ_201DC_257C);
ZZ_MARK_TARGET(0x80022764,0x80022778,ZZ_201DC_2588);
ZZ_MARK_TARGET(0x80022778,0x80022780,ZZ_201DC_259C);
ZZ_MARK_TARGET(0x80022780,0x8002278C,ZZ_201DC_25A4);
ZZ_MARK_TARGET(0x8002278C,0x80022794,ZZ_201DC_25B0);
ZZ_MARK_TARGET(0x80022794,0x800227A8,ZZ_201DC_25B8);
ZZ_MARK_TARGET(0x800227A8,0x800227B0,ZZ_201DC_25CC);
ZZ_MARK_TARGET(0x800227B0,0x800227B8,ZZ_201DC_25D4);
ZZ_MARK_TARGET(0x800227B8,0x800227C4,ZZ_201DC_25DC);
ZZ_MARK_TARGET(0x800227C4,0x800227CC,ZZ_201DC_25E8);
ZZ_MARK_TARGET(0x800227CC,0x80022804,ZZ_201DC_25F0);
ZZ_MARK_TARGET(0x80022804,0x8002280C,ZZ_201DC_2628);
ZZ_MARK_TARGET(0x8002280C,0x80022818,ZZ_201DC_2630);
ZZ_MARK_TARGET(0x80022818,0x8002282C,ZZ_201DC_263C);
ZZ_MARK_TARGET(0x8002282C,0x80022858,ZZ_201DC_2650);
ZZ_MARK_TARGET(0x80022858,0x80022874,ZZ_201DC_267C);
ZZ_MARK_TARGET(0x80022874,0x80022888,ZZ_201DC_2698);
ZZ_MARK_TARGET(0x80022888,0x80022894,ZZ_201DC_26AC);
ZZ_MARK_TARGET(0x80022894,0x800228B0,ZZ_201DC_26B8);
ZZ_MARK_TARGET(0x800228B0,0x800228BC,ZZ_201DC_26D4);
ZZ_MARK_TARGET(0x800228BC,0x800228C4,ZZ_201DC_26E0);
ZZ_MARK_TARGET(0x800228C4,0x800228CC,ZZ_201DC_26E8);
ZZ_MARK_TARGET(0x800228CC,0x800228D4,ZZ_201DC_26F0);
ZZ_MARK_TARGET(0x800228D4,0x80022938,ZZ_201DC_26F8);
ZZ_MARK_TARGET(0x80022938,0x80022958,ZZ_201DC_275C);
ZZ_MARK_TARGET(0x80022958,0x80022968,ZZ_201DC_277C);
ZZ_MARK_TARGET(0x80022968,0x80022978,ZZ_201DC_278C);
ZZ_MARK_TARGET(0x80022978,0x8002298C,ZZ_201DC_279C);
ZZ_MARK_TARGET(0x8002298C,0x80022994,ZZ_201DC_27B0);
ZZ_MARK_TARGET(0x80022994,0x800229A4,ZZ_201DC_27B8);
ZZ_MARK_TARGET(0x800229A4,0x800229D0,ZZ_201DC_27C8);
ZZ_MARK_TARGET(0x800229D0,0x800229E0,ZZ_201DC_27F4);
ZZ_MARK_TARGET(0x800229E0,0x800229E8,ZZ_201DC_2804);
ZZ_MARK_TARGET(0x800229E8,0x80022A78,ZZ_201DC_280C);
ZZ_MARK_TARGET(0x80022A78,0x80022A84,ZZ_201DC_289C);
ZZ_MARK_TARGET(0x80022A84,0x80022A90,ZZ_201DC_28A8);
ZZ_MARK_TARGET(0x80022A90,0x80022A98,ZZ_201DC_28B4);
ZZ_MARK_TARGET(0x80022A98,0x80022AD8,ZZ_201DC_28BC);
ZZ_MARK_TARGET(0x80022AD8,0x80022AE4,ZZ_201DC_28FC);
ZZ_MARK_TARGET(0x80022AE4,0x80022B0C,ZZ_201DC_2908);
ZZ_MARK_TARGET(0x80022B0C,0x80022B14,ZZ_201DC_2930);
ZZ_MARK_TARGET(0x80022B14,0x80022B20,ZZ_201DC_2938);
ZZ_MARK_TARGET(0x80022B20,0x80022B48,ZZ_201DC_2944);
ZZ_MARK_TARGET(0x80022B48,0x80022B50,ZZ_201DC_296C);
ZZ_MARK_TARGET(0x80022B50,0x80022B60,ZZ_201DC_2974);
ZZ_MARK_TARGET(0x80022B60,0x80022BCC,ZZ_201DC_2984);
ZZ_MARK_TARGET(0x80022BCC,0x80022BF8,ZZ_201DC_29F0);
ZZ_MARK_TARGET(0x80022BF8,0x80022C0C,ZZ_201DC_2A1C);
ZZ_MARK_TARGET(0x80022C0C,0x80022C38,ZZ_201DC_2A30);
ZZ_MARK_TARGET(0x80022C38,0x80022C64,ZZ_201DC_2A5C);
ZZ_MARK_TARGET(0x80022C64,0x80022C7C,ZZ_201DC_2A88);
ZZ_MARK_TARGET(0x80022C7C,0x80022CA4,ZZ_201DC_2AA0);
ZZ_MARK_TARGET(0x80022CA4,0x80022CD8,ZZ_201DC_2AC8);
ZZ_MARK_TARGET(0x80022CD8,0x80022CE4,ZZ_201DC_2AFC);
ZZ_MARK_TARGET(0x80022CE4,0x80022D0C,ZZ_201DC_2B08);
ZZ_MARK_TARGET(0x80022D0C,0x80022D14,ZZ_201DC_2B30);
ZZ_MARK_TARGET(0x80022D14,0x80022D20,ZZ_201DC_2B38);
ZZ_MARK_TARGET(0x80022D20,0x80022D48,ZZ_201DC_2B44);
ZZ_MARK_TARGET(0x80022D48,0x80022D50,ZZ_201DC_2B6C);
ZZ_MARK_TARGET(0x80022D50,0x80022D60,ZZ_201DC_2B74);
ZZ_MARK_TARGET(0x80022D60,0x80022DC0,ZZ_201DC_2B84);
ZZ_MARK_TARGET(0x80022DC0,0x80022E10,ZZ_201DC_2BE4);
ZZ_MARK_TARGET(0x80022E10,0x80022E2C,ZZ_201DC_2C34);
ZZ_MARK_TARGET(0x80022E2C,0x80022E38,ZZ_201DC_2C50);
ZZ_MARK_TARGET(0x80022E38,0x80022E40,ZZ_201DC_2C5C);
ZZ_MARK_TARGET(0x80022E40,0x80022E48,ZZ_201DC_2C64);
ZZ_MARK_TARGET(0x80022E48,0x80022E6C,ZZ_201DC_2C6C);
ZZ_MARK_TARGET(0x80022E6C,0x80022E94,ZZ_201DC_2C90);
ZZ_MARK_TARGET(0x80022E94,0x80022EB0,ZZ_201DC_2CB8);
ZZ_MARK_TARGET(0x80022EB0,0x80022ED4,ZZ_201DC_2CD4);
ZZ_MARK_TARGET(0x80022ED4,0x80022F0C,ZZ_201DC_2CF8);
ZZ_MARK_TARGET(0x80022F0C,0x80022F18,ZZ_201DC_2D30);
ZZ_MARK_TARGET(0x80022F18,0x80022F1C,ZZ_201DC_2D3C);
ZZ_MARK_TARGET(0x80022F1C,0x80022F34,ZZ_201DC_2D40);
ZZ_MARK_TARGET(0x80022F34,0x80022F58,ZZ_201DC_2D58);
ZZ_MARK_TARGET(0x80022F58,0x80022F60,ZZ_201DC_2D7C);
ZZ_MARK_TARGET(0x80022F60,0x80022FF4,ZZ_201DC_2D84);
ZZ_MARK_TARGET(0x80022FF4,0x80022FF8,ZZ_201DC_2E18);
ZZ_MARK_TARGET(0x80022FF8,0x8002300C,ZZ_201DC_2E1C);
ZZ_MARK_TARGET(0x8002300C,0x80023084,ZZ_201DC_2E30);
ZZ_MARK_TARGET(0x80023084,0x8002309C,ZZ_201DC_2EA8);
ZZ_MARK_TARGET(0x8002309C,0x800230B4,ZZ_201DC_2EC0);
ZZ_MARK_TARGET(0x800230B4,0x800230C0,ZZ_201DC_2ED8);
ZZ_MARK_TARGET(0x800230C0,0x800230C4,ZZ_201DC_2EE4);
ZZ_MARK_TARGET(0x800230C4,0x80023108,ZZ_201DC_2EE8);
ZZ_MARK_TARGET(0x80023108,0x80023128,ZZ_201DC_2F2C);
ZZ_MARK_TARGET(0x80023128,0x80023158,ZZ_201DC_2F4C);
ZZ_MARK_TARGET(0x80023158,0x80023168,ZZ_201DC_2F7C);
ZZ_MARK_TARGET(0x80023168,0x80023170,ZZ_201DC_2F8C);
ZZ_MARK_TARGET(0x80023170,0x800231CC,ZZ_201DC_2F94);
ZZ_MARK_TARGET(0x800231CC,0x800231E4,ZZ_201DC_2FF0);
ZZ_MARK_TARGET(0x800231E4,0x800231FC,ZZ_201DC_3008);
ZZ_MARK_TARGET(0x800231FC,0x80023208,ZZ_201DC_3020);
ZZ_MARK_TARGET(0x80023208,0x80023210,ZZ_201DC_302C);
ZZ_MARK_TARGET(0x80023210,0x80023218,ZZ_201DC_3034);
ZZ_MARK_TARGET(0x80023218,0x80023234,ZZ_201DC_303C);
ZZ_MARK_TARGET(0x80023234,0x80023248,ZZ_201DC_3058);
ZZ_MARK_TARGET(0x80023248,0x8002325C,ZZ_201DC_306C);
ZZ_MARK_TARGET(0x8002325C,0x80023288,ZZ_201DC_3080);
ZZ_MARK_TARGET(0x80023288,0x80023290,ZZ_201DC_30AC);
ZZ_MARK_TARGET(0x80023290,0x80023294,ZZ_201DC_30B4);
ZZ_MARK_TARGET(0x80023294,0x8002329C,ZZ_201DC_30B8);
ZZ_MARK_TARGET(0x8002329C,0x800232A4,ZZ_201DC_30C0);
ZZ_MARK_TARGET(0x800232A4,0x800232AC,ZZ_201DC_30C8);
ZZ_MARK_TARGET(0x800232AC,0x800232B4,ZZ_201DC_30D0);
ZZ_MARK_TARGET(0x800232B4,0x800232BC,ZZ_201DC_30D8);
ZZ_MARK_TARGET(0x800232BC,0x800232C8,ZZ_201DC_30E0);
ZZ_MARK_TARGET(0x800232C8,0x800232D0,ZZ_201DC_30EC);
ZZ_MARK_TARGET(0x800232D0,0x800232DC,ZZ_201DC_30F4);
ZZ_MARK_TARGET(0x800232DC,0x800232F4,ZZ_201DC_3100);
ZZ_MARK_TARGET(0x800232F4,0x80023300,ZZ_201DC_3118);
ZZ_MARK_TARGET(0x80023300,0x80023304,ZZ_201DC_3124);
ZZ_MARK_TARGET(0x80023304,0x8002330C,ZZ_201DC_3128);
ZZ_MARK_TARGET(0x8002330C,0x8002335C,ZZ_201DC_3130);
ZZ_MARK_TARGET(0x8002335C,0x8002336C,ZZ_201DC_3180);
ZZ_MARK_TARGET(0x8002336C,0x80023374,ZZ_201DC_3190);
ZZ_MARK_TARGET(0x80023374,0x80023378,ZZ_201DC_3198);
ZZ_MARK_TARGET(0x80023378,0x800233A4,ZZ_201DC_319C);
ZZ_MARK_TARGET(0x800233A4,0x800233E4,ZZ_201DC_31C8);
ZZ_MARK_TARGET(0x800233E4,0x80023408,ZZ_201DC_3208);
ZZ_MARK_TARGET(0x80023408,0x80023414,ZZ_201DC_322C);
ZZ_MARK_TARGET(0x80023414,0x80023450,ZZ_201DC_3238);
ZZ_MARK_TARGET(0x80023450,0x8002346C,ZZ_201DC_3274);
ZZ_MARK_TARGET(0x8002346C,0x80023478,ZZ_201DC_3290);
ZZ_MARK_TARGET(0x80023478,0x80023490,ZZ_201DC_329C);
ZZ_MARK_TARGET(0x80023490,0x8002349C,ZZ_201DC_32B4);
ZZ_MARK_TARGET(0x8002349C,0x80023518,ZZ_201DC_32C0);
ZZ_MARK_TARGET(0x80023518,0x8002351C,ZZ_201DC_333C);
ZZ_MARK_TARGET(0x8002351C,0x8002352C,ZZ_201DC_3340);
ZZ_MARK_TARGET(0x8002352C,0x80023534,ZZ_201DC_3350);
ZZ_MARK_TARGET(0x80023534,0x80023570,ZZ_201DC_3358);
ZZ_MARK_TARGET(0x80023570,0x80023594,ZZ_201DC_3394);
ZZ_MARK_TARGET(0x80023594,0x800235B4,ZZ_201DC_33B8);
ZZ_MARK_TARGET(0x800235B4,0x8002368C,ZZ_201DC_33D8);
ZZ_MARK_TARGET(0x8002368C,0x80023694,ZZ_201DC_34B0);
ZZ_MARK_TARGET(0x80023694,0x800236BC,ZZ_201DC_34B8);
ZZ_MARK_TARGET(0x800236BC,0x80023700,ZZ_201DC_34E0);
ZZ_MARK_TARGET(0x80023700,0x80023718,ZZ_201DC_3524);
ZZ_MARK_TARGET(0x80023718,0x80023748,ZZ_201DC_353C);
ZZ_MARK_TARGET(0x80023748,0x80023760,ZZ_201DC_356C);
ZZ_MARK_TARGET(0x80023760,0x80023790,ZZ_201DC_3584);
ZZ_MARK_TARGET(0x80023790,0x800237A8,ZZ_201DC_35B4);
ZZ_MARK_TARGET(0x800237A8,0x800237BC,ZZ_201DC_35CC);
ZZ_MARK_TARGET(0x800237BC,0x800237E4,ZZ_201DC_35E0);
ZZ_MARK_TARGET(0x800237E4,0x800237EC,ZZ_201DC_3608);
ZZ_MARK_TARGET(0x800237EC,0x80023818,ZZ_201DC_3610);
ZZ_MARK_TARGET(0x80023818,0x80023844,ZZ_201DC_363C);
ZZ_MARK_TARGET(0x80023844,0x8002389C,ZZ_201DC_3668);
ZZ_MARK_TARGET(0x8002389C,0x800238DC,ZZ_201DC_36C0);
ZZ_MARK_TARGET(0x800238DC,0x800238EC,ZZ_201DC_3700);
ZZ_MARK_TARGET(0x800238EC,0x800238F4,ZZ_201DC_3710);
ZZ_MARK_TARGET(0x800238F4,0x800238F8,ZZ_201DC_3718);
ZZ_MARK_TARGET(0x800238F8,0x80023910,ZZ_201DC_371C);
ZZ_MARK_TARGET(0x80023910,0x80023948,ZZ_201DC_3734);
ZZ_MARK_TARGET(0x80023948,0x80023998,ZZ_201DC_376C);
ZZ_MARK_TARGET(0x80023998,0x800239A0,ZZ_201DC_37BC);
ZZ_MARK_TARGET(0x800239A0,0x800239A4,ZZ_201DC_37C4);
ZZ_MARK_TARGET(0x800239A4,0x800239AC,ZZ_201DC_37C8);
ZZ_MARK_TARGET(0x800239AC,0x800239EC,ZZ_201DC_37D0);
ZZ_MARK_TARGET(0x800239EC,0x800239FC,ZZ_201DC_3810);
ZZ_MARK_TARGET(0x800239FC,0x80023A04,ZZ_201DC_3820);
ZZ_MARK_TARGET(0x80023A04,0x80023A08,ZZ_201DC_3828);
ZZ_MARK_TARGET(0x80023A08,0x80023A20,ZZ_201DC_382C);
ZZ_MARK_TARGET(0x80023A20,0x80023A58,ZZ_201DC_3844);
ZZ_MARK_TARGET(0x80023A58,0x80023A80,ZZ_201DC_387C);
ZZ_MARK_TARGET(0x80023A80,0x80023A84,ZZ_201DC_38A4);
ZZ_MARK_TARGET(0x80023A84,0x80023AB4,ZZ_201DC_38A8);
ZZ_MARK_TARGET(0x80023AB4,0x80023AE4,ZZ_201DC_38D8);
ZZ_MARK_TARGET(0x80023AE4,0x80023AF0,ZZ_201DC_3908);
ZZ_MARK_TARGET(0x80023AF0,0x80023AFC,ZZ_201DC_3914);
ZZ_MARK_TARGET(0x80023AFC,0x80023B38,ZZ_201DC_3920);
ZZ_MARK_TARGET(0x80023B38,0x80023B48,ZZ_201DC_395C);
ZZ_MARK_TARGET(0x80023B48,0x80023B50,ZZ_201DC_396C);
ZZ_MARK_TARGET(0x80023B50,0x80023B54,ZZ_201DC_3974);
ZZ_MARK_TARGET(0x80023B54,0x80023B6C,ZZ_201DC_3978);
ZZ_MARK_TARGET(0x80023B6C,0x80023BA4,ZZ_201DC_3990);
ZZ_MARK_TARGET(0x80023BA4,0x80023BAC,ZZ_201DC_39C8);
ZZ_MARK_TARGET(0x80023BAC,0x80023BB4,ZZ_201DC_39D0);
ZZ_MARK_TARGET(0x80023BB4,0x80023BCC,ZZ_201DC_39D8);
ZZ_MARK_TARGET(0x80023BCC,0x80023C00,ZZ_201DC_39F0);
ZZ_MARK_TARGET(0x80023C00,0x80023C10,ZZ_201DC_3A24);
ZZ_MARK_TARGET(0x80023C10,0x80023C18,ZZ_201DC_3A34);
ZZ_MARK_TARGET(0x80023C18,0x80023C1C,ZZ_201DC_3A3C);
ZZ_MARK_TARGET(0x80023C1C,0x80023C58,ZZ_201DC_3A40);
ZZ_MARK_TARGET(0x80023C58,0x80023C64,ZZ_201DC_3A7C);
ZZ_MARK_TARGET(0x80023C64,0x80023C8C,ZZ_201DC_3A88);
ZZ_MARK_TARGET(0x80023C8C,0x80023CA4,ZZ_201DC_3AB0);
ZZ_MARK_TARGET(0x80023CA4,0x80023CCC,ZZ_201DC_3AC8);
ZZ_MARK_TARGET(0x80023CCC,0x80023CF0,ZZ_201DC_3AF0);
ZZ_MARK_TARGET(0x80023CF0,0x80023D04,ZZ_201DC_3B14);
ZZ_MARK_TARGET(0x80023D04,0x80023D18,ZZ_201DC_3B28);
ZZ_MARK_TARGET(0x80023D18,0x80023D20,ZZ_201DC_3B3C);
ZZ_MARK_TARGET(0x80023D20,0x80023D40,ZZ_201DC_3B44);
ZZ_MARK_TARGET(0x80023D40,0x80023D48,ZZ_201DC_3B64);
ZZ_MARK_TARGET(0x80023D48,0x80023D64,ZZ_201DC_3B6C);
ZZ_MARK_TARGET(0x80023D64,0x80023D6C,ZZ_201DC_3B88);
ZZ_MARK_TARGET(0x80023D6C,0x80023D70,ZZ_201DC_3B90);
ZZ_MARK_TARGET(0x80023D70,0x80023D8C,ZZ_201DC_3B94);
ZZ_MARK_TARGET(0x80023D8C,0x80023D98,ZZ_201DC_3BB0);
ZZ_MARK_TARGET(0x80023D98,0x80023DAC,ZZ_201DC_3BBC);
ZZ_MARK_TARGET(0x80023DAC,0x80023DC0,ZZ_201DC_3BD0);
ZZ_MARK_TARGET(0x80023DC0,0x80023DE8,ZZ_201DC_3BE4);
ZZ_MARK_TARGET(0x80023DE8,0x80023E0C,ZZ_201DC_3C0C);
ZZ_MARK_TARGET(0x80023E0C,0x80023E34,ZZ_201DC_3C30);
ZZ_MARK_TARGET(0x80023E34,0x80023E50,ZZ_201DC_3C58);
ZZ_MARK_TARGET(0x80023E50,0x80023E54,ZZ_201DC_3C74);
ZZ_MARK_TARGET(0x80023E54,0x80023E64,ZZ_201DC_3C78);
ZZ_MARK_TARGET(0x80023E64,0x80023E78,ZZ_201DC_3C88);
ZZ_MARK_TARGET(0x80023E78,0x80023EB0,ZZ_201DC_3C9C);
ZZ_MARK_TARGET(0x80023EB0,0x80023EC0,ZZ_201DC_3CD4);
ZZ_MARK_TARGET(0x80023EC0,0x80023EC8,ZZ_201DC_3CE4);
ZZ_MARK_TARGET(0x80023EC8,0x80023ECC,ZZ_201DC_3CEC);
ZZ_MARK_TARGET(0x80023ECC,0x80023EFC,ZZ_201DC_3CF0);
ZZ_MARK_TARGET(0x80023EFC,0x80023F0C,ZZ_201DC_3D20);
ZZ_MARK_TARGET(0x80023F0C,0x80023F14,ZZ_201DC_3D30);
ZZ_MARK_TARGET(0x80023F14,0x80023F24,ZZ_201DC_3D38);
ZZ_MARK_TARGET(0x80023F24,0x80023F2C,ZZ_201DC_3D48);
ZZ_MARK_TARGET(0x80023F2C,0x80023F60,ZZ_201DC_3D50);
ZZ_MARK_TARGET(0x80023F60,0x80023F70,ZZ_201DC_3D84);
ZZ_MARK_TARGET(0x80023F70,0x80023F78,ZZ_201DC_3D94);
ZZ_MARK_TARGET(0x80023F78,0x80023F7C,ZZ_201DC_3D9C);
ZZ_MARK_TARGET(0x80023F7C,0x80023F9C,ZZ_201DC_3DA0);
ZZ_MARK_TARGET(0x80023F9C,0x80023FB8,ZZ_201DC_3DC0);
ZZ_MARK_TARGET(0x80023FB8,0x80023FC0,ZZ_201DC_3DDC);
ZZ_MARK_TARGET(0x80023FC0,0x80023FC4,ZZ_201DC_3DE4);
ZZ_MARK_TARGET(0x80023FC4,0x80023FD4,ZZ_201DC_3DE8);
ZZ_MARK_TARGET(0x80023FD4,0x80023FE4,ZZ_201DC_3DF8);
ZZ_MARK_TARGET(0x80023FE4,0x80023FF8,ZZ_201DC_3E08);
ZZ_MARK_TARGET(0x80023FF8,0x80024000,ZZ_201DC_3E1C);
ZZ_MARK_TARGET(0x80024000,0x80024008,ZZ_201DC_3E24);
ZZ_MARK_TARGET(0x80024008,0x8002400C,ZZ_201DC_3E2C);
ZZ_MARK_TARGET(0x8002400C,0x80024040,ZZ_201DC_3E30);
