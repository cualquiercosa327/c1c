#ifdef ZZ_INCLUDE_CODE
ZZ_47C84:
	A3 <<= 1;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	A2 <<= 1;
	A3 += V1;
	A2 += V1;
	V0 = EMU_ReadU16(A3);
	V1 = EMU_ReadU16(A2);
	V0 &= 0xFF;
	V0 <<= 16;
	if (!A0)
	{
		T0 = V1 | V0;
		ZZ_CLOCKCYCLES(12,0x80047CEC);
		goto ZZ_47C84_68;
	}
	T0 = V1 | V0;
	V0 = 0x1;
	if (A0 != V0)
	{
		V1 = 0xFF0000;
		ZZ_CLOCKCYCLES(15,0x80047D28);
		goto ZZ_47C84_A4;
	}
	V1 = 0xFF0000;
	V1 |= 0xFFFF;
	V1 &= A1;
	V0 = EMU_ReadU16(A2);
	T0 |= V1;
	V0 |= A1;
	EMU_Write16(A2,V0);
	V0 = A1 >> 16;
	V1 = EMU_ReadU16(A3);
	V0 &= 0xFF;
	V1 |= V0;
	ZZ_CLOCKCYCLES(26,0x80047D24);
	goto ZZ_47C84_A0;
ZZ_47C84_68:
	V0 = 0xFF0000;
	V0 |= 0xFFFF;
	V0 &= A1;
	V0 = ~V0;
	T0 &= V0;
	V0 = EMU_ReadU16(A2);
	V1 = ~A1;
	V0 &= V1;
	EMU_Write16(A2,V0);
	V0 = A1 >> 16;
	V0 &= 0xFF;
	V1 = EMU_ReadU16(A3);
	V0 = ~V0;
	V1 &= V0;
	ZZ_CLOCKCYCLES(14,0x80047D24);
ZZ_47C84_A0:
	EMU_Write16(A3,V1);
	ZZ_CLOCKCYCLES(1,0x80047D28);
ZZ_47C84_A4:
	V0 = 0xFF0000;
	V0 |= 0xFFFF;
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 &= T0;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8004DA8C,ZZ_4DA78_14);
	ZZ_JUMPREGISTER(0x80047C74,ZZ_47C60_14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047C84,0x80047CEC,ZZ_47C84);
ZZ_MARK_TARGET(0x80047CEC,0x80047D24,ZZ_47C84_68);
ZZ_MARK_TARGET(0x80047D24,0x80047D28,ZZ_47C84_A0);
ZZ_MARK_TARGET(0x80047D28,0x80047D38,ZZ_47C84_A4);
