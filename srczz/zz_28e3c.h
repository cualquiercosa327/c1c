#ifdef ZZ_INCLUDE_CODE
ZZ_28E3C:
	SP -= 168;
	EMU_Write32(SP + 152,S6); //+ 0x98
	S6 = A0;
	T0 = A1;
	EMU_Write32(SP + 156,S7); //+ 0x9C
	S7 = A2;
	EMU_Write32(SP + 148,S5); //+ 0x94
	S5 = 0xC4650000;
	S5 |= 0x3601;
	EMU_Write32(SP + 144,S4); //+ 0x90
	S4 = R0;
	EMU_Write32(SP + 160,FP); //+ 0xA0
	FP = R0;
	EMU_Write32(SP + 136,S2); //+ 0x88
	A0 = 0x4000000;
	EMU_Write32(SP + 164,RA); //+ 0xA4
	EMU_Write32(SP + 140,S3); //+ 0x8C
	EMU_Write32(SP + 132,S1); //+ 0x84
	EMU_Write32(SP + 128,S0); //+ 0x80
	EMU_Write32(SP + 96,A3); //+ 0x60
	EMU_Write32(SP + 104,R0); //+ 0x68
	V0 = EMU_ReadU32(S6 + 204); //+ 0xCC
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	V0 &= A0;
	S3 = EMU_ReadU32(V1 + 16); //+ 0x10
	if (!V0)
	{
		S2 = SP + 24;
		ZZ_CLOCKCYCLES(28,0x80028ED4);
		goto ZZ_28E3C_98;
	}
	S2 = SP + 24;
	V0 = S7 & 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(31,0x80028EDC);
		goto ZZ_28E3C_A0;
	}
	V0 = EMU_ReadU32(S6 + 100); //+ 0x64
	V0 = EMU_ReadU32(V0 + 204); //+ 0xCC
	V0 &= A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(38,0x80028EDC);
		goto ZZ_28E3C_A0;
	}
	ZZ_CLOCKCYCLES(38,0x80028ED4);
ZZ_28E3C_98:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x800293D8);
	goto ZZ_28E3C_59C;
ZZ_28E3C_A0:
	V0 = EMU_ReadU32(T0);
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	A0 = EMU_ReadU32(T0 + 8); //+ 0x8
	EMU_Write32(S2,V0);
	EMU_Write32(S2 + 4,V1); //+ 0x4
	EMU_Write32(S2 + 8,A0); //+ 0x8
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 += 25000;
	EMU_Write32(S2 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S2);
	V1 = EMU_ReadU32(S2 + 4); //+ 0x4
	A0 = EMU_ReadU32(S2 + 8); //+ 0x8
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	ZZ_CLOCKCYCLES(16,0x80028F1C);
ZZ_28E3C_E0:
	V0 = EMU_ReadU32(S2);
	V1 = EMU_ReadU32(S2 + 4); //+ 0x4
	A0 = EMU_ReadU32(S2 + 8); //+ 0x8
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 60,V1); //+ 0x3C
	EMU_Write32(SP + 64,A0); //+ 0x40
	V0 = EMU_ReadU32(S3 + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(10,0x80029010);
		goto ZZ_28E3C_1D4;
	}
	S1 = R0;
	S0 = 0x214;
	ZZ_CLOCKCYCLES(11,0x80028F48);
ZZ_28E3C_10C:
	RA = 0x80028F50; //ZZ_28E3C_114
	A0 = S3 + S0;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_28E3C_114:
	T3 = V0;
	V1 = EMU_ReadU32(T3 + 20); //+ 0x14
	A0 = EMU_ReadU32(V1);
	A3 = EMU_ReadU32(S2);
	V0 = A0 << 8;
	V0 = (int32_t)A3 < (int32_t)V0;
	if (V0)
	{
		T2 = R0;
		ZZ_CLOCKCYCLES(9,0x80028FF0);
		goto ZZ_28E3C_1B4;
	}
	T2 = R0;
	A1 = EMU_ReadU32(V1 + 4); //+ 0x4
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = A1 << 8;
	V0 = (int32_t)T0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x80028FF0);
		goto ZZ_28E3C_1B4;
	}
	A2 = EMU_ReadU32(V1 + 8); //+ 0x8
	T1 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = A2 << 8;
	V0 = (int32_t)T1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(21,0x80028FF0);
		goto ZZ_28E3C_1B4;
	}
	V0 = EMU_ReadU32(V1 + 12); //+ 0xC
	V0 += A0;
	V0 <<= 8;
	V0 = (int32_t)A3 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(28,0x80028FF0);
		goto ZZ_28E3C_1B4;
	}
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 += A1;
	V0 <<= 8;
	V0 = (int32_t)T0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(35,0x80028FF0);
		goto ZZ_28E3C_1B4;
	}
	V0 = EMU_ReadU32(V1 + 20); //+ 0x14
	V0 += A2;
	V0 <<= 8;
	T2 = (int32_t)T1 < (int32_t)V0;
	ZZ_CLOCKCYCLES(40,0x80028FF0);
ZZ_28E3C_1B4:
	if (T2)
	{
		A2 = SP + 72;
		ZZ_CLOCKCYCLES(2,0x80029024);
		goto ZZ_28E3C_1E8;
	}
	A2 = SP + 72;
	V0 = EMU_ReadU32(S3 + 528); //+ 0x210
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S0 += 4;
		ZZ_CLOCKCYCLES(7,0x80028F48);
		goto ZZ_28E3C_10C;
	}
	S0 += 4;
	ZZ_CLOCKCYCLES(7,0x8002900C);
ZZ_28E3C_1D0:
	V0 = EMU_ReadU32(S3 + 528); //+ 0x210
	ZZ_CLOCKCYCLES(1,0x80029010);
ZZ_28E3C_1D4:
	if (S1 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x800290A8);
		goto ZZ_28E3C_26C;
	}
	S4 = R0;
	ZZ_CLOCKCYCLES(5,0x800290B0);
	goto ZZ_28E3C_274;
ZZ_28E3C_1E8:
	A0 = EMU_ReadU32(T3 + 20); //+ 0x14
	V0 = EMU_ReadU32(A0);
	V0 <<= 8;
	EMU_Write32(SP + 72,V0); //+ 0x48
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 <<= 8;
	EMU_Write32(SP + 76,V0); //+ 0x4C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 <<= 8;
	EMU_Write32(SP + 80,V0); //+ 0x50
	V0 = EMU_ReadU32(A0 + 12); //+ 0xC
	V0 <<= 8;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 <<= 8;
	EMU_Write32(SP + 88,V0); //+ 0x58
	V0 = EMU_ReadU32(A0 + 20); //+ 0x14
	A3 = S2;
	V0 <<= 8;
	EMU_Write32(SP + 92,V0); //+ 0x5C
	A1 = EMU_ReadU16(A0 + 28); //+ 0x1C
	V0 = S7 & 0x3;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x800290A0; //ZZ_28E3C_264
	EMU_Write32(SP + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(31,0x8002832C);
	goto ZZ_2832C;
ZZ_28E3C_264:
	S4 = V0;
	ZZ_CLOCKCYCLES(2,0x8002900C);
	goto ZZ_28E3C_1D0;
ZZ_28E3C_26C:
	if (!S4)
	{
		ZZ_CLOCKCYCLES(2,0x80028F1C);
		goto ZZ_28E3C_E0;
	}
	ZZ_CLOCKCYCLES(2,0x800290B0);
ZZ_28E3C_274:
	V0 = 0x80060000;
	V0 += 6280;
	V1 = EMU_ReadU32(V0);
	if ((int32_t)V1 <= 0)
	{
		T1 = V0 - 2688;
		ZZ_CLOCKCYCLES(6,0x800292D4);
		goto ZZ_28E3C_498;
	}
	T1 = V0 - 2688;
	if ((int32_t)V1 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(8,0x80029240);
		goto ZZ_28E3C_404;
	}
	S1 = R0;
	T4 = V1;
	A2 = V0 - 2680;
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	T3 = EMU_ReadU32(SP + 48); //+ 0x30
	T2 = EMU_ReadU32(SP + 44); //+ 0x2C
	ZZ_CLOCKCYCLES(13,0x800290E4);
ZZ_28E3C_2A8:
	A3 = EMU_ReadU32(A2 + 16); //+ 0x10
	if (A3 == S6)
	{
		V0 = 0xFFFF;
		ZZ_CLOCKCYCLES(4,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = 0xFFFF;
	V1 = EMU_ReadU32(A3 + 344); //+ 0x158
	if (V1 == V0)
	{
		V0 = S7 & 0x1;
		ZZ_CLOCKCYCLES(8,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = S7 & 0x1;
	if (!V0)
	{
		V0 = S7 & 0x2;
		ZZ_CLOCKCYCLES(10,0x80029194);
		goto ZZ_28E3C_358;
	}
	V0 = S7 & 0x2;
	V0 = EMU_ReadU32(T1);
	A1 = EMU_ReadU32(A2 + 8); //+ 0x8
	V0 = (int32_t)T0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	V0 = (int32_t)V0 < (int32_t)T0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(20,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2);
	V0 = (int32_t)T3 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(25,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)T3;
	if (V0)
	{
		ZZ_CLOCKCYCLES(30,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	A0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = (int32_t)A1 < (int32_t)A0;
	if (V0)
	{
		V0 = (int32_t)S5 < (int32_t)A1;
		ZZ_CLOCKCYCLES(35,0x80029184);
		goto ZZ_28E3C_348;
	}
	V0 = (int32_t)S5 < (int32_t)A1;
	V1 = EMU_ReadU32(A2 - 4); //+ 0xFFFFFFFC
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)S5 < (int32_t)A1;
		ZZ_CLOCKCYCLES(40,0x8002927C);
		goto ZZ_28E3C_440;
	}
	V0 = (int32_t)S5 < (int32_t)A1;
	ZZ_CLOCKCYCLES(40,0x80029184);
ZZ_28E3C_348:
	if (!V0)
	{
		V0 = (int32_t)T2 < (int32_t)A1;
		ZZ_CLOCKCYCLES(2,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = (int32_t)T2 < (int32_t)A1;
	ZZ_CLOCKCYCLES(4,0x8002921C);
	goto ZZ_28E3C_3E0;
ZZ_28E3C_358:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(T1);
	A1 = EMU_ReadU32(A2 + 12); //+ 0xC
	V0 = (int32_t)T0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	V0 = (int32_t)V0 < (int32_t)T0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2 - 4); //+ 0xFFFFFFFC
	V0 = (int32_t)T2 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(17,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V0 = (int32_t)V0 < (int32_t)T2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(22,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	A0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = (int32_t)A1 < (int32_t)A0;
	if (V0)
	{
		V0 = (int32_t)S5 < (int32_t)A1;
		ZZ_CLOCKCYCLES(27,0x80029214);
		goto ZZ_28E3C_3D8;
	}
	V0 = (int32_t)S5 < (int32_t)A1;
	V1 = EMU_ReadU32(A2);
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)S5 < (int32_t)A1;
		ZZ_CLOCKCYCLES(32,0x8002928C);
		goto ZZ_28E3C_450;
	}
	V0 = (int32_t)S5 < (int32_t)A1;
	ZZ_CLOCKCYCLES(32,0x80029214);
ZZ_28E3C_3D8:
	if (!V0)
	{
		V0 = (int32_t)T3 < (int32_t)A1;
		ZZ_CLOCKCYCLES(2,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	V0 = (int32_t)T3 < (int32_t)A1;
	ZZ_CLOCKCYCLES(2,0x8002921C);
ZZ_28E3C_3E0:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002922C);
		goto ZZ_28E3C_3F0;
	}
	FP = A3;
	S5 = A1;
	ZZ_CLOCKCYCLES(4,0x8002922C);
ZZ_28E3C_3F0:
	S1 += 1;
	A2 += 28;
	V0 = (int32_t)S1 < (int32_t)T4;
	if (V0)
	{
		T1 += 28;
		ZZ_CLOCKCYCLES(5,0x800290E4);
		goto ZZ_28E3C_2A8;
	}
	T1 += 28;
	ZZ_CLOCKCYCLES(5,0x80029240);
ZZ_28E3C_404:
	if (!FP)
	{
		V0 = S7 & 0x1;
		ZZ_CLOCKCYCLES(2,0x800292D4);
		goto ZZ_28E3C_498;
	}
	V0 = S7 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002929C);
		goto ZZ_28E3C_460;
	}
	if (!S4)
	{
		ZZ_CLOCKCYCLES(6,0x8002926C);
		goto ZZ_28E3C_430;
	}
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = (int32_t)S5 < (int32_t)V0;
	if (V0)
	{
		V0 = S7 & 0x4;
		ZZ_CLOCKCYCLES(11,0x800292D8);
		goto ZZ_28E3C_49C;
	}
	V0 = S7 & 0x4;
	ZZ_CLOCKCYCLES(11,0x8002926C);
ZZ_28E3C_430:
	S4 = FP;
	T5 = 0x1;
	EMU_Write32(S2 + 4,S5); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x800292D0);
	goto ZZ_28E3C_494;
ZZ_28E3C_440:
	S4 = A3;
	T5 = 0x1;
	EMU_Write32(S2 + 4,V1); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x800292D0);
	goto ZZ_28E3C_494;
ZZ_28E3C_450:
	S4 = A3;
	T5 = 0x1;
	EMU_Write32(S2 + 8,V1); //+ 0x8
	ZZ_CLOCKCYCLES(4,0x800292D0);
	goto ZZ_28E3C_494;
ZZ_28E3C_460:
	V0 = S7 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x800292D4);
		goto ZZ_28E3C_498;
	}
	if (!S4)
	{
		ZZ_CLOCKCYCLES(5,0x800292C4);
		goto ZZ_28E3C_488;
	}
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = (int32_t)S5 < (int32_t)V0;
	if (V0)
	{
		V0 = S7 & 0x4;
		ZZ_CLOCKCYCLES(10,0x800292D8);
		goto ZZ_28E3C_49C;
	}
	V0 = S7 & 0x4;
	ZZ_CLOCKCYCLES(10,0x800292C4);
ZZ_28E3C_488:
	EMU_Write32(S2 + 8,S5); //+ 0x8
	S4 = FP;
	T5 = 0x1;
	ZZ_CLOCKCYCLES(3,0x800292D0);
ZZ_28E3C_494:
	EMU_Write32(SP + 104,T5); //+ 0x68
	ZZ_CLOCKCYCLES(1,0x800292D4);
ZZ_28E3C_498:
	V0 = S7 & 0x4;
	ZZ_CLOCKCYCLES(1,0x800292D8);
ZZ_28E3C_49C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80029324);
		goto ZZ_28E3C_4E8;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26292); //+ 0x66B4
	if (S6 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x80029304);
		goto ZZ_28E3C_4C8;
	}
	V0 = EMU_ReadU32(S6 + 100); //+ 0x64
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(11,0x80029318);
		goto ZZ_28E3C_4DC;
	}
	ZZ_CLOCKCYCLES(11,0x80029304);
ZZ_28E3C_4C8:
	V0 = EMU_ReadU32(S6 + 100); //+ 0x64
	V0 = EMU_ReadU32(V0 + 40); //+ 0x28
	ZZ_CLOCKCYCLES(5,0x8002934C);
	goto ZZ_28E3C_510;
ZZ_28E3C_4DC:
	V0 = EMU_ReadU32(V0 + 40); //+ 0x28
	ZZ_CLOCKCYCLES(3,0x80029360);
	goto ZZ_28E3C_524;
ZZ_28E3C_4E8:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26292); //+ 0x66B4
	if (S6 == V1)
	{
		ZZ_CLOCKCYCLES(5,0x80029348);
		goto ZZ_28E3C_50C;
	}
	V0 = EMU_ReadU32(S6 + 100); //+ 0x64
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(9,0x8002935C);
		goto ZZ_28E3C_520;
	}
	ZZ_CLOCKCYCLES(9,0x80029348);
ZZ_28E3C_50C:
	V0 = EMU_ReadU32(S6 + 40); //+ 0x28
	ZZ_CLOCKCYCLES(1,0x8002934C);
ZZ_28E3C_510:
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = V0 + 840;
	ZZ_CLOCKCYCLES(4,0x80029370);
	goto ZZ_28E3C_534;
ZZ_28E3C_520:
	V0 = EMU_ReadU32(S6 + 40); //+ 0x28
	ZZ_CLOCKCYCLES(1,0x80029360);
ZZ_28E3C_524:
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = V0 + 792;
	ZZ_CLOCKCYCLES(4,0x80029370);
ZZ_28E3C_534:
	if (!S4)
	{
		A2 = -1;
		ZZ_CLOCKCYCLES(2,0x800293B8);
		goto ZZ_28E3C_57C;
	}
	A2 = -1;
	T5 = EMU_ReadU32(SP + 104); //+ 0x68
	if (!T5)
	{
		V0 = S4 & 0x3F0;
		ZZ_CLOCKCYCLES(6,0x800293A4);
		goto ZZ_28E3C_568;
	}
	V0 = S4 & 0x3F0;
	A2 = EMU_ReadU32(S4 + 344); //+ 0x158
	if ((int32_t)A2 >= 0)
	{
		V0 = S7 & 0x4;
		ZZ_CLOCKCYCLES(10,0x800293BC);
		goto ZZ_28E3C_580;
	}
	V0 = S7 & 0x4;
	A2 = -A2;
	EMU_Write32(SP + 96,R0); //+ 0x60
	ZZ_CLOCKCYCLES(13,0x800293BC);
	goto ZZ_28E3C_580;
ZZ_28E3C_568:
	A2 = V0 >> 4;
	V0 = (int32_t)A2 < 39;
	if (!V0)
	{
		V0 = S7 & 0x4;
		ZZ_CLOCKCYCLES(4,0x800293BC);
		goto ZZ_28E3C_580;
	}
	V0 = S7 & 0x4;
	A2 = -1;
	ZZ_CLOCKCYCLES(5,0x800293B8);
ZZ_28E3C_57C:
	V0 = S7 & 0x4;
	ZZ_CLOCKCYCLES(1,0x800293BC);
ZZ_28E3C_580:
	if (!V0)
	{
		V0 = S4;
		ZZ_CLOCKCYCLES(2,0x800293D8);
		goto ZZ_28E3C_59C;
	}
	V0 = S4;
	A1 = EMU_ReadU32(S6 + 100); //+ 0x64
	A3 = EMU_ReadU32(SP + 96); //+ 0x60
	RA = 0x800293D4; //ZZ_28E3C_598
	ZZ_CLOCKCYCLES(6,0x80027F50);
	goto ZZ_27F50;
ZZ_28E3C_598:
	V0 = S4;
	ZZ_CLOCKCYCLES(1,0x800293D8);
ZZ_28E3C_59C:
	RA = EMU_ReadU32(SP + 164); //+ 0xA4
	FP = EMU_ReadU32(SP + 160); //+ 0xA0
	S7 = EMU_ReadU32(SP + 156); //+ 0x9C
	S6 = EMU_ReadU32(SP + 152); //+ 0x98
	S5 = EMU_ReadU32(SP + 148); //+ 0x94
	S4 = EMU_ReadU32(SP + 144); //+ 0x90
	S3 = EMU_ReadU32(SP + 140); //+ 0x8C
	S2 = EMU_ReadU32(SP + 136); //+ 0x88
	S1 = EMU_ReadU32(SP + 132); //+ 0x84
	S0 = EMU_ReadU32(SP + 128); //+ 0x80
	SP += 168;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	//ZZ_JUMPREGISTER(0x80023AFC,ZZ_201DC_3920);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80028E3C,0x80028ED4,ZZ_28E3C);
ZZ_MARK_TARGET(0x80028ED4,0x80028EDC,ZZ_28E3C_98);
ZZ_MARK_TARGET(0x80028EDC,0x80028F1C,ZZ_28E3C_A0);
ZZ_MARK_TARGET(0x80028F1C,0x80028F48,ZZ_28E3C_E0);
ZZ_MARK_TARGET(0x80028F48,0x80028F50,ZZ_28E3C_10C);
ZZ_MARK_TARGET(0x80028F50,0x80028FF0,ZZ_28E3C_114);
ZZ_MARK_TARGET(0x80028FF0,0x8002900C,ZZ_28E3C_1B4);
ZZ_MARK_TARGET(0x8002900C,0x80029010,ZZ_28E3C_1D0);
ZZ_MARK_TARGET(0x80029010,0x80029024,ZZ_28E3C_1D4);
ZZ_MARK_TARGET(0x80029024,0x800290A0,ZZ_28E3C_1E8);
ZZ_MARK_TARGET(0x800290A0,0x800290A8,ZZ_28E3C_264);
ZZ_MARK_TARGET(0x800290A8,0x800290B0,ZZ_28E3C_26C);
ZZ_MARK_TARGET(0x800290B0,0x800290E4,ZZ_28E3C_274);
ZZ_MARK_TARGET(0x800290E4,0x80029184,ZZ_28E3C_2A8);
ZZ_MARK_TARGET(0x80029184,0x80029194,ZZ_28E3C_348);
ZZ_MARK_TARGET(0x80029194,0x80029214,ZZ_28E3C_358);
ZZ_MARK_TARGET(0x80029214,0x8002921C,ZZ_28E3C_3D8);
ZZ_MARK_TARGET(0x8002921C,0x8002922C,ZZ_28E3C_3E0);
ZZ_MARK_TARGET(0x8002922C,0x80029240,ZZ_28E3C_3F0);
ZZ_MARK_TARGET(0x80029240,0x8002926C,ZZ_28E3C_404);
ZZ_MARK_TARGET(0x8002926C,0x8002927C,ZZ_28E3C_430);
ZZ_MARK_TARGET(0x8002927C,0x8002928C,ZZ_28E3C_440);
ZZ_MARK_TARGET(0x8002928C,0x8002929C,ZZ_28E3C_450);
ZZ_MARK_TARGET(0x8002929C,0x800292C4,ZZ_28E3C_460);
ZZ_MARK_TARGET(0x800292C4,0x800292D0,ZZ_28E3C_488);
ZZ_MARK_TARGET(0x800292D0,0x800292D4,ZZ_28E3C_494);
ZZ_MARK_TARGET(0x800292D4,0x800292D8,ZZ_28E3C_498);
ZZ_MARK_TARGET(0x800292D8,0x80029304,ZZ_28E3C_49C);
ZZ_MARK_TARGET(0x80029304,0x80029318,ZZ_28E3C_4C8);
ZZ_MARK_TARGET(0x80029318,0x80029324,ZZ_28E3C_4DC);
ZZ_MARK_TARGET(0x80029324,0x80029348,ZZ_28E3C_4E8);
ZZ_MARK_TARGET(0x80029348,0x8002934C,ZZ_28E3C_50C);
ZZ_MARK_TARGET(0x8002934C,0x8002935C,ZZ_28E3C_510);
ZZ_MARK_TARGET(0x8002935C,0x80029360,ZZ_28E3C_520);
ZZ_MARK_TARGET(0x80029360,0x80029370,ZZ_28E3C_524);
ZZ_MARK_TARGET(0x80029370,0x800293A4,ZZ_28E3C_534);
ZZ_MARK_TARGET(0x800293A4,0x800293B8,ZZ_28E3C_568);
ZZ_MARK_TARGET(0x800293B8,0x800293BC,ZZ_28E3C_57C);
ZZ_MARK_TARGET(0x800293BC,0x800293D4,ZZ_28E3C_580);
ZZ_MARK_TARGET(0x800293D4,0x800293D8,ZZ_28E3C_598);
ZZ_MARK_TARGET(0x800293D8,0x8002940C,ZZ_28E3C_59C);
