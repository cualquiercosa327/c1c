#ifdef ZZ_INCLUDE_CODE
ZZ_15118:
	SP -= 48;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = A1;
	EMU_Write32(SP + 40,S2); //+ 0x28
	V0 = 0x63960000;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	A0 = EMU_ReadU32(S0);
	V0 |= 0x347F;
	if (A0 != V0)
	{
		S2 = A2;
		ZZ_CLOCKCYCLES(12,0x80015150);
		goto ZZ_15118_38;
	}
	S2 = A2;
	V0 = -10;
	ZZ_CLOCKCYCLES(14,0x8001543C);
	goto ZZ_15118_324;
ZZ_15118_38:
	V0 = A0 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80015170);
		goto ZZ_15118_58;
	}
	RA = 0x80015164; //ZZ_15118_4C
	ZZ_CLOCKCYCLES(5,0x80015978);
	goto ZZ_15978;
ZZ_15118_4C:
	EMU_Write32(S0,V0);
	S0 = V0;
	ZZ_CLOCKCYCLES(3,0x80015174);
	goto ZZ_15118_5C;
ZZ_15118_58:
	S0 = A0;
	ZZ_CLOCKCYCLES(1,0x80015174);
ZZ_15118_5C:
	A0 = EMU_ReadU32(S0);
	V0 = A0 & 0x1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001531C);
		goto ZZ_15118_204;
	}
	if (!S2)
	{
		A2 = A0;
		ZZ_CLOCKCYCLES(7,0x80015310);
		goto ZZ_15118_1F8;
	}
	A2 = A0;
	V0 = A2 & 0x2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(10,0x800151F0);
		goto ZZ_15118_D8;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15024); //+ 0xFFFFC550
	if ((int32_t)V0 <= 0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(15,0x800151F0);
		goto ZZ_15118_D8;
	}
	A1 = R0;
	T0 = 0x10000;
	A3 = V0;
	A0 = 0x80060000;
	A0 -= 15020;
	ZZ_CLOCKCYCLES(19,0x800151C0);
ZZ_15118_A8:
	V1 = EMU_ReadU32(A0);
	V0 = (int32_t)A2 < (int32_t)V1;
	if (V0)
	{
		V0 = V1 + T0;
		ZZ_CLOCKCYCLES(5,0x800151E0);
		goto ZZ_15118_C8;
	}
	V0 = V1 + T0;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x800151F4);
		goto ZZ_15118_DC;
	}
	ZZ_CLOCKCYCLES(8,0x800151E0);
ZZ_15118_C8:
	A1 += 1;
	V0 = (int32_t)A1 < (int32_t)A3;
	if (V0)
	{
		A0 += 44;
		ZZ_CLOCKCYCLES(4,0x800151C0);
		goto ZZ_15118_A8;
	}
	A0 += 44;
	ZZ_CLOCKCYCLES(4,0x800151F0);
ZZ_15118_D8:
	A0 = R0;
	ZZ_CLOCKCYCLES(1,0x800151F4);
ZZ_15118_DC:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x80015310);
		goto ZZ_15118_1F8;
	}
	V0 = EMU_ReadU32(S0);
	A0 = EMU_ReadU32(A0 + 20); //+ 0x14
	A1 = EMU_ReadU32(V0 + 4); //+ 0x4
	if (!S1)
	{
		V0 = (int32_t)A0 >> 1;
		ZZ_CLOCKCYCLES(7,0x80015220);
		goto ZZ_15118_108;
	}
	V0 = (int32_t)A0 >> 1;
	RA = 0x80015218; //ZZ_15118_100
	ZZ_CLOCKCYCLES(9,0x80014C08);
	goto ZZ_14C08;
ZZ_15118_100:
	V1 = V0;
	ZZ_CLOCKCYCLES(2,0x800152F4);
	goto ZZ_15118_1DC;
ZZ_15118_108:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = -18;
	if (V1 == V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(8,0x800152A8);
		goto ZZ_15118_190;
	}
	V0 = -255;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(10,0x800152F8);
		goto ZZ_15118_1E0;
	}
	EMU_Write32(V1 + 24,A1); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x800152F8);
	goto ZZ_15118_1E0;
ZZ_15118_138:
	V1 = 0x80030000;
	V1 = EMU_ReadU32(V1 + 17696); //+ 0x4520
	V0 = 0x2;
	EMU_Write16(A2 + 4,V0); //+ 0x4
	V0 = (int32_t)A0 >> 1;
	EMU_Write32(A2 + 20,A0); //+ 0x14
	EMU_Write16(A2 + 10,R0); //+ 0xA
	EMU_Write32(A2 + 24,A1); //+ 0x18
	EMU_Write32(A2 + 40,V1); //+ 0x28
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(V0,A2);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	V0 += 1;
	AT = 0x80060000;
	EMU_Write32(AT - 12376,V0); //+ 0xFFFFCFA8
	V1 = A2;
	ZZ_CLOCKCYCLES(22,0x800152F4);
	goto ZZ_15118_1DC;
ZZ_15118_190:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 14052); //+ 0xFFFFC91C
	V0 = (int32_t)S1 < (int32_t)A2;
	if (!V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(6,0x800152F0);
		goto ZZ_15118_1D8;
	}
	V1 = R0;
	T0 = 0x1;
	A3 = A2;
	A2 = 0x80060000;
	A2 -= 14048;
	ZZ_CLOCKCYCLES(10,0x800152D0);
ZZ_15118_1B8:
	V0 = EMU_ReadS16(A2 + 4); //+ 0x4
	if (V0 == T0)
	{
		ZZ_CLOCKCYCLES(4,0x80015250);
		goto ZZ_15118_138;
	}
	V1 += 1;
	V0 = (int32_t)V1 < (int32_t)A3;
	if (V0)
	{
		A2 += 44;
		ZZ_CLOCKCYCLES(8,0x800152D0);
		goto ZZ_15118_1B8;
	}
	A2 += 44;
	ZZ_CLOCKCYCLES(8,0x800152F0);
ZZ_15118_1D8:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x800152F4);
ZZ_15118_1DC:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x800152F8);
ZZ_15118_1E0:
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(2,0x80015310);
		goto ZZ_15118_1F8;
	}
	V0 = EMU_ReadU16(V1 + 10); //+ 0xA
	V0 += S2;
	EMU_Write16(V1 + 10,V0); //+ 0xA
	ZZ_CLOCKCYCLES(6,0x80015310);
ZZ_15118_1F8:
	V0 = EMU_ReadU32(S0);
	ZZ_CLOCKCYCLES(3,0x8001543C);
	goto ZZ_15118_324;
ZZ_15118_204:
	A1 = EMU_ReadU32(S0 + 4); //+ 0x4
	if (!S1)
	{
		V0 = (int32_t)A0 >> 1;
		ZZ_CLOCKCYCLES(3,0x80015338);
		goto ZZ_15118_220;
	}
	V0 = (int32_t)A0 >> 1;
	RA = 0x80015330; //ZZ_15118_218
	ZZ_CLOCKCYCLES(5,0x80014C08);
	goto ZZ_14C08;
ZZ_15118_218:
	V1 = V0;
	ZZ_CLOCKCYCLES(2,0x80015408);
	goto ZZ_15118_2F0;
ZZ_15118_220:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = -18;
	if (V1 == V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(8,0x800153C0);
		goto ZZ_15118_2A8;
	}
	V0 = -255;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(10,0x8001540C);
		goto ZZ_15118_2F4;
	}
	EMU_Write32(V1 + 24,A1); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x8001540C);
	goto ZZ_15118_2F4;
ZZ_15118_250:
	V1 = 0x80030000;
	V1 = EMU_ReadU32(V1 + 17696); //+ 0x4520
	V0 = 0x2;
	EMU_Write16(A2 + 4,V0); //+ 0x4
	V0 = (int32_t)A0 >> 1;
	EMU_Write32(A2 + 20,A0); //+ 0x14
	EMU_Write16(A2 + 10,R0); //+ 0xA
	EMU_Write32(A2 + 24,A1); //+ 0x18
	EMU_Write32(A2 + 40,V1); //+ 0x28
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(V0,A2);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	V0 += 1;
	AT = 0x80060000;
	EMU_Write32(AT - 12376,V0); //+ 0xFFFFCFA8
	V1 = A2;
	ZZ_CLOCKCYCLES(22,0x80015408);
	goto ZZ_15118_2F0;
ZZ_15118_2A8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 14052); //+ 0xFFFFC91C
	if ((int32_t)V0 <= 0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(5,0x80015404);
		goto ZZ_15118_2EC;
	}
	V1 = R0;
	T0 = 0x1;
	A3 = V0;
	A2 = 0x80060000;
	A2 -= 14048;
	ZZ_CLOCKCYCLES(9,0x800153E4);
ZZ_15118_2CC:
	V0 = EMU_ReadS16(A2 + 4); //+ 0x4
	if (V0 == T0)
	{
		ZZ_CLOCKCYCLES(4,0x80015368);
		goto ZZ_15118_250;
	}
	V1 += 1;
	V0 = (int32_t)V1 < (int32_t)A3;
	if (V0)
	{
		A2 += 44;
		ZZ_CLOCKCYCLES(8,0x800153E4);
		goto ZZ_15118_2CC;
	}
	A2 += 44;
	ZZ_CLOCKCYCLES(8,0x80015404);
ZZ_15118_2EC:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x80015408);
ZZ_15118_2F0:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001540C);
ZZ_15118_2F4:
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(2,0x80015424);
		goto ZZ_15118_30C;
	}
	V0 = EMU_ReadU16(V1 + 10); //+ 0xA
	V0 += S2;
	EMU_Write16(V1 + 10,V0); //+ 0xA
	ZZ_CLOCKCYCLES(6,0x80015424);
ZZ_15118_30C:
	V0 = EMU_ReadU32(S0);
	V1 = V0 & 0x1;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(5,0x8001543C);
		goto ZZ_15118_324;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x8001543C);
ZZ_15118_324:
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80017750,ZZ_1767C_D4);
	ZZ_JUMPREGISTER(0x80025504,ZZ_253A0_164);
	ZZ_JUMPREGISTER(0x80011E78,ZZ_11DD0_A8);
	ZZ_JUMPREGISTER(0x80011E48,ZZ_11DD0_78);
	ZZ_JUMPREGISTER(0x80011E8C,ZZ_11DD0_BC);
	ZZ_JUMPREGISTER(0x80031E6C,ZZ_31D50_11C);
	ZZ_JUMPREGISTER(0x80011FA8,ZZ_11DD0_1D8);
	ZZ_JUMPREGISTER(0x8002E9B0,ZZ_2E98C_24);
  //ZZ_JUMPREGISTER(0x8002329C,ZZ_201DC_30C0);
	ZZ_JUMPREGISTER(0x80011F30,ZZ_11DD0_160);
	ZZ_JUMPREGISTER(0x80011F44,ZZ_11DD0_174);
	ZZ_JUMPREGISTER(0x80011F58,ZZ_11DD0_188);
	ZZ_JUMPREGISTER(0x80025B4C,ZZ_25A60_EC);
	ZZ_JUMPREGISTER(0x80011F7C,ZZ_11DD0_1AC);
	ZZ_JUMPREGISTER(0x80011F90,ZZ_11DD0_1C0);
	ZZ_JUMPREGISTER(0x80033070,ZZ_32FDC_94);
	ZZ_JUMPREGISTER(0x80026850,ZZ_26650_200);
	ZZ_JUMPREGISTER(0x80033370,ZZ_32FDC_394);
	ZZ_JUMPREGISTER(0x80025E9C,ZZ_25A60_43C);
	ZZ_JUMPREGISTER(0x800333D8,ZZ_32FDC_3FC);
	ZZ_JUMPREGISTER(0x80033114,ZZ_32FDC_138);
	ZZ_JUMPREGISTER(0x80033214,ZZ_32FDC_238);
	
	ZZ_JUMPREGISTER(0x800315E4,ZZ_314C4_120);
	ZZ_JUMPREGISTER(0x80031568,ZZ_314C4_A4);
	ZZ_JUMPREGISTER(0x800315B0,ZZ_314C4_EC);
	ZZ_JUMPREGISTER(0x8003166C,ZZ_314C4_1A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80015118,0x80015150,ZZ_15118);
ZZ_MARK_TARGET(0x80015150,0x80015164,ZZ_15118_38);
ZZ_MARK_TARGET(0x80015164,0x80015170,ZZ_15118_4C);
ZZ_MARK_TARGET(0x80015170,0x80015174,ZZ_15118_58);
ZZ_MARK_TARGET(0x80015174,0x800151C0,ZZ_15118_5C);
ZZ_MARK_TARGET(0x800151C0,0x800151E0,ZZ_15118_A8);
ZZ_MARK_TARGET(0x800151E0,0x800151F0,ZZ_15118_C8);
ZZ_MARK_TARGET(0x800151F0,0x800151F4,ZZ_15118_D8);
ZZ_MARK_TARGET(0x800151F4,0x80015218,ZZ_15118_DC);
ZZ_MARK_TARGET(0x80015218,0x80015220,ZZ_15118_100);
ZZ_MARK_TARGET(0x80015220,0x80015250,ZZ_15118_108);
ZZ_MARK_TARGET(0x80015250,0x800152A8,ZZ_15118_138);
ZZ_MARK_TARGET(0x800152A8,0x800152D0,ZZ_15118_190);
ZZ_MARK_TARGET(0x800152D0,0x800152F0,ZZ_15118_1B8);
ZZ_MARK_TARGET(0x800152F0,0x800152F4,ZZ_15118_1D8);
ZZ_MARK_TARGET(0x800152F4,0x800152F8,ZZ_15118_1DC);
ZZ_MARK_TARGET(0x800152F8,0x80015310,ZZ_15118_1E0);
ZZ_MARK_TARGET(0x80015310,0x8001531C,ZZ_15118_1F8);
ZZ_MARK_TARGET(0x8001531C,0x80015330,ZZ_15118_204);
ZZ_MARK_TARGET(0x80015330,0x80015338,ZZ_15118_218);
ZZ_MARK_TARGET(0x80015338,0x80015368,ZZ_15118_220);
ZZ_MARK_TARGET(0x80015368,0x800153C0,ZZ_15118_250);
ZZ_MARK_TARGET(0x800153C0,0x800153E4,ZZ_15118_2A8);
ZZ_MARK_TARGET(0x800153E4,0x80015404,ZZ_15118_2CC);
ZZ_MARK_TARGET(0x80015404,0x80015408,ZZ_15118_2EC);
ZZ_MARK_TARGET(0x80015408,0x8001540C,ZZ_15118_2F0);
ZZ_MARK_TARGET(0x8001540C,0x80015424,ZZ_15118_2F4);
ZZ_MARK_TARGET(0x80015424,0x8001543C,ZZ_15118_30C);
ZZ_MARK_TARGET(0x8001543C,0x80015458,ZZ_15118_324);
