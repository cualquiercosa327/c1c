#ifdef ZZ_INCLUDE_CODE
ZZ_326D8:
	SP -= 96;
	EMU_Write32(SP + 84,S5); //+ 0x54
	S5 = A0;
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	EMU_Write32(SP + 88,RA); //+ 0x58
	EMU_Write32(SP + 80,S4); //+ 0x50
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 68,S1); //+ 0x44
	EMU_Write32(SP + 64,S0); //+ 0x40
	V1 = EMU_ReadU32(A0 + 13720); //+ 0x3598
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(14,0x80032730);
		goto ZZ_326D8_58;
	}
	if (!V1)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(16,0x80032728);
		goto ZZ_326D8_50;
	}
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(18,0x800327A8);
		goto ZZ_326D8_D0;
	}
	V0 = 0x6;
	ZZ_CLOCKCYCLES(20,0x800327B8);
	goto ZZ_326D8_E0;
ZZ_326D8_50:
	EMU_Write32(A0 + 13732,R0); //+ 0x35A4
	EMU_Write32(A0 + 13728,R0); //+ 0x35A0
	ZZ_CLOCKCYCLES(2,0x80032730);
ZZ_326D8_58:
	V1 = 0x80060000;
	V1 += 6300;
	V0 = EMU_ReadU32(V1);
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	S0 = 0x120;
	AT = 0x80060000;
	EMU_Write32(AT + 6708,S0); //+ 0x1A34
	V0 |= 0xC;
	EMU_Write32(V1,V0);
	V0 = 0x6;
	EMU_Write32(A0 + 13720,V0); //+ 0x3598
	V0 = EMU_ReadU32(V1);
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x80032798);
		goto ZZ_326D8_C0;
	}
	A1 = EMU_ReadU32(A0 + 20); //+ 0x14
	A2 = EMU_ReadU32(A0 + 24); //+ 0x18
	RA = 0x80032780; //ZZ_326D8_A8
	ZZ_CLOCKCYCLES(20,0x80032BB4);
	goto ZZ_32BB4;
ZZ_326D8_A8:
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	A1 = EMU_ReadU32(A0 + 20); //+ 0x14
	A2 = EMU_ReadU32(A0 + 24); //+ 0x18
	RA = 0x80032798; //ZZ_326D8_C0
	ZZ_CLOCKCYCLES(6,0x80032DFC);
	goto ZZ_32DFC;
ZZ_326D8_C0:
	AT = 0x80060000;
	EMU_Write32(AT + 6708,S0); //+ 0x1A34
	ZZ_CLOCKCYCLES(4,0x800327B8);
	goto ZZ_326D8_E0;
ZZ_326D8_D0:
	EMU_Write32(A0 + 13720,V0); //+ 0x3598
	V0 = 0x120;
	AT = 0x80060000;
	EMU_Write32(AT + 6708,V0); //+ 0x1A34
	ZZ_CLOCKCYCLES(4,0x800327B8);
ZZ_326D8_E0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6320); //+ 0x18B0
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80032930);
		goto ZZ_326D8_258;
	}
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = EMU_ReadU32(V1 + 13724); //+ 0x359C
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80032930);
		goto ZZ_326D8_258;
	}
	S4 = R0;
	S1 = V1 + 6364;
	S3 = 0x80;
	ZZ_CLOCKCYCLES(15,0x800327F4);
ZZ_326D8_11C:
	S2 = R0;
	ZZ_CLOCKCYCLES(1,0x800327F8);
ZZ_326D8_120:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31732); //+ 0xFFFF840C
	S0 = EMU_ReadU32(V1 + 120); //+ 0x78
	A0 = S0;
	V0 = S0 + 16;
	RA = 0x8003281C; //ZZ_326D8_144
	EMU_Write32(V1 + 120,V0); //+ 0x78
	ZZ_CLOCKCYCLES(9,0x8003F8F4);
	goto ZZ_3F8F4;
ZZ_326D8_144:
	V0 = EMU_ReadU32(S1);
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 <<= 15;
	V0 = (int32_t)V0 >> 23;
	V1 = EMU_ReadU16(A0 + 20); //+ 0x14
	V0 <<= 4;
	V0 = V0 - V1;
	V0 -= 256;
	EMU_Write16(S0 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU16(A0 + 24); //+ 0x18
	V0 <<= 7;
	V0 = (int32_t)V0 >> 24;
	V0 <<= 4;
	V0 = V0 - V1;
	V0 -= 120;
	EMU_Write16(S0 + 10,V0); //+ 0xA
	V0 = EMU_ReadU8(S1);
	V0 &= 0xF;
	V0 <<= 4;
	EMU_Write8(S0 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S1);
	A1 = S0;
	EMU_Write8(S0 + 4,S3); //+ 0x4
	EMU_Write8(S0 + 5,S3); //+ 0x5
	EMU_Write8(S0 + 6,S3); //+ 0x6
	V0 &= 0xF0;
	EMU_Write8(S0 + 13,V0); //+ 0xD
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 &= 0x1FF;
	V0 <<= 1;
	V0 += V1;
	V0 = EMU_ReadU16(V0 + 12704); //+ 0x31A0
	A0 = S5;
	RA = 0x800328B4; //ZZ_326D8_1DC
	EMU_Write16(A1 + 14,V0); //+ 0xE
	ZZ_CLOCKCYCLES(38,0x8003F73C);
	goto ZZ_3F73C;
ZZ_326D8_1DC:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31732); //+ 0xFFFF840C
	S2 += 1;
	A1 = EMU_ReadU32(V1 + 120); //+ 0x78
	A0 = S5;
	V0 = A1 + 12;
	EMU_Write32(V1 + 120,V0); //+ 0x78
	V1 = EMU_ReadU32(S1);
	V1 >>= 25;
	V1 &= 0x3;
	V0 = V1 << 1;
	V0 += V1;
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 <<= 2;
	V0 += V1;
	V1 = EMU_ReadU32(V0 + 13672); //+ 0x3568
	A2 = EMU_ReadU32(V0 + 13676); //+ 0x356C
	A3 = EMU_ReadU32(V0 + 13680); //+ 0x3570
	EMU_Write32(A1,V1);
	EMU_Write32(A1 + 4,A2); //+ 0x4
	EMU_Write32(A1 + 8,A3); //+ 0x8
	RA = 0x80032914; //ZZ_326D8_23C
	S1 += 12;
	ZZ_CLOCKCYCLES(24,0x8003F73C);
	goto ZZ_3F73C;
ZZ_326D8_23C:
	V0 = (int32_t)S2 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x800327F8);
		goto ZZ_326D8_120;
	}
	S4 += 1;
	V0 = (int32_t)S4 < 16;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x800327F4);
		goto ZZ_326D8_11C;
	}
	ZZ_CLOCKCYCLES(7,0x80032930);
ZZ_326D8_258:
	A1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V1 = EMU_ReadU32(A1 + 13720); //+ 0x3598
	V0 = 0x5;
	if (V1 == V0)
	{
		V0 = V1 < 6;
		ZZ_CLOCKCYCLES(6,0x80032968);
		goto ZZ_326D8_290;
	}
	V0 = V1 < 6;
	if (V0)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(8,0x80032A2C);
		goto ZZ_326D8_354;
	}
	V0 = 0x6;
	if (V1 == V0)
	{
		V0 = 0x7;
		ZZ_CLOCKCYCLES(10,0x800329A8);
		goto ZZ_326D8_2D0;
	}
	V0 = 0x7;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(12,0x800329C4);
		goto ZZ_326D8_2EC;
	}
	ZZ_CLOCKCYCLES(14,0x80032A2C);
	goto ZZ_326D8_354;
ZZ_326D8_290:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6708); //+ 0x1A34
	if (V0)
	{
		V0 = 0x7;
		ZZ_CLOCKCYCLES(5,0x80032A2C);
		goto ZZ_326D8_354;
	}
	V0 = 0x7;
	EMU_Write32(A1 + 13720,V0); //+ 0x3598
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6300); //+ 0x189C
	V1 = -13;
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 6300,V0); //+ 0x189C
	RA = 0x800329A0; //ZZ_326D8_2C8
	A0 = 0xFF;
	ZZ_CLOCKCYCLES(14,0x80017448);
	goto ZZ_17448;
ZZ_326D8_2C8:
	ZZ_CLOCKCYCLES(2,0x80032A2C);
	goto ZZ_326D8_354;
ZZ_326D8_2D0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6708); //+ 0x1A34
	if (V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(5,0x80032A2C);
		goto ZZ_326D8_354;
	}
	V0 = 0x3;
	EMU_Write32(A1 + 13720,V0); //+ 0x3598
	ZZ_CLOCKCYCLES(7,0x80032A2C);
	goto ZZ_326D8_354;
ZZ_326D8_2EC:
	A0 = 0x80020000;
	A0 -= 18132;
	A1 = 0x80020000;
	A1 -= 11808;
	RA = 0x800329DC; //ZZ_326D8_304
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x8001BA18);
	goto ZZ_1BA18;
ZZ_326D8_304:
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = EMU_ReadU32(V1 + 13724); //+ 0x359C
	if (!V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(6,0x80032A00);
		goto ZZ_326D8_328;
	}
	A1 = R0;
	A0 = EMU_ReadU32(V1 + 13776); //+ 0x35D0
	RA = 0x80032A00; //ZZ_326D8_328
	A2 = -1;
	ZZ_CLOCKCYCLES(9,0x80032FDC);
	goto ZZ_32FDC;
ZZ_326D8_328:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	A0 = 0xFF;
	A1 = EMU_ReadU32(V0 + 13780); //+ 0x35D4
	V1 = 0x1;
	EMU_Write32(V0 + 13720,V1); //+ 0x3598
	RA = 0x80032A1C; //ZZ_326D8_344
	EMU_Write32(V0 + 13776,A1); //+ 0x35D0
	ZZ_CLOCKCYCLES(7,0x80017448);
	goto ZZ_17448;
ZZ_326D8_344:
	RA = 0x80032A24; //ZZ_326D8_34C
	ZZ_CLOCKCYCLES(2,0x80031EB4);
	goto ZZ_31EB4;
ZZ_326D8_34C:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80032ACC);
	goto ZZ_326D8_3F4;
ZZ_326D8_354:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6356); //+ 0x18D4
	V0 = EMU_ReadU32(V0 + 13780); //+ 0x35D4
	if (V1 == V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(7,0x80032ACC);
		goto ZZ_326D8_3F4;
	}
	V0 = R0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25600); //+ 0x6400
	S0 = 0x80060000;
	S0 = EMU_ReadU32(S0 + 6356); //+ 0x18D4
	if (!V0)
	{
		V1 = SP + 56;
		ZZ_CLOCKCYCLES(13,0x80032AA4);
		goto ZZ_326D8_3CC;
	}
	V1 = SP + 56;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6332); //+ 0x18BC
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(18,0x80032AA4);
		goto ZZ_326D8_3CC;
	}
	A0 = R0;
	A2 = 0xC00;
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 6332); //+ 0x18BC
	A3 = 0x1;
	EMU_Write32(SP + 56,R0); //+ 0x38
	RA = 0x80032A90; //ZZ_326D8_3B8
	EMU_Write32(SP + 16,V1); //+ 0x10
	ZZ_CLOCKCYCLES(25,0x80024040);
	goto ZZ_24040;
ZZ_326D8_3B8:
	V0 = -1;
	AT = 0x80050000;
	EMU_Write32(AT + 25612,V0); //+ 0x640C
	AT = 0x80050000;
	EMU_Write32(AT + 25600,R0); //+ 0x6400
	ZZ_CLOCKCYCLES(5,0x80032AA4);
ZZ_326D8_3CC:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V1 = -256;
	AT = 0x80060000;
	EMU_Write32(AT + 6708,V1); //+ 0x1A34
	V1 = 0x5;
	AT = 0x80060000;
	EMU_Write32(AT + 6356,S0); //+ 0x18D4
	EMU_Write32(V0 + 13780,S0); //+ 0x35D4
	EMU_Write32(V0 + 13720,V1); //+ 0x3598
	V0 = R0;
	ZZ_CLOCKCYCLES(10,0x80032ACC);
ZZ_326D8_3F4:
	RA = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800326D8,0x80032728,ZZ_326D8);
ZZ_MARK_TARGET(0x80032728,0x80032730,ZZ_326D8_50);
ZZ_MARK_TARGET(0x80032730,0x80032780,ZZ_326D8_58);
ZZ_MARK_TARGET(0x80032780,0x80032798,ZZ_326D8_A8);
ZZ_MARK_TARGET(0x80032798,0x800327A8,ZZ_326D8_C0);
ZZ_MARK_TARGET(0x800327A8,0x800327B8,ZZ_326D8_D0);
ZZ_MARK_TARGET(0x800327B8,0x800327F4,ZZ_326D8_E0);
ZZ_MARK_TARGET(0x800327F4,0x800327F8,ZZ_326D8_11C);
ZZ_MARK_TARGET(0x800327F8,0x8003281C,ZZ_326D8_120);
ZZ_MARK_TARGET(0x8003281C,0x800328B4,ZZ_326D8_144);
ZZ_MARK_TARGET(0x800328B4,0x80032914,ZZ_326D8_1DC);
ZZ_MARK_TARGET(0x80032914,0x80032930,ZZ_326D8_23C);
ZZ_MARK_TARGET(0x80032930,0x80032968,ZZ_326D8_258);
ZZ_MARK_TARGET(0x80032968,0x800329A0,ZZ_326D8_290);
ZZ_MARK_TARGET(0x800329A0,0x800329A8,ZZ_326D8_2C8);
ZZ_MARK_TARGET(0x800329A8,0x800329C4,ZZ_326D8_2D0);
ZZ_MARK_TARGET(0x800329C4,0x800329DC,ZZ_326D8_2EC);
ZZ_MARK_TARGET(0x800329DC,0x80032A00,ZZ_326D8_304);
ZZ_MARK_TARGET(0x80032A00,0x80032A1C,ZZ_326D8_328);
ZZ_MARK_TARGET(0x80032A1C,0x80032A24,ZZ_326D8_344);
ZZ_MARK_TARGET(0x80032A24,0x80032A2C,ZZ_326D8_34C);
ZZ_MARK_TARGET(0x80032A2C,0x80032A90,ZZ_326D8_354);
ZZ_MARK_TARGET(0x80032A90,0x80032AA4,ZZ_326D8_3B8);
ZZ_MARK_TARGET(0x80032AA4,0x80032ACC,ZZ_326D8_3CC);
ZZ_MARK_TARGET(0x80032ACC,0x80032AF4,ZZ_326D8_3F4);
