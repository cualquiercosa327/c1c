#ifdef ZZ_INCLUDE_CODE
ZZ_40484:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	A0 = 0x80010000;
	A0 += 4764;
	EMU_Write32(SP + 24,RA); //+ 0x18
	RA = 0x800404AC; //ZZ_40484_28
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x800402C8);
	goto ZZ_402C8;
ZZ_40484_28:
	A1 = S0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19044); //+ 0x4A64
	A2 = 0x8;
	A0 = EMU_ReadU32(V0 + 32); //+ 0x20
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800404D0; //ZZ_40484_4C
	A3 = S1;
	ZZ_CLOCKCYCLES_JR(9);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800404C8)
	ZZ_JUMPREGISTER_END();
ZZ_40484_4C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80013118,ZZ_12F10_208);
	ZZ_JUMPREGISTER(0x80032468,ZZ_322CC_19C);
	ZZ_JUMPREGISTER(0x8003F378,ZZ_3F338_40);
	ZZ_JUMPREGISTER(0x80032F88,ZZ_32DFC_18C);
	ZZ_JUMPREGISTER(0x8001A920,ZZ_1A850_D0);
	ZZ_JUMPREGISTER(0x8001AA30,ZZ_1A850_1E0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80040484,0x800404AC,ZZ_40484);
ZZ_MARK_TARGET(0x800404AC,0x800404D0,ZZ_40484_28);
ZZ_MARK_TARGET(0x800404D0,0x800404E8,ZZ_40484_4C);
