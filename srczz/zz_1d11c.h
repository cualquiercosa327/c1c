#ifdef ZZ_INCLUDE_CODE
ZZ_1D11C:
	SP -= 40;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 32,RA); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	V0 = EMU_ReadU32(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8001D1C4);
		goto ZZ_1D11C_A8;
	}
	S1 = EMU_ReadU32(S0 + 40); //+ 0x28
	if (S1 != A1)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(13,0x8001D1C8);
		goto ZZ_1D11C_AC;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S0 + 204); //+ 0xCC
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(18,0x8001D1C8);
		goto ZZ_1D11C_AC;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S0 + 288); //+ 0x120
	V1 = 0x40000;
	V0 &= V1;
	if (V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(23,0x8001D1C8);
		goto ZZ_1D11C_AC;
	}
	V0 = -255;
	A0 = R0;
	A1 = S0;
	A2 = 0x1A00;
	A3 = R0;
	RA = 0x8001D190; //ZZ_1D11C_74
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(29,0x80024040);
	goto ZZ_24040;
ZZ_1D11C_74:
	V0 = EMU_ReadU32(S0 + 40); //+ 0x28
	if (V0 == S1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8001D1B4);
		goto ZZ_1D11C_98;
	}
	A0 = S0;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31000); //+ 0x7918
	V0 = -1;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(9,0x8001D1C8);
		goto ZZ_1D11C_AC;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(9,0x8001D1B4);
ZZ_1D11C_98:
	RA = 0x8001D1BC; //ZZ_1D11C_A0
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x8001CDD0);
	goto ZZ_1CDD0;
ZZ_1D11C_A0:
	ZZ_CLOCKCYCLES(2,0x8001D1C8);
	goto ZZ_1D11C_AC;
ZZ_1D11C_A8:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001D1C8);
ZZ_1D11C_AC:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8001B9D0,ZZ_1B92C_A4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001D11C,0x8001D190,ZZ_1D11C);
ZZ_MARK_TARGET(0x8001D190,0x8001D1B4,ZZ_1D11C_74);
ZZ_MARK_TARGET(0x8001D1B4,0x8001D1BC,ZZ_1D11C_98);
ZZ_MARK_TARGET(0x8001D1BC,0x8001D1C4,ZZ_1D11C_A0);
ZZ_MARK_TARGET(0x8001D1C4,0x8001D1C8,ZZ_1D11C_A8);
ZZ_MARK_TARGET(0x8001D1C8,0x8001D1E0,ZZ_1D11C_AC);
