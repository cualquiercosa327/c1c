#ifdef ZZ_INCLUDE_CODE
ZZ_25A60:
	SP -= 160;
	EMU_Write32(SP + 156,RA); //+ 0x9C
	EMU_Write32(SP + 152,FP); //+ 0x98
	EMU_Write32(SP + 148,S7); //+ 0x94
	EMU_Write32(SP + 144,S6); //+ 0x90
	EMU_Write32(SP + 140,S5); //+ 0x8C
	EMU_Write32(SP + 136,S4); //+ 0x88
	EMU_Write32(SP + 132,S3); //+ 0x84
	EMU_Write32(SP + 128,S2); //+ 0x80
	EMU_Write32(SP + 124,S1); //+ 0x7C
	EMU_Write32(SP + 120,S0); //+ 0x78
	EMU_Write32(SP + 40,A0); //+ 0x28
	EMU_Write32(SP + 48,A1); //+ 0x30
	EMU_Write32(SP + 56,A2); //+ 0x38
	if (!A1)
	{
		EMU_Write32(SP + 64,A3); //+ 0x40
		ZZ_CLOCKCYCLES(16,0x80026070);
		goto ZZ_25A60_610;
	}
	EMU_Write32(SP + 64,A3); //+ 0x40
	if (!A0)
	{
		ZZ_CLOCKCYCLES(18,0x80026070);
		goto ZZ_25A60_610;
	}
	V0 = EMU_ReadU16(A1 + 30); //+ 0x1E
	V0 <<= 8;
	V1 = V0 - 1;
	V0 = (int32_t)A2 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(25,0x80025AD8);
		goto ZZ_25A60_78;
	}
	V1 = EMU_ReadU32(SP + 56); //+ 0x38
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(29,0x80025AD8);
		goto ZZ_25A60_78;
	}
	V1 = R0;
	ZZ_CLOCKCYCLES(30,0x80025AD8);
ZZ_25A60_78:
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	V0 = EMU_ReadU32(T0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0);
	if (!V0)
	{
		EMU_Write32(SP + 56,V1); //+ 0x38
		ZZ_CLOCKCYCLES(8,0x80025CB8);
		goto ZZ_25A60_258;
	}
	EMU_Write32(SP + 56,V1); //+ 0x38
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	if (V0 != T0)
	{
		A1 = 0x1;
		ZZ_CLOCKCYCLES(13,0x80025B40);
		goto ZZ_25A60_E0;
	}
	A1 = 0x1;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	if (T0 != V0)
	{
		ZZ_CLOCKCYCLES(19,0x80025B40);
		goto ZZ_25A60_E0;
	}
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31008); //+ 0x7920
	T0 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = (int32_t)A0 >> 8;
	V0 = (int32_t)T0 >> 8;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(26,0x80025CA8);
		goto ZZ_25A60_248;
	}
	ZZ_CLOCKCYCLES(26,0x80025B40);
ZZ_25A60_E0:
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	RA = 0x80025B4C; //ZZ_25A60_EC
	A2 = 0x1;
	ZZ_CLOCKCYCLES(3,0x80015118);
	goto ZZ_15118;
ZZ_25A60_EC:
	T0 = EMU_ReadU32(SP + 56); //+ 0x38
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 31008); //+ 0x7920
	A0 = (int32_t)T0 >> 8;
	V1 = T0 - A2;
	S0 = (int32_t)V1 >> 8;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	if (T0 != V1)
	{
		S1 = V0;
		ZZ_CLOCKCYCLES(12,0x80025BAC);
		goto ZZ_25A60_14C;
	}
	S1 = V0;
	if ((int32_t)S0 >= 0)
	{
		A1 = S0;
		ZZ_CLOCKCYCLES(14,0x80025B88);
		goto ZZ_25A60_128;
	}
	A1 = S0;
	A1 = -A1;
	ZZ_CLOCKCYCLES(15,0x80025B88);
ZZ_25A60_128:
	V0 = (int32_t)A0 < (int32_t)A1;
	if (V0)
	{
		V1 = A0 + 1;
		ZZ_CLOCKCYCLES(3,0x80025BAC);
		goto ZZ_25A60_14C;
	}
	V1 = A0 + 1;
	V0 = EMU_ReadU16(T0 + 30); //+ 0x1E
	V0 = V0 - V1;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80025C1C);
		goto ZZ_25A60_1BC;
	}
	ZZ_CLOCKCYCLES(9,0x80025BAC);
ZZ_25A60_14C:
	V0 = EMU_ReadU32(GP + 772); //+ 0x304
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	A2 = EMU_ReadU32(GP + 704); //+ 0x2C0
	V1 = EMU_ReadU16(T0 + 30); //+ 0x1E
	EMU_Write32(GP + 704,V0); //+ 0x2C0
	EMU_Write32(GP + 772,A2); //+ 0x304
	V0 = V1 >> 1;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(10,0x80025BF0);
		goto ZZ_25A60_190;
	}
	V0 = V1 << 2;
	A0 = EMU_ReadU32(S1 + 16); //+ 0x10
	A1 = EMU_ReadU32(GP + 700); //+ 0x2BC
	RA = 0x80025BE4; //ZZ_25A60_184
	A3 = 0x1;
	ZZ_CLOCKCYCLES(14,0x80029B0C);
	goto ZZ_29B0C;
ZZ_25A60_184:
	EMU_Write32(GP + 700,V0); //+ 0x2BC
	A0 = R0;
	ZZ_CLOCKCYCLES(3,0x80025C20);
	goto ZZ_25A60_1C0;
ZZ_25A60_190:
	V0 += S1;
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A1 = EMU_ReadU32(GP + 700); //+ 0x2BC
	RA = 0x80025C04; //ZZ_25A60_1A4
	A3 = R0;
	ZZ_CLOCKCYCLES(5,0x80029B0C);
	goto ZZ_29B0C;
ZZ_25A60_1A4:
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	V1 = EMU_ReadU16(T0 + 30); //+ 0x1E
	EMU_Write32(GP + 700,V0); //+ 0x2BC
	A0 = V1 - 1;
	ZZ_CLOCKCYCLES(6,0x80025C20);
	goto ZZ_25A60_1C0;
ZZ_25A60_1BC:
	A0 = (int32_t)A2 >> 8;
	ZZ_CLOCKCYCLES(1,0x80025C20);
ZZ_25A60_1C0:
	T0 = EMU_ReadU32(SP + 56); //+ 0x38
	V0 = (int32_t)T0 >> 8;
	S0 = V0 - A0;
	if (!S0)
	{
		V0 = A0 << 2;
		ZZ_CLOCKCYCLES(6,0x80025C94);
		goto ZZ_25A60_234;
	}
	V0 = A0 << 2;
	S1 += V0;
	ZZ_CLOCKCYCLES(7,0x80025C3C);
ZZ_25A60_1DC:
	V0 = EMU_ReadU32(GP + 772); //+ 0x304
	A2 = EMU_ReadU32(GP + 704); //+ 0x2C0
	EMU_Write32(GP + 704,V0); //+ 0x2C0
	EMU_Write32(GP + 772,A2); //+ 0x304
	if ((int32_t)S0 <= 0)
	{
		A3 = 0x1;
		ZZ_CLOCKCYCLES(6,0x80025C68);
		goto ZZ_25A60_208;
	}
	A3 = 0x1;
	S1 += 4;
	A0 = EMU_ReadU32(S1 + 16); //+ 0x10
	A1 = EMU_ReadU32(GP + 700); //+ 0x2BC
	S0 -= 1;
	ZZ_CLOCKCYCLES(11,0x80025C80);
	goto ZZ_25A60_220;
ZZ_25A60_208:
	V0 = S1;
	S1 -= 4;
	A3 = R0;
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A1 = EMU_ReadU32(GP + 700); //+ 0x2BC
	S0 += 1;
	ZZ_CLOCKCYCLES(6,0x80025C80);
ZZ_25A60_220:
	RA = 0x80025C88; //ZZ_25A60_228
	ZZ_CLOCKCYCLES(2,0x80029B0C);
	goto ZZ_29B0C;
ZZ_25A60_228:
	EMU_Write32(GP + 700,V0); //+ 0x2BC
	if (S0)
	{
		ZZ_CLOCKCYCLES(3,0x80025C3C);
		goto ZZ_25A60_1DC;
	}
	ZZ_CLOCKCYCLES(3,0x80025C94);
ZZ_25A60_234:
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	RA = 0x80025CA0; //ZZ_25A60_240
	A1 = 0x1;
	ZZ_CLOCKCYCLES(3,0x80015458);
	goto ZZ_15458;
ZZ_25A60_240:
	ZZ_CLOCKCYCLES(2,0x80025CB8);
	goto ZZ_25A60_258;
ZZ_25A60_248:
	if (A0 == T0)
	{
		ZZ_CLOCKCYCLES(2,0x80026070);
		goto ZZ_25A60_610;
	}
	ZZ_CLOCKCYCLES(4,0x80025FF8);
	goto ZZ_25A60_598;
ZZ_25A60_258:
	V0 = 0x80050000;
	V0 += 30996;
	A0 = EMU_ReadU32(V0);
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	if (A0 == T0)
	{
		T0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x80025FDC);
		goto ZZ_25A60_57C;
	}
	T0 = 0x1;
	EMU_Write32(SP + 72,T0); //+ 0x48
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6352); //+ 0x18D0
	S6 = EMU_ReadU32(T0 + 16); //+ 0x10
	V0 = 0x600;
	AT = 0x80060000;
	EMU_Write32(AT + 6552,R0); //+ 0x1998
	if (V1 != V0)
	{
		FP = R0;
		ZZ_CLOCKCYCLES(17,0x80025D10);
		goto ZZ_25A60_2B0;
	}
	FP = R0;
	T0 = EMU_ReadU32(SP + 64); //+ 0x40
	V0 = T0 & 0x2;
	V0 = R0 < V0;
	EMU_Write32(SP + 72,V0); //+ 0x48
	ZZ_CLOCKCYCLES(22,0x80025D10);
ZZ_25A60_2B0:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x80025DF8);
		goto ZZ_25A60_398;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	T0 = EMU_ReadU32(SP + 64); //+ 0x40
	FP = EMU_ReadU32(V0 + 16); //+ 0x10
	T0 &= 0x2;
	EMU_Write32(SP + 72,T0); //+ 0x48
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	AT = 0x80050000;
	EMU_Write32(AT + 31000,T0); //+ 0x7918
	V0 = EMU_ReadU32(FP + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S4 = R0;
		ZZ_CLOCKCYCLES(15,0x80025DF8);
		goto ZZ_25A60_398;
	}
	S4 = R0;
	S7 = 0x214;
	ZZ_CLOCKCYCLES(16,0x80025D50);
ZZ_25A60_2F0:
	RA = 0x80025D58; //ZZ_25A60_2F8
	A0 = FP + S7;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_25A60_2F8:
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	S2 = EMU_ReadU32(T0 + 16); //+ 0x10
	S3 = V0;
	V0 = EMU_ReadU32(S2 + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(8,0x80025DA4);
		goto ZZ_25A60_344;
	}
	S1 = R0;
	S5 = 0x1;
	S0 = 0x214;
	ZZ_CLOCKCYCLES(10,0x80025D80);
ZZ_25A60_320:
	RA = 0x80025D88; //ZZ_25A60_328
	A0 = S2 + S0;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_25A60_328:
	if (V0 == S3)
	{
		ZZ_CLOCKCYCLES(2,0x80025DA8);
		goto ZZ_25A60_348;
	}
	V0 = EMU_ReadU32(S2 + 528); //+ 0x210
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S0 += 4;
		ZZ_CLOCKCYCLES(7,0x80025D80);
		goto ZZ_25A60_320;
	}
	S0 += 4;
	ZZ_CLOCKCYCLES(7,0x80025DA4);
ZZ_25A60_344:
	S5 = R0;
	ZZ_CLOCKCYCLES(1,0x80025DA8);
ZZ_25A60_348:
	if (S5)
	{
		S7 += 4;
		ZZ_CLOCKCYCLES(2,0x80025DE4);
		goto ZZ_25A60_384;
	}
	S7 += 4;
	S0 = EMU_ReadU32(S3 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0 + 732); //+ 0x2DC
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80025DE4);
		goto ZZ_25A60_384;
	}
	RA = 0x80025DD4; //ZZ_25A60_374
	A0 = S3;
	ZZ_CLOCKCYCLES(11,0x8001D200);
	goto ZZ_1D200;
ZZ_25A60_374:
	V0 = EMU_ReadU32(S0 + 732); //+ 0x2DC
	V1 = -4;
	V0 &= V1;
	EMU_Write32(S0 + 732,V0); //+ 0x2DC
	ZZ_CLOCKCYCLES(4,0x80025DE4);
ZZ_25A60_384:
	V0 = EMU_ReadU32(FP + 528); //+ 0x210
	S4 += 1;
	V0 = (int32_t)S4 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80025D50);
		goto ZZ_25A60_2F0;
	}
	ZZ_CLOCKCYCLES(5,0x80025DF8);
ZZ_25A60_398:
	T0 = EMU_ReadU32(SP + 64); //+ 0x40
	V0 = T0 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80025E40);
		goto ZZ_25A60_3E0;
	}
	S4 = R0;
	A1 = -3;
	A0 = -5;
	V1 = 0x80060000;
	V1 -= 168;
	ZZ_CLOCKCYCLES(10,0x80025E20);
ZZ_25A60_3C0:
	V0 = EMU_ReadU32(V1);
	S4 += 1;
	V0 &= A1;
	V0 &= A0;
	EMU_Write32(V1,V0);
	V0 = (int32_t)S4 < 304;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(8,0x80025E20);
		goto ZZ_25A60_3C0;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(8,0x80025E40);
ZZ_25A60_3E0:
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	AT = 0x80050000;
	EMU_Write32(AT + 30996,T0); //+ 0x7914
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	AT = 0x80050000;
	EMU_Write32(AT + 31004,T0); //+ 0x791C
	T0 = EMU_ReadU32(SP + 56); //+ 0x38
	AT = 0x80050000;
	EMU_Write32(AT + 31008,T0); //+ 0x7920
	if (!FP)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(11,0x80025E70);
		goto ZZ_25A60_410;
	}
	A0 = R0;
	A0 = FP + 564;
	ZZ_CLOCKCYCLES(12,0x80025E70);
ZZ_25A60_410:
	RA = 0x80025E78; //ZZ_25A60_418
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x8001495C);
	goto ZZ_1495C;
ZZ_25A60_418:
	V0 = EMU_ReadU32(S6 + 564); //+ 0x234
	if ((int32_t)V0 <= 0)
	{
		S4 = R0;
		ZZ_CLOCKCYCLES(4,0x80025EB0);
		goto ZZ_25A60_450;
	}
	S4 = R0;
	S0 = 0x23C;
	ZZ_CLOCKCYCLES(5,0x80025E8C);
ZZ_25A60_42C:
	A0 = S6 + S0;
	A1 = R0;
	RA = 0x80025E9C; //ZZ_25A60_43C
	A2 = 0x1;
	ZZ_CLOCKCYCLES(4,0x80015118);
	goto ZZ_15118;
ZZ_25A60_43C:
	V0 = EMU_ReadU32(S6 + 564); //+ 0x234
	S4 += 1;
	V0 = (int32_t)S4 < (int32_t)V0;
	if (V0)
	{
		S0 += 4;
		ZZ_CLOCKCYCLES(5,0x80025E8C);
		goto ZZ_25A60_42C;
	}
	S0 += 4;
	ZZ_CLOCKCYCLES(5,0x80025EB0);
ZZ_25A60_450:
	V0 = EMU_ReadU32(S6 + 568); //+ 0x238
	if ((int32_t)V0 <= 0)
	{
		S4 = R0;
		ZZ_CLOCKCYCLES(4,0x80025EF4);
		goto ZZ_25A60_494;
	}
	S4 = R0;
	S0 = S6;
	A1 = R0;
	ZZ_CLOCKCYCLES(6,0x80025EC8);
ZZ_25A60_468:
	A2 = 0x1;
	A3 = 0x63960000;
	A3 |= 0x347F;
	A0 = EMU_ReadU32(S0 + 604); //+ 0x25C
	RA = 0x80025EE0; //ZZ_25A60_480
	S0 += 4;
	ZZ_CLOCKCYCLES(6,0x80014D00);
	goto ZZ_14D00;
ZZ_25A60_480:
	V0 = EMU_ReadU32(S6 + 568); //+ 0x238
	S4 += 1;
	V0 = (int32_t)S4 < (int32_t)V0;
	if (V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(5,0x80025EC8);
		goto ZZ_25A60_468;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x80025EF4);
ZZ_25A60_494:
	T0 = EMU_ReadU32(SP + 72); //+ 0x48
	if (!T0)
	{
		S4 = R0;
		ZZ_CLOCKCYCLES(4,0x80025F0C);
		goto ZZ_25A60_4AC;
	}
	S4 = R0;
	RA = 0x80025F0C; //ZZ_25A60_4AC
	ZZ_CLOCKCYCLES(6,0x80013748);
	goto ZZ_13748;
ZZ_25A60_4AC:
	V0 = EMU_ReadU32(S6 + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S0 = 0x214;
		ZZ_CLOCKCYCLES(4,0x80025FC8);
		goto ZZ_25A60_568;
	}
	S0 = 0x214;
	ZZ_CLOCKCYCLES(4,0x80025F1C);
ZZ_25A60_4BC:
	RA = 0x80025F24; //ZZ_25A60_4C4
	A0 = S6 + S0;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_25A60_4C4:
	S3 = V0;
	V1 = EMU_ReadU32(S3 + 16); //+ 0x10
	V0 = EMU_ReadU32(V1 + 732); //+ 0x2DC
	V0 &= 0x1;
	if (V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(8,0x80025F70);
		goto ZZ_25A60_510;
	}
	V0 = 0x10000;
	V0 |= 0x9000;
	AT = 0x80060000;
	EMU_Write32(AT + 6748,R0); //+ 0x1A5C
	AT = 0x80060000;
	EMU_Write32(AT + 6756,R0); //+ 0x1A64
	AT = 0x80060000;
	EMU_Write32(AT + 6752,V0); //+ 0x1A60
	V0 = EMU_ReadU32(V1 + 732); //+ 0x2DC
	V0 |= 0x3;
	EMU_Write32(V1 + 732,V0); //+ 0x2DC
	ZZ_CLOCKCYCLES(19,0x80025F70);
ZZ_25A60_510:
	T0 = EMU_ReadU32(SP + 72); //+ 0x48
	if (!T0)
	{
		A0 = -5;
		ZZ_CLOCKCYCLES(4,0x80025F9C);
		goto ZZ_25A60_53C;
	}
	A0 = -5;
	V1 = EMU_ReadU32(S3 + 16); //+ 0x10
	V0 = EMU_ReadU32(V1 + 732); //+ 0x2DC
	V0 |= 0x4;
	EMU_Write32(V1 + 732,V0); //+ 0x2DC
	ZZ_CLOCKCYCLES(11,0x80025FB4);
	goto ZZ_25A60_554;
ZZ_25A60_53C:
	V0 = EMU_ReadU32(S3 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 732); //+ 0x2DC
	V1 &= A0;
	EMU_Write32(V0 + 732,V1); //+ 0x2DC
	ZZ_CLOCKCYCLES(6,0x80025FB4);
ZZ_25A60_554:
	V0 = EMU_ReadU32(S6 + 528); //+ 0x210
	S4 += 1;
	V0 = (int32_t)S4 < (int32_t)V0;
	if (V0)
	{
		S0 += 4;
		ZZ_CLOCKCYCLES(5,0x80025F1C);
		goto ZZ_25A60_4BC;
	}
	S0 += 4;
	ZZ_CLOCKCYCLES(5,0x80025FC8);
ZZ_25A60_568:
	A1 = EMU_ReadU32(SP + 64); //+ 0x40
	RA = 0x80025FD4; //ZZ_25A60_574
	A0 = S6 + 736;
	ZZ_CLOCKCYCLES(3,0x800260AC);
	goto ZZ_260AC;
ZZ_25A60_574:
	ZZ_CLOCKCYCLES(2,0x80026000);
	goto ZZ_25A60_5A0;
ZZ_25A60_57C:
	T0 = EMU_ReadU32(SP + 40); //+ 0x28
	EMU_Write32(V0,T0);
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	AT = 0x80050000;
	EMU_Write32(AT + 31004,T0); //+ 0x791C
	T0 = EMU_ReadU32(SP + 56); //+ 0x38
	ZZ_CLOCKCYCLES(7,0x80025FF8);
ZZ_25A60_598:
	AT = 0x80050000;
	EMU_Write32(AT + 31008,T0); //+ 0x7920
	ZZ_CLOCKCYCLES(2,0x80026000);
ZZ_25A60_5A0:
	A2 = 0x80050000;
	A2 += 31040;
	A1 = 0x80050000;
	A1 += 30832;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	A2 -= 220;
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31008); //+ 0x7920
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31004); //+ 0x791C
	RA = 0x80026044; //ZZ_25A60_5E4
	A1 = -A1;
	ZZ_CLOCKCYCLES(17,0x800296A8);
	goto ZZ_296A8;
ZZ_25A60_5E4:
	A1 = 0x80050000;
	A1 += 30832;
	A0 = 0x80050000;
	A0 += 31028;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	EMU_Write32(A0,V0);
	EMU_Write32(A0 + 4,V1); //+ 0x4
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(A0 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(11,0x80026070);
ZZ_25A60_610:
	AT = 0x80060000;
	EMU_Write32(AT - 12352,R0); //+ 0xFFFFCFC0
	RA = EMU_ReadU32(SP + 156); //+ 0x9C
	FP = EMU_ReadU32(SP + 152); //+ 0x98
	S7 = EMU_ReadU32(SP + 148); //+ 0x94
	S6 = EMU_ReadU32(SP + 144); //+ 0x90
	S5 = EMU_ReadU32(SP + 140); //+ 0x8C
	S4 = EMU_ReadU32(SP + 136); //+ 0x88
	S3 = EMU_ReadU32(SP + 132); //+ 0x84
	S2 = EMU_ReadU32(SP + 128); //+ 0x80
	S1 = EMU_ReadU32(SP + 124); //+ 0x7C
	S0 = EMU_ReadU32(SP + 120); //+ 0x78
	SP += 160;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(15);
	ZZ_JUMPREGISTER(0x800255B8,ZZ_253A0_218);
	ZZ_JUMPREGISTER(0x80031E90,ZZ_31D50_140);
	ZZ_JUMPREGISTER(0x80026880,ZZ_26650_230);
	ZZ_JUMPREGISTER(0x8002B730,ZZ_2B2BC_474);
	ZZ_JUMPREGISTER(0x8002BA7C,ZZ_2B2BC_7C0);
	ZZ_JUMPREGISTER(0x8002B4BC,ZZ_2B2BC_200);
	ZZ_JUMPREGISTER(0x8002B210,ZZ_2A82C_9E4);
	ZZ_JUMPREGISTER(0x8002A0B4,ZZ_29F6C_148);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80025A60,0x80025AD8,ZZ_25A60);
ZZ_MARK_TARGET(0x80025AD8,0x80025B40,ZZ_25A60_78);
ZZ_MARK_TARGET(0x80025B40,0x80025B4C,ZZ_25A60_E0);
ZZ_MARK_TARGET(0x80025B4C,0x80025B88,ZZ_25A60_EC);
ZZ_MARK_TARGET(0x80025B88,0x80025BAC,ZZ_25A60_128);
ZZ_MARK_TARGET(0x80025BAC,0x80025BE4,ZZ_25A60_14C);
ZZ_MARK_TARGET(0x80025BE4,0x80025BF0,ZZ_25A60_184);
ZZ_MARK_TARGET(0x80025BF0,0x80025C04,ZZ_25A60_190);
ZZ_MARK_TARGET(0x80025C04,0x80025C1C,ZZ_25A60_1A4);
ZZ_MARK_TARGET(0x80025C1C,0x80025C20,ZZ_25A60_1BC);
ZZ_MARK_TARGET(0x80025C20,0x80025C3C,ZZ_25A60_1C0);
ZZ_MARK_TARGET(0x80025C3C,0x80025C68,ZZ_25A60_1DC);
ZZ_MARK_TARGET(0x80025C68,0x80025C80,ZZ_25A60_208);
ZZ_MARK_TARGET(0x80025C80,0x80025C88,ZZ_25A60_220);
ZZ_MARK_TARGET(0x80025C88,0x80025C94,ZZ_25A60_228);
ZZ_MARK_TARGET(0x80025C94,0x80025CA0,ZZ_25A60_234);
ZZ_MARK_TARGET(0x80025CA0,0x80025CA8,ZZ_25A60_240);
ZZ_MARK_TARGET(0x80025CA8,0x80025CB8,ZZ_25A60_248);
ZZ_MARK_TARGET(0x80025CB8,0x80025D10,ZZ_25A60_258);
ZZ_MARK_TARGET(0x80025D10,0x80025D50,ZZ_25A60_2B0);
ZZ_MARK_TARGET(0x80025D50,0x80025D58,ZZ_25A60_2F0);
ZZ_MARK_TARGET(0x80025D58,0x80025D80,ZZ_25A60_2F8);
ZZ_MARK_TARGET(0x80025D80,0x80025D88,ZZ_25A60_320);
ZZ_MARK_TARGET(0x80025D88,0x80025DA4,ZZ_25A60_328);
ZZ_MARK_TARGET(0x80025DA4,0x80025DA8,ZZ_25A60_344);
ZZ_MARK_TARGET(0x80025DA8,0x80025DD4,ZZ_25A60_348);
ZZ_MARK_TARGET(0x80025DD4,0x80025DE4,ZZ_25A60_374);
ZZ_MARK_TARGET(0x80025DE4,0x80025DF8,ZZ_25A60_384);
ZZ_MARK_TARGET(0x80025DF8,0x80025E20,ZZ_25A60_398);
ZZ_MARK_TARGET(0x80025E20,0x80025E40,ZZ_25A60_3C0);
ZZ_MARK_TARGET(0x80025E40,0x80025E70,ZZ_25A60_3E0);
ZZ_MARK_TARGET(0x80025E70,0x80025E78,ZZ_25A60_410);
ZZ_MARK_TARGET(0x80025E78,0x80025E8C,ZZ_25A60_418);
ZZ_MARK_TARGET(0x80025E8C,0x80025E9C,ZZ_25A60_42C);
ZZ_MARK_TARGET(0x80025E9C,0x80025EB0,ZZ_25A60_43C);
ZZ_MARK_TARGET(0x80025EB0,0x80025EC8,ZZ_25A60_450);
ZZ_MARK_TARGET(0x80025EC8,0x80025EE0,ZZ_25A60_468);
ZZ_MARK_TARGET(0x80025EE0,0x80025EF4,ZZ_25A60_480);
ZZ_MARK_TARGET(0x80025EF4,0x80025F0C,ZZ_25A60_494);
ZZ_MARK_TARGET(0x80025F0C,0x80025F1C,ZZ_25A60_4AC);
ZZ_MARK_TARGET(0x80025F1C,0x80025F24,ZZ_25A60_4BC);
ZZ_MARK_TARGET(0x80025F24,0x80025F70,ZZ_25A60_4C4);
ZZ_MARK_TARGET(0x80025F70,0x80025F9C,ZZ_25A60_510);
ZZ_MARK_TARGET(0x80025F9C,0x80025FB4,ZZ_25A60_53C);
ZZ_MARK_TARGET(0x80025FB4,0x80025FC8,ZZ_25A60_554);
ZZ_MARK_TARGET(0x80025FC8,0x80025FD4,ZZ_25A60_568);
ZZ_MARK_TARGET(0x80025FD4,0x80025FDC,ZZ_25A60_574);
ZZ_MARK_TARGET(0x80025FDC,0x80025FF8,ZZ_25A60_57C);
ZZ_MARK_TARGET(0x80025FF8,0x80026000,ZZ_25A60_598);
ZZ_MARK_TARGET(0x80026000,0x80026044,ZZ_25A60_5A0);
ZZ_MARK_TARGET(0x80026044,0x80026070,ZZ_25A60_5E4);
ZZ_MARK_TARGET(0x80026070,0x800260AC,ZZ_25A60_610);
