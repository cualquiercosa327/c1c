#ifdef ZZ_INCLUDE_CODE
ZZ_4EA24:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 6822); //+ 0xFFFFE55A
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 6808); //+ 0xFFFFE568
	A0 = 0x80060000;
	A0 = EMU_ReadU8(A0 - 6807); //+ 0xFFFFE569
	V0 += 60;
	if ((int32_t)A0 >= 0)
	{
		V1 = V0 - V1;
		ZZ_CLOCKCYCLES(9,0x8004EA4C);
		goto ZZ_4EA24_28;
	}
	V1 = V0 - V1;
	A0 += 7;
	ZZ_CLOCKCYCLES(10,0x8004EA4C);
ZZ_4EA24_28:
	V0 = 0xC;
	EMU_SDivide(V1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8004EA60);
		goto ZZ_4EA24_3C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(5,0x8004EA60);
ZZ_4EA24_3C:
	AT = -1;
	if (V0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004EA78);
		goto ZZ_4EA24_54;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004EA78);
		goto ZZ_4EA24_54;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004EA78);
ZZ_4EA24_54:
	A2 = LO;
	A1 = HI;
	V1 = A0 >> 3;
	V0 = V1 < 16;
	if (V0)
	{
		V0 = A1 << 4;
		ZZ_CLOCKCYCLES(6,0x8004EA94);
		goto ZZ_4EA24_70;
	}
	V0 = A1 << 4;
	V1 = 0xF;
	ZZ_CLOCKCYCLES(7,0x8004EA94);
ZZ_4EA24_70:
	V1 &= 0xFFFF;
	V0 += V1;
	V0 <<= 1;
	AT = 0x80050000;
	AT += V0;
	V1 = EMU_ReadU16(AT + 25208); //+ 0x6278
	V0 = A2 - 5;
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(9,0x8004EAC0);
		goto ZZ_4EA24_9C;
	}
	V1 <<= V0;
	ZZ_CLOCKCYCLES(11,0x8004EAD4);
	goto ZZ_4EA24_B0;
ZZ_4EA24_9C:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8004EAD4);
		goto ZZ_4EA24_B0;
	}
	V1 &= 0xFFFF;
	V0 = -V0;
	V1 = (int32_t)V1 >> V0;
	ZZ_CLOCKCYCLES(5,0x8004EAD4);
ZZ_4EA24_B0:
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = V1 & 0xFFFF;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8004E2BC,ZZ_4DDE4_4D8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004EA24,0x8004EA4C,ZZ_4EA24);
ZZ_MARK_TARGET(0x8004EA4C,0x8004EA60,ZZ_4EA24_28);
ZZ_MARK_TARGET(0x8004EA60,0x8004EA78,ZZ_4EA24_3C);
ZZ_MARK_TARGET(0x8004EA78,0x8004EA94,ZZ_4EA24_54);
ZZ_MARK_TARGET(0x8004EA94,0x8004EAC0,ZZ_4EA24_70);
ZZ_MARK_TARGET(0x8004EAC0,0x8004EAD4,ZZ_4EA24_9C);
ZZ_MARK_TARGET(0x8004EAD4,0x8004EADC,ZZ_4EA24_B0);
