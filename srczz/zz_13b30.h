#ifdef ZZ_INCLUDE_CODE
ZZ_13B30:
	SP -= 32;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	V0 = 0x3;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	A3 = EMU_ReadS16(S0 + 4); //+ 0x4
	T1 = EMU_ReadU32(S0 + 28); //+ 0x1C
	if (A3 == V0)
	{
		T0 = R0;
		ZZ_CLOCKCYCLES(9,0x80013B60);
		goto ZZ_13B30_30;
	}
	T0 = R0;
	V0 = 0xD;
	if (A3 != V0)
	{
		ZZ_CLOCKCYCLES(12,0x80013C30);
		goto ZZ_13B30_100;
	}
	ZZ_CLOCKCYCLES(12,0x80013B60);
ZZ_13B30_30:
	V0 = EMU_ReadS16(S0 + 14); //+ 0xE
	if (!V0)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(4,0x80013B88);
		goto ZZ_13B30_58;
	}
	V0 = 0x4;
	A0 = EMU_ReadS16(S0 + 12); //+ 0xC
	A1 = EMU_ReadU32(S0);
	A0 <<= 11;
	RA = 0x80013B84; //ZZ_13B30_54
	A0 += A1;
	ZZ_CLOCKCYCLES(9,0x80013970);
	goto ZZ_13970;
ZZ_13B30_54:
	V0 = 0x4;
	ZZ_CLOCKCYCLES(1,0x80013B88);
ZZ_13B30_58:
	T0 = EMU_ReadU32(S0);
	V1 = 0x1;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	V0 = EMU_ReadU16(T0 + 2); //+ 0x2
	T1 = EMU_ReadU32(T0 + 8); //+ 0x8
	if (V0 == V1)
	{
		T2 = T0 + 16;
		ZZ_CLOCKCYCLES(7,0x80013C28);
		goto ZZ_13B30_F8;
	}
	T2 = T0 + 16;
	V1 = EMU_ReadU16(T0);
	V0 = 0x1234;
	if (V1 != V0)
	{
		A3 = T1 - 1;
		ZZ_CLOCKCYCLES(11,0x80013C28);
		goto ZZ_13B30_F8;
	}
	A3 = T1 - 1;
	if ((int32_t)A3 < 0)
	{
		ZZ_CLOCKCYCLES(13,0x80013C10);
		goto ZZ_13B30_E0;
	}
	V0 = A3 << 2;
	A2 = V0 + T2;
	ZZ_CLOCKCYCLES(15,0x80013BC4);
ZZ_13B30_94:
	V0 = EMU_ReadU32(A2);
	A1 = T0 + V0;
	EMU_Write32(A2,A1);
	A0 = EMU_ReadU32(A1 + 12); //+ 0xC
	if ((int32_t)A0 < 0)
	{
		V1 = A1 + 16;
		ZZ_CLOCKCYCLES(8,0x80013C04);
		goto ZZ_13B30_D4;
	}
	V1 = A1 + 16;
	V0 = A0 << 2;
	V1 += V0;
	ZZ_CLOCKCYCLES(10,0x80013BEC);
ZZ_13B30_BC:
	V0 = EMU_ReadU32(V1);
	A0 -= 1;
	V0 += A1;
	EMU_Write32(V1,V0);
	if ((int32_t)A0 >= 0)
	{
		V1 -= 4;
		ZZ_CLOCKCYCLES(6,0x80013BEC);
		goto ZZ_13B30_BC;
	}
	V1 -= 4;
	ZZ_CLOCKCYCLES(6,0x80013C04);
ZZ_13B30_D4:
	A3 -= 1;
	if ((int32_t)A3 >= 0)
	{
		A2 -= 4;
		ZZ_CLOCKCYCLES(3,0x80013BC4);
		goto ZZ_13B30_94;
	}
	A2 -= 4;
	ZZ_CLOCKCYCLES(3,0x80013C10);
ZZ_13B30_E0:
	V1 = T1 << 2;
	V1 += T2;
	V0 = EMU_ReadU32(V1);
	V0 += T0;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(6,0x80013C28);
ZZ_13B30_F8:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80013D34);
	goto ZZ_13B30_204;
ZZ_13B30_100:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15040); //+ 0xFFFFC540
	V1 = EMU_ReadU32(S0 + 20); //+ 0x14
	V0 = EMU_ReadU32(V0 + 1052); //+ 0x41C
	V1 = (int32_t)V1 >> 1;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (!V1)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(8,0x80013C60);
		goto ZZ_13B30_130;
	}
	A1 = R0;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12352); //+ 0xFFFFCFC0
	A1 = R0 < V0;
	ZZ_CLOCKCYCLES(12,0x80013C60);
ZZ_13B30_130:
	if ((int32_t)T1 <= 0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(2,0x80013D30);
		goto ZZ_13B30_200;
	}
	A0 = R0;
	T2 = 0x2;
	ZZ_CLOCKCYCLES(3,0x80013C6C);
ZZ_13B30_13C:
	if (A3 != T2)
	{
		ZZ_CLOCKCYCLES(2,0x80013D1C);
		goto ZZ_13B30_1EC;
	}
	if (!A1)
	{
		EMU_Write16(S0 + 14,A1); //+ 0xE
		ZZ_CLOCKCYCLES(4,0x80013CA8);
		goto ZZ_13B30_178;
	}
	EMU_Write16(S0 + 14,A1); //+ 0xE
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15040); //+ 0xFFFFC540
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	V1 = T0 + 32;
	V0 &= 0x3F;
	T0 = V1 - V0;
	EMU_Write16(S0 + 12,T0); //+ 0xC
	ZZ_CLOCKCYCLES(15,0x80013CA8);
ZZ_13B30_178:
	V0 = EMU_ReadS16(S0 + 4); //+ 0x4
	if (V0 != A3)
	{
		V0 = 0xD;
		ZZ_CLOCKCYCLES(4,0x80013CC4);
		goto ZZ_13B30_194;
	}
	V0 = 0xD;
	V0 = 0x3;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(7,0x80013D1C);
	goto ZZ_13B30_1EC;
ZZ_13B30_194:
	if (!A1)
	{
		EMU_Write16(S0 + 4,V0); //+ 0x4
		ZZ_CLOCKCYCLES(2,0x80013D04);
		goto ZZ_13B30_1D4;
	}
	EMU_Write16(S0 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15040); //+ 0xFFFFC540
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	V1 = EMU_ReadS16(S0 + 12); //+ 0xC
	V0 &= 0x3F;
	V0 += V1;
	V1 = EMU_ReadU32(S0);
	V0 <<= 11;
	V0 += V1;
	ZZ_CLOCKCYCLES(16,0x80013D08);
	goto ZZ_13B30_1D8;
ZZ_13B30_1D4:
	V0 = EMU_ReadU32(S0 + 44); //+ 0x2C
	ZZ_CLOCKCYCLES(1,0x80013D08);
ZZ_13B30_1D8:
	EMU_Write32(S0 + 16,V0); //+ 0x10
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = 0x8765;
	EMU_Write16(V1,V0);
	ZZ_CLOCKCYCLES(5,0x80013D1C);
ZZ_13B30_1EC:
	A2 = S0;
	A0 += 1;
	V0 = (int32_t)A0 < (int32_t)T1;
	if (V0)
	{
		S0 = A2 - 44;
		ZZ_CLOCKCYCLES(5,0x80013C6C);
		goto ZZ_13B30_13C;
	}
	S0 = A2 - 44;
	ZZ_CLOCKCYCLES(5,0x80013D30);
ZZ_13B30_200:
	V0 = A2;
	ZZ_CLOCKCYCLES(1,0x80013D34);
ZZ_13B30_204:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80013DF0,ZZ_13D48_A8);
	ZZ_JUMPREGISTER(0x80013FD8,ZZ_13D48_290);
	ZZ_JUMPREGISTER(0x80013EAC,ZZ_13D48_164);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013B30,0x80013B60,ZZ_13B30);
ZZ_MARK_TARGET(0x80013B60,0x80013B84,ZZ_13B30_30);
ZZ_MARK_TARGET(0x80013B84,0x80013B88,ZZ_13B30_54);
ZZ_MARK_TARGET(0x80013B88,0x80013BC4,ZZ_13B30_58);
ZZ_MARK_TARGET(0x80013BC4,0x80013BEC,ZZ_13B30_94);
ZZ_MARK_TARGET(0x80013BEC,0x80013C04,ZZ_13B30_BC);
ZZ_MARK_TARGET(0x80013C04,0x80013C10,ZZ_13B30_D4);
ZZ_MARK_TARGET(0x80013C10,0x80013C28,ZZ_13B30_E0);
ZZ_MARK_TARGET(0x80013C28,0x80013C30,ZZ_13B30_F8);
ZZ_MARK_TARGET(0x80013C30,0x80013C60,ZZ_13B30_100);
ZZ_MARK_TARGET(0x80013C60,0x80013C6C,ZZ_13B30_130);
ZZ_MARK_TARGET(0x80013C6C,0x80013CA8,ZZ_13B30_13C);
ZZ_MARK_TARGET(0x80013CA8,0x80013CC4,ZZ_13B30_178);
ZZ_MARK_TARGET(0x80013CC4,0x80013D04,ZZ_13B30_194);
ZZ_MARK_TARGET(0x80013D04,0x80013D08,ZZ_13B30_1D4);
ZZ_MARK_TARGET(0x80013D08,0x80013D1C,ZZ_13B30_1D8);
ZZ_MARK_TARGET(0x80013D1C,0x80013D30,ZZ_13B30_1EC);
ZZ_MARK_TARGET(0x80013D30,0x80013D34,ZZ_13B30_200);
ZZ_MARK_TARGET(0x80013D34,0x80013D48,ZZ_13B30_204);
