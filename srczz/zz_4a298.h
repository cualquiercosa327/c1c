#ifdef ZZ_INCLUDE_CODE
ZZ_4A298:
	SP -= 32;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	S1 = A1 << 16;
	S1 = (int32_t)S1 >> 16;
	S0 = S1 << 1;
	S0 += S1;
	S0 <<= 2;
	S0 = S0 - S1;
	S0 <<= 2;
	S0 = S0 - S1;
	A2 &= 0xFF;
	S2 = A0 << 16;
	A0 = A2;
	S2 = (int32_t)S2 >> 16;
	V0 = S2 << 2;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1048); //+ 0x418
	A1 = A0;
	S0 <<= 2;
	RA = 0x8004A2FC; //ZZ_4A298_64
	S0 += V0;
	ZZ_CLOCKCYCLES(25,0x8004D3BC);
	goto ZZ_4D3BC;
ZZ_4A298_64:
	A0 = S2;
	RA = 0x8004A308; //ZZ_4A298_70
	A1 = S1;
	ZZ_CLOCKCYCLES(3,0x8004AEB8);
	goto ZZ_4AEB8;
ZZ_4A298_70:
	EMU_Write32(S0 + 136,V0); //+ 0x88
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 32;
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004A298,0x8004A2FC,ZZ_4A298);
ZZ_MARK_TARGET(0x8004A2FC,0x8004A308,ZZ_4A298_64);
ZZ_MARK_TARGET(0x8004A308,0x8004A324,ZZ_4A298_70);
