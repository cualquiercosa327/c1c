#ifdef ZZ_INCLUDE_CODE
ZZ_1495C:
	SP -= 56;
	EMU_Write32(SP + 48,S2); //+ 0x30
	S2 = A0;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 44,S1); //+ 0x2C
	if (!S2)
	{
		EMU_Write32(SP + 40,S0); //+ 0x28
		ZZ_CLOCKCYCLES(7,0x80014A50);
		goto ZZ_1495C_F4;
	}
	EMU_Write32(SP + 40,S0); //+ 0x28
	V0 = EMU_ReadU32(S2);
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(11,0x80014A18);
		goto ZZ_1495C_BC;
	}
	S0 = R0;
	S1 = 0x8;
	ZZ_CLOCKCYCLES(12,0x8001498C);
ZZ_1495C_30:
	RA = 0x80014994; //ZZ_1495C_38
	A0 = S2 + S1;
	ZZ_CLOCKCYCLES(2,0x80015034);
	goto ZZ_15034;
ZZ_1495C_38:
	A0 = V0;
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(4,0x80014A04);
		goto ZZ_1495C_A8;
	}
	S1 += 4;
	V0 = -255;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x80014A04);
		goto ZZ_1495C_A8;
	}
	V0 = EMU_ReadS16(A0 + 10); //+ 0xA
	if ((int32_t)V0 <= 0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(11,0x80014A04);
		goto ZZ_1495C_A8;
	}
	V1 = V0;
	V0 = V1 - 1;
	EMU_Write16(A0 + 10,V0); //+ 0xA
	V0 <<= 16;
	if ((int32_t)V0 > 0)
	{
		ZZ_CLOCKCYCLES(16,0x80014A04);
		goto ZZ_1495C_A8;
	}
	V0 = EMU_ReadS16(A0 + 6); //+ 0x6
	if (V0)
	{
		ZZ_CLOCKCYCLES(20,0x80014A04);
		goto ZZ_1495C_A8;
	}
	RA = 0x800149EC; //ZZ_1495C_90
	ZZ_CLOCKCYCLES(22,0x80014930);
	goto ZZ_14930;
ZZ_1495C_90:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	V0 -= 1;
	AT = 0x80060000;
	EMU_Write32(AT - 12376,V0); //+ 0xFFFFCFA8
	ZZ_CLOCKCYCLES(6,0x80014A04);
ZZ_1495C_A8:
	V0 = EMU_ReadU32(S2);
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001498C);
		goto ZZ_1495C_30;
	}
	ZZ_CLOCKCYCLES(5,0x80014A18);
ZZ_1495C_BC:
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(4,0x80014A50);
		goto ZZ_1495C_F4;
	}
	S0 = R0;
	S1 = S2;
	ZZ_CLOCKCYCLES(5,0x80014A2C);
ZZ_1495C_D0:
	A0 = EMU_ReadU32(S1 + 40); //+ 0x28
	S1 += 4;
	RA = 0x80014A3C; //ZZ_1495C_E0
	A1 = 0x1;
	ZZ_CLOCKCYCLES(4,0x80014E34);
	goto ZZ_14E34;
ZZ_1495C_E0:
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80014A2C);
		goto ZZ_1495C_D0;
	}
	ZZ_CLOCKCYCLES(5,0x80014A50);
ZZ_1495C_F4:
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80026760,ZZ_26650_110);
	ZZ_JUMPREGISTER(0x80025E78,ZZ_25A60_418);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001495C,0x8001498C,ZZ_1495C);
ZZ_MARK_TARGET(0x8001498C,0x80014994,ZZ_1495C_30);
ZZ_MARK_TARGET(0x80014994,0x800149EC,ZZ_1495C_38);
ZZ_MARK_TARGET(0x800149EC,0x80014A04,ZZ_1495C_90);
ZZ_MARK_TARGET(0x80014A04,0x80014A18,ZZ_1495C_A8);
ZZ_MARK_TARGET(0x80014A18,0x80014A2C,ZZ_1495C_BC);
ZZ_MARK_TARGET(0x80014A2C,0x80014A3C,ZZ_1495C_D0);
ZZ_MARK_TARGET(0x80014A3C,0x80014A50,ZZ_1495C_E0);
ZZ_MARK_TARGET(0x80014A50,0x80014A6C,ZZ_1495C_F4);
