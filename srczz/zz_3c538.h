#ifdef ZZ_INCLUDE_CODE
ZZ_3C538:
	A0 = EMU_ReadU32(GP + 712); //+ 0x2C8
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x8003C54C; //ZZ_3C538_14
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C538_14:
	A0 = EMU_ReadU32(GP + 716); //+ 0x2CC
	RA = 0x8003C558; //ZZ_3C538_20
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C538_20:
	A0 = EMU_ReadU32(GP + 720); //+ 0x2D0
	RA = 0x8003C564; //ZZ_3C538_2C
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C538_2C:
	A0 = EMU_ReadU32(GP + 724); //+ 0x2D4
	RA = 0x8003C570; //ZZ_3C538_38
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C538_38:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8003AC54,ZZ_3AC2C_28);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003C538,0x8003C54C,ZZ_3C538);
ZZ_MARK_TARGET(0x8003C54C,0x8003C558,ZZ_3C538_14);
ZZ_MARK_TARGET(0x8003C558,0x8003C564,ZZ_3C538_20);
ZZ_MARK_TARGET(0x8003C564,0x8003C570,ZZ_3C538_2C);
ZZ_MARK_TARGET(0x8003C570,0x8003C580,ZZ_3C538_38);
