#ifdef ZZ_INCLUDE_CODE
ZZ_11DD0:
	SP -= 32;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	RA = 0x80011DE0; //ZZ_11DD0_10
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(4,0x800167A4);
	goto ZZ_167A4;
ZZ_11DD0_10:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26384); //+ 0x6710
	V0 = 0x2D;
	AT = 0x80060000;
	EMU_Write32(AT + 6332,R0); //+ 0x18BC
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 46;
		ZZ_CLOCKCYCLES(7,0x80011E5C);
		goto ZZ_11DD0_8C;
	}
	V0 = (int32_t)V1 < 46;
	if (!V0)
	{
		V0 = 0x19;
		ZZ_CLOCKCYCLES(9,0x80011E14);
		goto ZZ_11DD0_44;
	}
	V0 = 0x19;
	if (V1 == V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(11,0x80011E30);
		goto ZZ_11DD0_60;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(13,0x80011EA0);
	goto ZZ_11DD0_D0;
ZZ_11DD0_44:
	V0 = (int32_t)V1 < 58;
	if (!V0)
	{
		V0 = (int32_t)V1 < 56;
		ZZ_CLOCKCYCLES(3,0x80011EA0);
		goto ZZ_11DD0_D0;
	}
	V0 = (int32_t)V1 < 56;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80011FA8);
		goto ZZ_11DD0_1D8;
	}
	ZZ_CLOCKCYCLES(7,0x80011EA0);
	goto ZZ_11DD0_D0;
ZZ_11DD0_60:
	S0 = 0x80060000;
	S0 -= 15044;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011E48; //ZZ_11DD0_78
	A0 += 36;
	ZZ_CLOCKCYCLES(6,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_78:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	A0 += 228;
	ZZ_CLOCKCYCLES(5,0x80011FA0);
	goto ZZ_11DD0_1D0;
ZZ_11DD0_8C:
	A1 = R0;
	S0 = 0x80060000;
	S0 -= 15044;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011E78; //ZZ_11DD0_A8
	A0 += 136;
	ZZ_CLOCKCYCLES(7,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_A8:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011E8C; //ZZ_11DD0_BC
	A0 += 156;
	ZZ_CLOCKCYCLES(5,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_BC:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	A0 += 32;
	ZZ_CLOCKCYCLES(5,0x80011FA0);
	goto ZZ_11DD0_1D0;
ZZ_11DD0_D0:
	S0 = 0x80060000;
	S0 += 3520;
	A0 = S0;
	A1 = 0x4;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x80011EC4; //ZZ_11DD0_F4
	EMU_Write32(SP + 20,R0); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x8001C6C8);
  EMU_Invoke(0x8001C6C8,0);
ZZ_11DD0_F4:
	A0 = S0;
	A1 = 0x4;
	A2 = 0x1;
	A3 = R0;
	AT = 0x80060000;
	EMU_Write32(AT + 6312,V0); //+ 0x18A8
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x80011EE8; //ZZ_11DD0_118
	EMU_Write32(SP + 20,R0); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x8001C6C8);
  EMU_Invoke(0x8001C6C8,0);
ZZ_11DD0_118:
	A0 = S0;
	A1 = 0x4;
	A2 = 0x5;
	A3 = R0;
	AT = 0x80060000;
	EMU_Write32(AT + 6308,V0); //+ 0x18A4
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x80011F0C; //ZZ_11DD0_13C
	EMU_Write32(SP + 20,R0); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x8001C6C8);
  EMU_Invoke(0x8001C6C8,0);
ZZ_11DD0_13C:
	A1 = R0;
	S0 = 0x80060000;
	S0 -= 15044;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 6340,V0); //+ 0x18C4
	RA = 0x80011F30; //ZZ_11DD0_160
	A0 += 20;
	ZZ_CLOCKCYCLES(9,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_160:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011F44; //ZZ_11DD0_174
	A0 += 40;
	ZZ_CLOCKCYCLES(5,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_174:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011F58; //ZZ_11DD0_188
	A0 += 136;
	ZZ_CLOCKCYCLES(5,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_188:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26384); //+ 0x6710
	V0 = 0x2C;
	if (V1 == V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(5,0x80011F7C);
		goto ZZ_11DD0_1AC;
	}
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011F7C; //ZZ_11DD0_1AC
	A0 += 156;
	ZZ_CLOCKCYCLES(9,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_1AC:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	RA = 0x80011F90; //ZZ_11DD0_1C0
	A0 += 32;
	ZZ_CLOCKCYCLES(5,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_1C0:
	A1 = R0;
	A0 = EMU_ReadU32(S0);
	A2 = 0x1;
	A0 += 36;
	ZZ_CLOCKCYCLES(4,0x80011FA0);
ZZ_11DD0_1D0:
	RA = 0x80011FA8; //ZZ_11DD0_1D8
	ZZ_CLOCKCYCLES(2,0x80015118);
	goto ZZ_15118;
ZZ_11DD0_1D8:
	RA = 0x80011FB0; //ZZ_11DD0_1E0
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x800262DC);
	goto ZZ_262DC;
ZZ_11DD0_1E0:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80011DD0,0x80011DE0,ZZ_11DD0);
ZZ_MARK_TARGET(0x80011DE0,0x80011E14,ZZ_11DD0_10);
ZZ_MARK_TARGET(0x80011E14,0x80011E30,ZZ_11DD0_44);
ZZ_MARK_TARGET(0x80011E30,0x80011E48,ZZ_11DD0_60);
ZZ_MARK_TARGET(0x80011E48,0x80011E5C,ZZ_11DD0_78);
ZZ_MARK_TARGET(0x80011E5C,0x80011E78,ZZ_11DD0_8C);
ZZ_MARK_TARGET(0x80011E78,0x80011E8C,ZZ_11DD0_A8);
ZZ_MARK_TARGET(0x80011E8C,0x80011EA0,ZZ_11DD0_BC);
ZZ_MARK_TARGET(0x80011EA0,0x80011EC4,ZZ_11DD0_D0);
ZZ_MARK_TARGET(0x80011EC4,0x80011EE8,ZZ_11DD0_F4);
ZZ_MARK_TARGET(0x80011EE8,0x80011F0C,ZZ_11DD0_118);
ZZ_MARK_TARGET(0x80011F0C,0x80011F30,ZZ_11DD0_13C);
ZZ_MARK_TARGET(0x80011F30,0x80011F44,ZZ_11DD0_160);
ZZ_MARK_TARGET(0x80011F44,0x80011F58,ZZ_11DD0_174);
ZZ_MARK_TARGET(0x80011F58,0x80011F7C,ZZ_11DD0_188);
ZZ_MARK_TARGET(0x80011F7C,0x80011F90,ZZ_11DD0_1AC);
ZZ_MARK_TARGET(0x80011F90,0x80011FA0,ZZ_11DD0_1C0);
ZZ_MARK_TARGET(0x80011FA0,0x80011FA8,ZZ_11DD0_1D0);
ZZ_MARK_TARGET(0x80011FA8,0x80011FB0,ZZ_11DD0_1D8);
ZZ_MARK_TARGET(0x80011FB0,0x80011FC4,ZZ_11DD0_1E0);
