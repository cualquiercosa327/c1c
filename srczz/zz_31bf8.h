#ifdef ZZ_INCLUDE_CODE
ZZ_31BF8:
	SP -= 24;
	A1 = EMU_ReadU32(GP + 260); //+ 0x104
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26384); //+ 0x6710
	V0 = 0x19;
	EMU_Write32(SP + 16,RA); //+ 0x10
	EMU_Write32(GP + 260,R0); //+ 0x104
	EMU_Write32(GP + 636,A1); //+ 0x27C
	if (V1 != V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(10,0x80031D40);
		goto ZZ_31BF8_148;
	}
	V0 = R0;
	V1 = 0xFFFE0000;
	A0 = 0x80060000;
	A0 += 6300;
	V0 = EMU_ReadU32(A0);
	V1 |= 0x3FF0;
	V0 &= V1;
	V1 = 0x20000;
	V0 |= V1;
	if (A1)
	{
		EMU_Write32(A0,V0);
		ZZ_CLOCKCYCLES(20,0x80031D18);
		goto ZZ_31BF8_120;
	}
	EMU_Write32(A0,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6352); //+ 0x18D0
	V0 = 0x200;
	if (V1 == V0)
	{
		V0 = V1 < 513;
		ZZ_CLOCKCYCLES(25,0x80031CF4);
		goto ZZ_31BF8_FC;
	}
	V0 = V1 < 513;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(27,0x80031C7C);
		goto ZZ_31BF8_84;
	}
	if (!V1)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(29,0x80031CB4);
		goto ZZ_31BF8_BC;
	}
	V0 = 0x100;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(31,0x80031CB4);
		goto ZZ_31BF8_BC;
	}
	ZZ_CLOCKCYCLES(33,0x80031D34);
	goto ZZ_31BF8_13C;
ZZ_31BF8_84:
	V0 = 0x400;
	if (V1 == V0)
	{
		V0 = V1 < 1025;
		ZZ_CLOCKCYCLES(3,0x80031CB4);
		goto ZZ_31BF8_BC;
	}
	V0 = V1 < 1025;
	if (!V0)
	{
		V0 = 0x300;
		ZZ_CLOCKCYCLES(5,0x80031CA0);
		goto ZZ_31BF8_A8;
	}
	V0 = 0x300;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x80031CB4);
		goto ZZ_31BF8_BC;
	}
	ZZ_CLOCKCYCLES(9,0x80031D34);
	goto ZZ_31BF8_13C;
ZZ_31BF8_A8:
	V0 = 0x600;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x80031CE8);
		goto ZZ_31BF8_F0;
	}
	ZZ_CLOCKCYCLES(5,0x80031D34);
	goto ZZ_31BF8_13C;
ZZ_31BF8_BC:
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6356); //+ 0x18D4
	EMU_Write32(V1 + 13780,V0); //+ 0x35D4
	EMU_Write32(V1 + 13776,V0); //+ 0x35D0
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 6476); //+ 0x194C
	V0 = 0x1;
	EMU_Write32(V1 + 13720,V0); //+ 0x3598
	EMU_Write32(V1 + 13732,A0); //+ 0x35A4
	EMU_Write32(V1 + 13728,A0); //+ 0x35A0
	ZZ_CLOCKCYCLES(13,0x80031D34);
	goto ZZ_31BF8_13C;
ZZ_31BF8_F0:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V1 = 0x5;
	ZZ_CLOCKCYCLES(3,0x80031CFC);
	goto ZZ_31BF8_104;
ZZ_31BF8_FC:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V1 = 0xC;
	ZZ_CLOCKCYCLES(2,0x80031CFC);
ZZ_31BF8_104:
	AT = 0x80060000;
	EMU_Write32(AT + 6356,V1); //+ 0x18D4
	EMU_Write32(V0 + 13780,V1); //+ 0x35D4
	EMU_Write32(V0 + 13776,V1); //+ 0x35D0
	V1 = 0x1;
	EMU_Write32(V0 + 13720,V1); //+ 0x3598
	ZZ_CLOCKCYCLES(7,0x80031D34);
	goto ZZ_31BF8_13C;
ZZ_31BF8_120:
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = 0xA;
	AT = 0x80060000;
	EMU_Write32(AT + 6356,V0); //+ 0x18D4
	EMU_Write32(V1 + 13780,V0); //+ 0x35D4
	EMU_Write32(V1 + 13776,V0); //+ 0x35D0
	EMU_Write32(V1 + 13720,R0); //+ 0x3598
	ZZ_CLOCKCYCLES(7,0x80031D34);
ZZ_31BF8_13C:
	RA = 0x80031D3C; //ZZ_31BF8_144
	ZZ_CLOCKCYCLES(2,0x80031EB4);
	goto ZZ_31EB4;
ZZ_31BF8_144:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80031D40);
ZZ_31BF8_148:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x800163E8,ZZ_15B58_890);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80031BF8,0x80031C7C,ZZ_31BF8);
ZZ_MARK_TARGET(0x80031C7C,0x80031CA0,ZZ_31BF8_84);
ZZ_MARK_TARGET(0x80031CA0,0x80031CB4,ZZ_31BF8_A8);
ZZ_MARK_TARGET(0x80031CB4,0x80031CE8,ZZ_31BF8_BC);
ZZ_MARK_TARGET(0x80031CE8,0x80031CF4,ZZ_31BF8_F0);
ZZ_MARK_TARGET(0x80031CF4,0x80031CFC,ZZ_31BF8_FC);
ZZ_MARK_TARGET(0x80031CFC,0x80031D18,ZZ_31BF8_104);
ZZ_MARK_TARGET(0x80031D18,0x80031D34,ZZ_31BF8_120);
ZZ_MARK_TARGET(0x80031D34,0x80031D3C,ZZ_31BF8_13C);
ZZ_MARK_TARGET(0x80031D3C,0x80031D40,ZZ_31BF8_144);
ZZ_MARK_TARGET(0x80031D40,0x80031D50,ZZ_31BF8_148);
