#ifdef ZZ_INCLUDE_CODE
ZZ_1331C:
	SP -= 48;
	V1 = 0x80060000;
	V1 -= 12372;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V0 = EMU_ReadU32(V1);
	S3 = A0;
	if (V0 != S3)
	{
		ZZ_CLOCKCYCLES(13,0x80013354);
		goto ZZ_1331C_38;
	}
	EMU_Write32(V1,R0);
	ZZ_CLOCKCYCLES(14,0x80013354);
ZZ_1331C_38:
	V0 = EMU_ReadU16(S3 + 4); //+ 0x4
	V0 -= 20;
	V0 = V0 < 2;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(6,0x800133A8);
		goto ZZ_1331C_8C;
	}
	V0 = 0x1;
	A0 = EMU_ReadU32(S3);
	V0 = EMU_ReadU16(A0 + 2); //+ 0x2
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x800133B4);
		goto ZZ_1331C_98;
	}
	V0 = EMU_ReadU32(S3 + 20); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V1 = -18;
	EMU_Write32(V0,V1);
	V0 = 0x1;
	ZZ_CLOCKCYCLES(21,0x800133A8);
ZZ_1331C_8C:
	EMU_Write16(S3 + 4,V0); //+ 0x4
	V0 = -255;
	ZZ_CLOCKCYCLES(3,0x800134A4);
	goto ZZ_1331C_188;
ZZ_1331C_98:
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15056); //+ 0xFFFFC530
	V0 >>= 13;
	V0 &= 0x3FC;
	V0 += V1;
	S1 = EMU_ReadU32(V0);
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	S4 = EMU_ReadU32(S3 + 20); //+ 0x14
	if (!V0)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(13,0x80013478);
		goto ZZ_1331C_15C;
	}
	S2 = R0;
	S0 = S1 + 4;
	ZZ_CLOCKCYCLES(14,0x800133EC);
ZZ_1331C_D0:
	V0 = EMU_ReadU32(S3);
	V1 = S2 << 2;
	V1 += V0;
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(9,0x80013424);
		goto ZZ_1331C_108;
	}
	ZZ_CLOCKCYCLES(9,0x80013410);
ZZ_1331C_F4:
	S0 += 8;
	V0 = EMU_ReadU32(S0);
	if (V0 != V1)
	{
		S1 += 8;
		ZZ_CLOCKCYCLES(5,0x80013410);
		goto ZZ_1331C_F4;
	}
	S1 += 8;
	ZZ_CLOCKCYCLES(5,0x80013424);
ZZ_1331C_108:
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	AT = 0x80050000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 5360); //+ 0x14F0
	if (!V0)
	{
		S2 += 1;
		ZZ_CLOCKCYCLES(11,0x80013458);
		goto ZZ_1331C_13C;
	}
	S2 += 1;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80013458; //ZZ_1331C_13C
	ZZ_CLOCKCYCLES_JR(13);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80013450)
	ZZ_JUMPREGISTER_END();
ZZ_1331C_13C:
	EMU_Write32(S1,S4);
	V0 = EMU_ReadU32(S3);
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = S2 < V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x800133EC);
		goto ZZ_1331C_D0;
	}
	ZZ_CLOCKCYCLES(8,0x80013478);
ZZ_1331C_15C:
	V0 = -255;
	V1 = EMU_ReadU32(S3 + 20); //+ 0x14
	A0 = 0x1;
	EMU_Write16(S3 + 4,A0); //+ 0x4
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 12356); //+ 0xFFFFCFBC
	V1 = (int32_t)V1 >> 1;
	V1 <<= 2;
	V1 += A0;
	A0 = -18;
	EMU_Write32(V1,A0);
	ZZ_CLOCKCYCLES(11,0x800134A4);
ZZ_1331C_188:
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x80014350,ZZ_141F4_15C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001331C,0x80013354,ZZ_1331C);
ZZ_MARK_TARGET(0x80013354,0x800133A8,ZZ_1331C_38);
ZZ_MARK_TARGET(0x800133A8,0x800133B4,ZZ_1331C_8C);
ZZ_MARK_TARGET(0x800133B4,0x800133EC,ZZ_1331C_98);
ZZ_MARK_TARGET(0x800133EC,0x80013410,ZZ_1331C_D0);
ZZ_MARK_TARGET(0x80013410,0x80013424,ZZ_1331C_F4);
ZZ_MARK_TARGET(0x80013424,0x80013458,ZZ_1331C_108);
ZZ_MARK_TARGET(0x80013458,0x80013478,ZZ_1331C_13C);
ZZ_MARK_TARGET(0x80013478,0x800134A4,ZZ_1331C_15C);
ZZ_MARK_TARGET(0x800134A4,0x800134C8,ZZ_1331C_188);
