#ifdef ZZ_INCLUDE_CODE
ZZ_3C900:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,RA); //+ 0x14
	A0 = EMU_ReadU32(S0);
	if ((int32_t)A0 < 0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(8,0x8003C92C);
		goto ZZ_3C900_2C;
	}
	V0 = -1;
	RA = 0x8003C928; //ZZ_3C900_28
	ZZ_CLOCKCYCLES(10,0x8003E248);
	goto ZZ_3E248;
ZZ_3C900_28:
	V0 = -1;
	ZZ_CLOCKCYCLES(1,0x8003C92C);
ZZ_3C900_2C:
	EMU_Write32(S0,V0);
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003AF10,ZZ_3AED8_38);
	ZZ_JUMPREGISTER(0x8003ADF4,ZZ_3ADB8_3C);
	ZZ_JUMPREGISTER(0x8003AE4C,ZZ_3AE08_44);
	ZZ_JUMPREGISTER(0x8003BBA8,ZZ_3B8B8_2F0);
	ZZ_JUMPREGISTER(0x8003C330,ZZ_3C038_2F8);
	ZZ_JUMPREGISTER(0x8003BDEC,ZZ_3B8B8_534);
	ZZ_JUMPREGISTER(0x8003B4CC,ZZ_3AF24_5A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003C900,0x8003C928,ZZ_3C900);
ZZ_MARK_TARGET(0x8003C928,0x8003C92C,ZZ_3C900_28);
ZZ_MARK_TARGET(0x8003C92C,0x8003C944,ZZ_3C900_2C);
