#ifdef ZZ_INCLUDE_CODE
ZZ_18A40:
	SP -= 72;
	EMU_Write32(SP + 52,S1); //+ 0x34
	S1 = A0;
	EMU_Write32(SP + 64,S4); //+ 0x40
	S4 = A1;
	EMU_Write32(SP + 48,S0); //+ 0x30
	S0 = A2;
	A0 = S1 + 4;
	EMU_Write32(SP + 68,RA); //+ 0x44
	EMU_Write32(SP + 60,S3); //+ 0x3C
	RA = 0x80018A70; //ZZ_18A40_30
	EMU_Write32(SP + 56,S2); //+ 0x38
	ZZ_CLOCKCYCLES(12,0x80015A98);
	goto ZZ_15A98;
ZZ_18A40_30:
	S3 = V0;
	EMU_Write32(SP + 40,R0); //+ 0x28
	V1 = EMU_ReadU32(S0 + 204); //+ 0xCC
	S2 = EMU_ReadU32(S3 + 16); //+ 0x10
	V1 &= 0x200;
	if (!V1)
	{
		A0 = S0 + 128;
		ZZ_CLOCKCYCLES(7,0x80018AEC);
		goto ZZ_18A40_AC;
	}
	A0 = S0 + 128;
	A1 = 0x80050000;
	A1 += 30856;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30928); //+ 0x78D0
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 30996); //+ 0x7914
	V0 = A1 - 68;
	EMU_Write32(SP + 16,V0); //+ 0x10
	EMU_Write32(SP + 20,V1); //+ 0x14
	V0 = EMU_ReadU32(A2 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 744); //+ 0x2E8
	A3 = R0;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S0 + 204); //+ 0xCC
	A2 = 0x1;
	V0 >>= 18;
	V0 ^= 0x1;
	V0 &= 0x1;
	RA = 0x80018AE4; //ZZ_18A40_A4
	EMU_Write32(SP + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(29,0x8003A144);
	goto ZZ_3A144;
ZZ_18A40_A4:
	ZZ_CLOCKCYCLES(2,0x80018B08);
	goto ZZ_18A40_C8;
ZZ_18A40_AC:
	V0 = SP + 40;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S2;
	A2 = S0;
	RA = 0x80018B08; //ZZ_18A40_C8
	A3 = R0;
	ZZ_CLOCKCYCLES(7,0x800180CC);
	goto ZZ_180CC;
ZZ_18A40_C8:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80018B74);
		goto ZZ_18A40_134;
	}
	RA = 0x80018B18; //ZZ_18A40_D8
	ZZ_CLOCKCYCLES(4,0x80016E18);
	goto ZZ_16E18;
ZZ_18A40_D8:
	V1 = EMU_ReadU32(S0 + 152); //+ 0x98
	EMU_Write32(SP + 16,V1); //+ 0x10
	A1 = EMU_ReadU32(S0 + 312); //+ 0x138
	A0 = S1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = 0x80050000;
	V0 += 6004;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30928); //+ 0x78D0
	A1 += 2048;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A1 = A1 - V0;
	EMU_Write32(SP + 20,A1); //+ 0x14
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	A3 = S2;
	EMU_Write32(SP + 32,V0); //+ 0x20
	A2 = EMU_ReadU32(S3 + 20); //+ 0x14
	RA = 0x80018B74; //ZZ_18A40_134
	A1 = S4;
	ZZ_CLOCKCYCLES(23,0x80034B08);
	goto ZZ_34B08;
ZZ_18A40_134:
	RA = EMU_ReadU32(SP + 68); //+ 0x44
	S4 = EMU_ReadU32(SP + 64); //+ 0x40
	S3 = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x8001E1E4,ZZ_1DE78_36C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80018A40,0x80018A70,ZZ_18A40);
ZZ_MARK_TARGET(0x80018A70,0x80018AE4,ZZ_18A40_30);
ZZ_MARK_TARGET(0x80018AE4,0x80018AEC,ZZ_18A40_A4);
ZZ_MARK_TARGET(0x80018AEC,0x80018B08,ZZ_18A40_AC);
ZZ_MARK_TARGET(0x80018B08,0x80018B18,ZZ_18A40_C8);
ZZ_MARK_TARGET(0x80018B18,0x80018B74,ZZ_18A40_D8);
ZZ_MARK_TARGET(0x80018B74,0x80018B98,ZZ_18A40_134);
