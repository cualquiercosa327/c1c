#ifdef ZZ_INCLUDE_CODE
ZZ_2DF50:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	SP -= 96;
	EMU_Write32(SP + 80,S0); //+ 0x50
	S0 = A0;
	EMU_Write32(SP + 84,S1); //+ 0x54
	S1 = A1;
	EMU_Write32(SP + 92,RA); //+ 0x5C
	EMU_Write32(SP + 88,S2); //+ 0x58
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V1 = 0x100000;
	V0 &= V1;
	if (V0)
	{
		S2 = A2;
		ZZ_CLOCKCYCLES(16,0x8002E030);
		goto ZZ_2DF50_E0;
	}
	S2 = A2;
	V0 = EMU_ReadU32(GP + 760); //+ 0x2F8
	V1 = 0x1F;
	V0 += 124;
	ZZ_CLOCKCYCLES(19,0x8002DF9C);
ZZ_2DF50_4C:
	EMU_Write32(V0,R0);
	V1 -= 1;
	if ((int32_t)V1 >= 0)
	{
		V0 -= 4;
		ZZ_CLOCKCYCLES(4,0x8002DF9C);
		goto ZZ_2DF50_4C;
	}
	V0 -= 4;
	V0 = EMU_ReadU32(GP + 688); //+ 0x2B0
	V1 = 0x7F;
	V0 += 508;
	ZZ_CLOCKCYCLES(7,0x8002DFB8);
ZZ_2DF50_68:
	EMU_Write32(V0,R0);
	V1 -= 1;
	if ((int32_t)V1 >= 0)
	{
		V0 -= 4;
		ZZ_CLOCKCYCLES(4,0x8002DFB8);
		goto ZZ_2DF50_68;
	}
	V0 -= 4;
	A0 = EMU_ReadU32(S1 + 296); //+ 0x128
	V1 = EMU_ReadU32(S1 + 208); //+ 0xD0
	V0 = A0 - 3;
	V0 = V0 < 2;
	if (V0)
	{
		A1 = S2 + 4104;
		ZZ_CLOCKCYCLES(10,0x8002DFEC);
		goto ZZ_2DF50_9C;
	}
	A1 = S2 + 4104;
	V0 = 0x2;
	if (A0 != V0)
	{
		A2 = V1 & 0x2;
		ZZ_CLOCKCYCLES(13,0x8002DFF0);
		goto ZZ_2DF50_A0;
	}
	A2 = V1 & 0x2;
	ZZ_CLOCKCYCLES(13,0x8002DFEC);
ZZ_2DF50_9C:
	A2 = 0x2;
	ZZ_CLOCKCYCLES(1,0x8002DFF0);
ZZ_2DF50_A0:
	V1 = 0x20000;
	T0 = EMU_ReadU32(S1 + 132); //+ 0x84
	V1 |= 0x9900;
	V0 = T0 + 12800;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	A3 = EMU_ReadU32(GP + 192); //+ 0xC0
	V0 += V1;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S0);
	A0 = S2;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	A3 += T0;
	RA = 0x8002E030; //ZZ_2DF50_E0
	EMU_Write32(SP + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(16,0x8003864C);
	goto ZZ_3864C;
ZZ_2DF50_E0:
	A0 = S0;
	A1 = S1;
	A2 = S2;
	RA = 0x8002E044; //ZZ_2DF50_F4
	A3 = 0x1;
	ZZ_CLOCKCYCLES(5,0x8002D8B8);
	goto ZZ_2D8B8;
ZZ_2DF50_F4:
	RA = EMU_ReadU32(SP + 92); //+ 0x5C
	S2 = EMU_ReadU32(SP + 88); //+ 0x58
	S1 = EMU_ReadU32(SP + 84); //+ 0x54
	S0 = EMU_ReadU32(SP + 80); //+ 0x50
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x8002D42C,ZZ_2D384_A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002DF50,0x8002DF9C,ZZ_2DF50);
ZZ_MARK_TARGET(0x8002DF9C,0x8002DFB8,ZZ_2DF50_4C);
ZZ_MARK_TARGET(0x8002DFB8,0x8002DFEC,ZZ_2DF50_68);
ZZ_MARK_TARGET(0x8002DFEC,0x8002DFF0,ZZ_2DF50_9C);
ZZ_MARK_TARGET(0x8002DFF0,0x8002E030,ZZ_2DF50_A0);
ZZ_MARK_TARGET(0x8002E030,0x8002E044,ZZ_2DF50_E0);
ZZ_MARK_TARGET(0x8002E044,0x8002E060,ZZ_2DF50_F4);
