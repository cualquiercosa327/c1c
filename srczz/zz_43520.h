#ifdef ZZ_INCLUDE_CODE
ZZ_43520:
	SP -= 56;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A2;
	EMU_Write32(SP + 32,S4); //+ 0x20
	S4 = A0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0x3;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = S4 & 0xFF;
	V1 = 0x80050000;
	V1 += 21792;
	EMU_Write32(SP + 36,S5); //+ 0x24
	S5 = 0x80050000;
	S5 = EMU_ReadU32(S5 + 21920); //+ 0x55A0
	V0 = S2 << 2;
	EMU_Write32(SP + 40,S6); //+ 0x28
	S6 = V0 + V1;
	EMU_Write32(SP + 44,S7); //+ 0x2C
	S7 = R0;
	EMU_Write32(SP + 48,RA); //+ 0x30
	V0 = 0x10;
	ZZ_CLOCKCYCLES(23,0x8004357C);
ZZ_43520_5C:
	if (S2 != V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x800435AC);
		goto ZZ_43520_8C;
	}
	V0 = 0x1;
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 21936); //+ 0x55B0
	V0 &= 0x20;
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(8,0x800435AC);
		goto ZZ_43520_8C;
	}
	V0 = 0x1;
	RA = 0x800435A4; //ZZ_43520_84
	S0 -= 1;
	ZZ_CLOCKCYCLES(10,0x80044B30);
	goto ZZ_44B30;
ZZ_43520_84:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80043620);
	goto ZZ_43520_100;
ZZ_43520_8C:
	if (S2 == V0)
	{
		A0 = S4 & 0xFF;
		ZZ_CLOCKCYCLES(2,0x80043600);
		goto ZZ_43520_E0;
	}
	A0 = S4 & 0xFF;
	AT = 0x80050000;
	EMU_Write32(AT + 21920,R0); //+ 0x55A0
	RA = 0x800435C4; //ZZ_43520_A4
	ZZ_CLOCKCYCLES(6,0x80044B30);
	goto ZZ_44B30;
ZZ_43520_A4:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x800435F4);
		goto ZZ_43520_D4;
	}
	V0 = EMU_ReadU32(S6);
	if (!V0)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(6,0x800435F4);
		goto ZZ_43520_D4;
	}
	A0 = 0x2;
	A1 = S1;
	A2 = S3;
	RA = 0x800435EC; //ZZ_43520_CC
	A3 = R0;
	ZZ_CLOCKCYCLES(10,0x80044640);
	goto ZZ_44640;
ZZ_43520_CC:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80043618);
		goto ZZ_43520_F8;
	}
	ZZ_CLOCKCYCLES(2,0x800435F4);
ZZ_43520_D4:
	AT = 0x80050000;
	EMU_Write32(AT + 21920,S5); //+ 0x55A0
	A0 = S4 & 0xFF;
	ZZ_CLOCKCYCLES(3,0x80043600);
ZZ_43520_E0:
	A1 = S1;
	A2 = S3;
	RA = 0x80043610; //ZZ_43520_F0
	A3 = R0;
	ZZ_CLOCKCYCLES(4,0x80044640);
	goto ZZ_44640;
ZZ_43520_F0:
	if (!V0)
	{
		V0 = S7 + 1;
		ZZ_CLOCKCYCLES(2,0x80043638);
		goto ZZ_43520_118;
	}
	V0 = S7 + 1;
	ZZ_CLOCKCYCLES(2,0x80043618);
ZZ_43520_F8:
	S0 -= 1;
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80043620);
ZZ_43520_100:
	if (S0 != V0)
	{
		V0 = 0x10;
		ZZ_CLOCKCYCLES(2,0x8004357C);
		goto ZZ_43520_5C;
	}
	V0 = 0x10;
	AT = 0x80050000;
	EMU_Write32(AT + 21920,S5); //+ 0x55A0
	S7 = -1;
	V0 = S7 + 1;
	ZZ_CLOCKCYCLES(6,0x80043638);
ZZ_43520_118:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S7 = EMU_ReadU32(SP + 44); //+ 0x2C
	S6 = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x800166B0,ZZ_1668C_24);
	ZZ_JUMPREGISTER(0x80015C64,ZZ_15B58_10C);
	ZZ_JUMPREGISTER(0x8002F910,ZZ_2F8C4_4C);
	ZZ_JUMPREGISTER(0x8002F990,ZZ_2F8C4_CC);
	ZZ_JUMPREGISTER(0x8002FAD8,ZZ_2F8C4_214);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80043520,0x8004357C,ZZ_43520);
ZZ_MARK_TARGET(0x8004357C,0x800435A4,ZZ_43520_5C);
ZZ_MARK_TARGET(0x800435A4,0x800435AC,ZZ_43520_84);
ZZ_MARK_TARGET(0x800435AC,0x800435C4,ZZ_43520_8C);
ZZ_MARK_TARGET(0x800435C4,0x800435EC,ZZ_43520_A4);
ZZ_MARK_TARGET(0x800435EC,0x800435F4,ZZ_43520_CC);
ZZ_MARK_TARGET(0x800435F4,0x80043600,ZZ_43520_D4);
ZZ_MARK_TARGET(0x80043600,0x80043610,ZZ_43520_E0);
ZZ_MARK_TARGET(0x80043610,0x80043618,ZZ_43520_F0);
ZZ_MARK_TARGET(0x80043618,0x80043620,ZZ_43520_F8);
ZZ_MARK_TARGET(0x80043620,0x80043638,ZZ_43520_100);
ZZ_MARK_TARGET(0x80043638,0x80043668,ZZ_43520_118);
