#ifdef ZZ_INCLUDE_CODE
ZZ_16E5C:
	A1 = 0x80050000;
	A1 += 31084;
	A0 = 0x80050000;
	A0 += 31080;
	EMU_ReadLeft(A1 + 3,&V0); //+ 0x3
	EMU_ReadRight(A1,&V0);
	EMU_WriteLeft(A0 + 3,V0); //+ 0x3
	EMU_WriteRight(A0,V0);
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25600); //+ 0x6400
	SP -= 48;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = 0x80050000;
	S1 += 31080;
	EMU_Write32(SP + 40,RA); //+ 0x28
	if (V0)
	{
		EMU_Write32(SP + 32,S0); //+ 0x20
		ZZ_CLOCKCYCLES(20,0x80016EDC);
		goto ZZ_16E5C_80;
	}
	EMU_Write32(SP + 32,S0); //+ 0x20
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6320); //+ 0x18B0
	V0 &= 0x1000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(26,0x80016EDC);
		goto ZZ_16E5C_80;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31072); //+ 0x7960
	V0 += 1;
	AT = 0x80050000;
	EMU_Write32(AT + 31072,V0); //+ 0x7960
	ZZ_CLOCKCYCLES(32,0x80016EDC);
ZZ_16E5C_80:
	S0 = 0x80060000;
	S0 += 6708;
	V1 = EMU_ReadU32(S0);
	if (!V1)
	{
		ZZ_CLOCKCYCLES(6,0x80016F7C);
		goto ZZ_16E5C_120;
	}
	if ((int32_t)V1 <= 0)
	{
		V0 = (int32_t)V1 < -2;
		ZZ_CLOCKCYCLES(8,0x80016F1C);
		goto ZZ_16E5C_C0;
	}
	V0 = (int32_t)V1 < -2;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 6712); //+ 0x1A38
	A0 = V1 - A0;
	RA = 0x80016F14; //ZZ_16E5C_B8
	EMU_Write32(S0,A0);
	ZZ_CLOCKCYCLES(14,0x80017448);
	goto ZZ_17448;
ZZ_16E5C_B8:
	ZZ_CLOCKCYCLES(2,0x80016F7C);
	goto ZZ_16E5C_120;
ZZ_16E5C_C0:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80016F34);
		goto ZZ_16E5C_D8;
	}
	RA = 0x80016F2C; //ZZ_16E5C_D0
	A0 = 0x100;
	ZZ_CLOCKCYCLES(4,0x80017448);
	goto ZZ_17448;
ZZ_16E5C_D0:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80016F78);
	goto ZZ_16E5C_11C;
ZZ_16E5C_D8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6712); //+ 0x1A38
	V0 += V1;
	A0 = V0 + 256;
	RA = 0x80016F50; //ZZ_16E5C_F4
	EMU_Write32(S0,V0);
	ZZ_CLOCKCYCLES(7,0x80017448);
	goto ZZ_17448;
ZZ_16E5C_F4:
	V0 = EMU_ReadU32(S0);
	if (V0)
	{
		V1 = 0x200000;
		ZZ_CLOCKCYCLES(4,0x80016F7C);
		goto ZZ_16E5C_120;
	}
	V1 = 0x200000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6320); //+ 0x18B0
	V0 &= V1;
	if (V0)
	{
		V0 = -2;
		ZZ_CLOCKCYCLES(10,0x80016F7C);
		goto ZZ_16E5C_120;
	}
	V0 = -2;
	ZZ_CLOCKCYCLES(10,0x80016F78);
ZZ_16E5C_11C:
	EMU_Write32(S0,V0);
	ZZ_CLOCKCYCLES(1,0x80016F7C);
ZZ_16E5C_120:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6320); //+ 0x18B0
	V0 = 0x80000;
	V0 &= V1;
	if (V0)
	{
		V0 = V1 & 0x2000;
		ZZ_CLOCKCYCLES(6,0x8001704C);
		goto ZZ_16E5C_1F0;
	}
	V0 = V1 & 0x2000;
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(8,0x8001702C);
		goto ZZ_16E5C_1D0;
	}
	A0 = R0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V1 = EMU_ReadU8(S1 + 1); //+ 0x1
	A2 = EMU_ReadU8(S1 + 2); //+ 0x2
	A3 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU8(S1);
	A1 = R0;
	EMU_Write32(SP + 20,V1); //+ 0x14
	EMU_Write32(SP + 24,A2); //+ 0x18
	EMU_Write32(SP + 16,V0); //+ 0x10
	A3 = EMU_ReadU32(A3 + 736); //+ 0x2E0
	RA = 0x80016FD0; //ZZ_16E5C_174
	A2 = 0x200;
	ZZ_CLOCKCYCLES(21,0x80017358);
	goto ZZ_17358;
ZZ_16E5C_174:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V1 = EMU_ReadU8(A1 + 784); //+ 0x310
	T0 = EMU_ReadU32(A1 + 736); //+ 0x2E0
	EMU_Write32(SP + 16,V1); //+ 0x10
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	V0 = EMU_ReadU8(V0 + 785); //+ 0x311
	A0 = R0;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	A2 = 0x200;
	V0 = EMU_ReadU8(V0 + 786); //+ 0x312
	A3 = 0xD8;
	EMU_Write32(SP + 24,V0); //+ 0x18
	A1 = EMU_ReadU32(A1 + 736); //+ 0x2E0
	A3 = A3 - T0;
	ZZ_CLOCKCYCLES(23,0x80017044);
	goto ZZ_16E5C_1E8;
ZZ_16E5C_1D0:
	A1 = R0;
	A2 = 0x200;
	A3 = 0xD8;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(6,0x80017044);
ZZ_16E5C_1E8:
	RA = 0x8001704C; //ZZ_16E5C_1F0
	ZZ_CLOCKCYCLES(2,0x80017358);
	goto ZZ_17358;
ZZ_16E5C_1F0:
	RA = 0x80017054; //ZZ_16E5C_1F8
	ZZ_CLOCKCYCLES(2,0x80030CC0);
	goto ZZ_30CC0;
ZZ_16E5C_1F8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31736); //+ 0xFFFF8408
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	A0 = R0;
	RA = 0x80017070; //ZZ_16E5C_214
	EMU_Write32(V1 + 128,V0); //+ 0x80
	ZZ_CLOCKCYCLES(7,0x8004025C);
	goto ZZ_4025C;
ZZ_16E5C_214:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6704); //+ 0x1A30
	if (V0)
	{
		V0 = 0x11;
		ZZ_CLOCKCYCLES(5,0x800170B0);
		goto ZZ_16E5C_254;
	}
	V0 = 0x11;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31736); //+ 0xFFFF8408
	V1 = 0x80030000;
	V1 = EMU_ReadU32(V1 + 17696); //+ 0x4520
	V0 = EMU_ReadU32(V0 + 124); //+ 0x7C
	V1 = V1 - V0;
	AT = 0x80060000;
	EMU_Write32(AT + 6456,V1); //+ 0x1938
	ZZ_CLOCKCYCLES(16,0x800170B8);
	goto ZZ_16E5C_25C;
ZZ_16E5C_254:
	AT = 0x80060000;
	EMU_Write32(AT + 6456,V0); //+ 0x1938
	ZZ_CLOCKCYCLES(2,0x800170B8);
ZZ_16E5C_25C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15028); //+ 0xFFFFC54C
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x800170F4);
		goto ZZ_16E5C_298;
	}
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31736); //+ 0xFFFF8408
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31732); //+ 0xFFFF840C
	AT = 0x80060000;
	EMU_Write32(AT - 31740,V1); //+ 0xFFFF8404
	AT = 0x80060000;
	EMU_Write32(AT - 31736,V0); //+ 0xFFFF8408
	AT = 0x80060000;
	EMU_Write32(AT - 31732,V1); //+ 0xFFFF840C
	ZZ_CLOCKCYCLES(15,0x800170F4);
ZZ_16E5C_298:
	RA = 0x800170FC; //ZZ_16E5C_2A0
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_16E5C_2A0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31740); //+ 0xFFFF8404
	V1 = 0x80030000;
	V1 = EMU_ReadU32(V1 + 17696); //+ 0x4520
	V0 = EMU_ReadU32(V0 + 124); //+ 0x7C
	V1 = V1 - V0;
	V1 = V1 < 25;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(10,0x8001712C);
		goto ZZ_16E5C_2D0;
	}
	RA = 0x8001712C; //ZZ_16E5C_2D0
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_16E5C_2D0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6320); //+ 0x18B0
	V1 = 0x100000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800171A0);
		goto ZZ_16E5C_344;
	}
	V0 = EMU_ReadU32(GP + 48); //+ 0x30
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(10,0x80017174);
		goto ZZ_16E5C_318;
	}
	V0 = 0x1;
	RA = 0x8001715C; //ZZ_16E5C_300
	ZZ_CLOCKCYCLES(12,0x8003E1F8);
	goto ZZ_3E1F8;
ZZ_16E5C_300:
	A0 = 0xF2000000;
	RA = 0x80017168; //ZZ_16E5C_30C
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8003E3A4);
	goto ZZ_3E3A4;
ZZ_16E5C_30C:
	RA = 0x80017170; //ZZ_16E5C_314
	ZZ_CLOCKCYCLES(2,0x8003E208);
	goto ZZ_3E208;
ZZ_16E5C_314:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80017174);
ZZ_16E5C_318:
	EMU_Write32(GP + 48,V0); //+ 0x30
	RA = 0x80017180; //ZZ_16E5C_324
	ZZ_CLOCKCYCLES(3,0x8003A94C);
	goto ZZ_3A94C;
ZZ_16E5C_324:
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	V0 += 34;
	AT = 0x80030000;
	EMU_Write32(AT + 17696,V0); //+ 0x4520
	ZZ_CLOCKCYCLES(8,0x800171D0);
	goto ZZ_16E5C_374;
ZZ_16E5C_344:
	V0 = EMU_ReadU32(GP + 48); //+ 0x30
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800171CC);
		goto ZZ_16E5C_370;
	}
	RA = 0x800171B8; //ZZ_16E5C_35C
	ZZ_CLOCKCYCLES(6,0x8003E1F8);
	goto ZZ_3E1F8;
ZZ_16E5C_35C:
	A0 = 0xF2000000;
	RA = 0x800171C4; //ZZ_16E5C_368
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8003E370);
	goto ZZ_3E370;
ZZ_16E5C_368:
	RA = 0x800171CC; //ZZ_16E5C_370
	ZZ_CLOCKCYCLES(2,0x8003E208);
	goto ZZ_3E208;
ZZ_16E5C_370:
	EMU_Write32(GP + 48,R0); //+ 0x30
	ZZ_CLOCKCYCLES(1,0x800171D0);
ZZ_16E5C_374:
	RA = 0x800171D8; //ZZ_16E5C_37C
	ZZ_CLOCKCYCLES(2,0x8003E1F8);
	goto ZZ_3E1F8;
ZZ_16E5C_37C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6704); //+ 0x1A30
	V0 = 0x2;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x80017200);
		goto ZZ_16E5C_3A4;
	}
	V0 = EMU_ReadU32(GP + 684); //+ 0x2AC
	V0 = EMU_ReadU32(V0);
	AT = 0x80030000;
	EMU_Write32(AT + 17696,V0); //+ 0x4520
	ZZ_CLOCKCYCLES(10,0x80017200);
ZZ_16E5C_3A4:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31736); //+ 0xFFFF8408
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	RA = 0x80017218; //ZZ_16E5C_3BC
	EMU_Write32(V1 + 124,V0); //+ 0x7C
	ZZ_CLOCKCYCLES(6,0x8003E208);
	goto ZZ_3E208;
ZZ_16E5C_3BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31736); //+ 0xFFFF8408
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31740); //+ 0xFFFF8404
	V0 = EMU_ReadU32(V0 + 124); //+ 0x7C
	A0 = EMU_ReadU32(V1 + 124); //+ 0x7C
	RA = 0x80017238; //ZZ_16E5C_3DC
	A0 = V0 - A0;
	ZZ_CLOCKCYCLES(8,0x800175D0);
	goto ZZ_175D0;
ZZ_16E5C_3DC:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31740); //+ 0xFFFF8404
	EMU_Write32(V1 + 132,V0); //+ 0x84
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31740); //+ 0xFFFF8404
	RA = 0x80017258; //ZZ_16E5C_3FC
	A0 += 4;
	ZZ_CLOCKCYCLES(8,0x80040A0C);
	goto ZZ_40A0C;
ZZ_16E5C_3FC:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31736); //+ 0xFFFF8408
	RA = 0x80017268; //ZZ_16E5C_40C
	A0 += 24;
	ZZ_CLOCKCYCLES(4,0x80040834);
	goto ZZ_40834;
ZZ_16E5C_40C:
	V1 = 0x80060000;
	V1 -= 15028;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(6,0x80017284);
		goto ZZ_16E5C_428;
	}
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(7,0x80017284);
ZZ_16E5C_428:
	V0 = EMU_ReadU32(V1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x800172A4);
		goto ZZ_16E5C_448;
	}
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31736); //+ 0xFFFF8408
	RA = 0x800172A4; //ZZ_16E5C_448
	A0 += 136;
	ZZ_CLOCKCYCLES(8,0x800407C0);
	goto ZZ_407C0;
ZZ_16E5C_448:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31732); //+ 0xFFFF840C
	A1 = 0x800;
	V1 = EMU_ReadU32(V0 + 116); //+ 0x74
	A0 = V0 + 136;
	RA = 0x800172C0; //ZZ_16E5C_464
	EMU_Write32(V0 + 120,V1); //+ 0x78
	ZZ_CLOCKCYCLES(7,0x800342D8);
	goto ZZ_342D8;
ZZ_16E5C_464:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6300); //+ 0x189C
	AT = 0x80060000;
	EMU_Write32(AT + 6320,V0); //+ 0x18B0
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	
	
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80016E5C,0x80016EDC,ZZ_16E5C);
ZZ_MARK_TARGET(0x80016EDC,0x80016F14,ZZ_16E5C_80);
ZZ_MARK_TARGET(0x80016F14,0x80016F1C,ZZ_16E5C_B8);
ZZ_MARK_TARGET(0x80016F1C,0x80016F2C,ZZ_16E5C_C0);
ZZ_MARK_TARGET(0x80016F2C,0x80016F34,ZZ_16E5C_D0);
ZZ_MARK_TARGET(0x80016F34,0x80016F50,ZZ_16E5C_D8);
ZZ_MARK_TARGET(0x80016F50,0x80016F78,ZZ_16E5C_F4);
ZZ_MARK_TARGET(0x80016F78,0x80016F7C,ZZ_16E5C_11C);
ZZ_MARK_TARGET(0x80016F7C,0x80016FD0,ZZ_16E5C_120);
ZZ_MARK_TARGET(0x80016FD0,0x8001702C,ZZ_16E5C_174);
ZZ_MARK_TARGET(0x8001702C,0x80017044,ZZ_16E5C_1D0);
ZZ_MARK_TARGET(0x80017044,0x8001704C,ZZ_16E5C_1E8);
ZZ_MARK_TARGET(0x8001704C,0x80017054,ZZ_16E5C_1F0);
ZZ_MARK_TARGET(0x80017054,0x80017070,ZZ_16E5C_1F8);
ZZ_MARK_TARGET(0x80017070,0x800170B0,ZZ_16E5C_214);
ZZ_MARK_TARGET(0x800170B0,0x800170B8,ZZ_16E5C_254);
ZZ_MARK_TARGET(0x800170B8,0x800170F4,ZZ_16E5C_25C);
ZZ_MARK_TARGET(0x800170F4,0x800170FC,ZZ_16E5C_298);
ZZ_MARK_TARGET(0x800170FC,0x8001712C,ZZ_16E5C_2A0);
ZZ_MARK_TARGET(0x8001712C,0x8001715C,ZZ_16E5C_2D0);
ZZ_MARK_TARGET(0x8001715C,0x80017168,ZZ_16E5C_300);
ZZ_MARK_TARGET(0x80017168,0x80017170,ZZ_16E5C_30C);
ZZ_MARK_TARGET(0x80017170,0x80017174,ZZ_16E5C_314);
ZZ_MARK_TARGET(0x80017174,0x80017180,ZZ_16E5C_318);
ZZ_MARK_TARGET(0x80017180,0x800171A0,ZZ_16E5C_324);
ZZ_MARK_TARGET(0x800171A0,0x800171B8,ZZ_16E5C_344);
ZZ_MARK_TARGET(0x800171B8,0x800171C4,ZZ_16E5C_35C);
ZZ_MARK_TARGET(0x800171C4,0x800171CC,ZZ_16E5C_368);
ZZ_MARK_TARGET(0x800171CC,0x800171D0,ZZ_16E5C_370);
ZZ_MARK_TARGET(0x800171D0,0x800171D8,ZZ_16E5C_374);
ZZ_MARK_TARGET(0x800171D8,0x80017200,ZZ_16E5C_37C);
ZZ_MARK_TARGET(0x80017200,0x80017218,ZZ_16E5C_3A4);
ZZ_MARK_TARGET(0x80017218,0x80017238,ZZ_16E5C_3BC);
ZZ_MARK_TARGET(0x80017238,0x80017258,ZZ_16E5C_3DC);
ZZ_MARK_TARGET(0x80017258,0x80017268,ZZ_16E5C_3FC);
ZZ_MARK_TARGET(0x80017268,0x80017284,ZZ_16E5C_40C);
ZZ_MARK_TARGET(0x80017284,0x800172A4,ZZ_16E5C_428);
ZZ_MARK_TARGET(0x800172A4,0x800172C0,ZZ_16E5C_448);
ZZ_MARK_TARGET(0x800172C0,0x800172E8,ZZ_16E5C_464);
