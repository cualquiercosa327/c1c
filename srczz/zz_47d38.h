#ifdef ZZ_INCLUDE_CODE
ZZ_47D38:
	SP -= 56;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 44,S5); //+ 0x2C
	V0 = S0 < 10;
	EMU_Write32(SP + 48,RA); //+ 0x30
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 16,R0); //+ 0x10
	if (!V0)
	{
		S5 = R0;
		ZZ_CLOCKCYCLES(13,0x80047D90);
		goto ZZ_47D38_58;
	}
	S5 = R0;
	V1 = 0x80050000;
	V1 += 23980;
	V0 = S0 << 2;
	S1 = V0 + V1;
	A0 = EMU_ReadU32(S1);
	RA = 0x80047D88; //ZZ_47D38_50
	ZZ_CLOCKCYCLES(20,0x80047190);
	goto ZZ_47190;
ZZ_47D38_50:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80047D98);
		goto ZZ_47D38_60;
	}
	ZZ_CLOCKCYCLES(2,0x80047D90);
ZZ_47D38_58:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80047EAC);
	goto ZZ_47D38_174;
ZZ_47D38_60:
	if (S0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(2,0x80047DBC);
		goto ZZ_47D38_84;
	}
	V0 = 0x10000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22792); //+ 0x5908
	V1 = 0x10;
	S1 = V1 << V0;
	V1 = 0xFFF0;
	S2 = V1 << V0;
	ZZ_CLOCKCYCLES(9,0x80047DD4);
	goto ZZ_47D38_9C;
ZZ_47D38_84:
	A0 = EMU_ReadU32(S1);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22792); //+ 0x5908
	V0 = V0 - A0;
	S1 = V0 << V1;
	S2 = A0 << V1;
	ZZ_CLOCKCYCLES(6,0x80047DD4);
ZZ_47D38_9C:
	S4 = 0x80050000;
	S4 = EMU_ReadU32(S4 + 22780); //+ 0x58FC
	V0 = 0x1;
	if (S4 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x80047DF4);
		goto ZZ_47D38_BC;
	}
	AT = 0x80050000;
	EMU_Write32(AT + 22780,R0); //+ 0x58FC
	S5 = 0x1;
	ZZ_CLOCKCYCLES(8,0x80047DF4);
ZZ_47D38_BC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22808); //+ 0x5918
	if (!V0)
	{
		S3 = 0x1;
		ZZ_CLOCKCYCLES(5,0x80047E20);
		goto ZZ_47D38_E8;
	}
	S3 = 0x1;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22808); //+ 0x5918
	EMU_Write32(SP + 16,V0); //+ 0x10
	AT = 0x80050000;
	EMU_Write32(AT + 22808,R0); //+ 0x5918
	ZZ_CLOCKCYCLES(11,0x80047E20);
ZZ_47D38_E8:
	V0 = S1 < 1025;
	ZZ_CLOCKCYCLES(1,0x80047E24);
ZZ_47D38_EC:
	if (V0)
	{
		S0 = S1;
		ZZ_CLOCKCYCLES(2,0x80047E34);
		goto ZZ_47D38_FC;
	}
	S0 = S1;
	S0 = 0x400;
	ZZ_CLOCKCYCLES(4,0x80047E38);
	goto ZZ_47D38_100;
ZZ_47D38_FC:
	S3 = R0;
	ZZ_CLOCKCYCLES(1,0x80047E38);
ZZ_47D38_100:
	A0 = 0x2;
	RA = 0x80047E44; //ZZ_47D38_10C
	A1 = S2;
	ZZ_CLOCKCYCLES(3,0x80046A20);
	goto ZZ_46A20;
ZZ_47D38_10C:
	RA = 0x80047E4C; //ZZ_47D38_114
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80046A20);
	goto ZZ_46A20;
ZZ_47D38_114:
	A0 = 0x3;
	A1 = 0x80050000;
	A1 += 22952;
	RA = 0x80047E60; //ZZ_47D38_128
	A2 = S0;
	ZZ_CLOCKCYCLES(5,0x80046A20);
	goto ZZ_46A20;
ZZ_47D38_128:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 22944); //+ 0x59A0
	S1 -= 1024;
	RA = 0x80047E74; //ZZ_47D38_13C
	S2 += 1024;
	ZZ_CLOCKCYCLES(5,0x80047ED4);
	goto ZZ_47ED4;
ZZ_47D38_13C:
	if (S3)
	{
		V0 = S1 < 1025;
		ZZ_CLOCKCYCLES(2,0x80047E24);
		goto ZZ_47D38_EC;
	}
	V0 = S1 < 1025;
	if (!S5)
	{
		ZZ_CLOCKCYCLES(4,0x80047E8C);
		goto ZZ_47D38_154;
	}
	AT = 0x80050000;
	EMU_Write32(AT + 22780,S4); //+ 0x58FC
	ZZ_CLOCKCYCLES(6,0x80047E8C);
ZZ_47D38_154:
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(4,0x80047EAC);
		goto ZZ_47D38_174;
	}
	V0 = R0;
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	AT = 0x80050000;
	EMU_Write32(AT + 22808,V0); //+ 0x5918
	V0 = R0;
	ZZ_CLOCKCYCLES(8,0x80047EAC);
ZZ_47D38_174:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x800476A4,ZZ_47208_49C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047D38,0x80047D88,ZZ_47D38);
ZZ_MARK_TARGET(0x80047D88,0x80047D90,ZZ_47D38_50);
ZZ_MARK_TARGET(0x80047D90,0x80047D98,ZZ_47D38_58);
ZZ_MARK_TARGET(0x80047D98,0x80047DBC,ZZ_47D38_60);
ZZ_MARK_TARGET(0x80047DBC,0x80047DD4,ZZ_47D38_84);
ZZ_MARK_TARGET(0x80047DD4,0x80047DF4,ZZ_47D38_9C);
ZZ_MARK_TARGET(0x80047DF4,0x80047E20,ZZ_47D38_BC);
ZZ_MARK_TARGET(0x80047E20,0x80047E24,ZZ_47D38_E8);
ZZ_MARK_TARGET(0x80047E24,0x80047E34,ZZ_47D38_EC);
ZZ_MARK_TARGET(0x80047E34,0x80047E38,ZZ_47D38_FC);
ZZ_MARK_TARGET(0x80047E38,0x80047E44,ZZ_47D38_100);
ZZ_MARK_TARGET(0x80047E44,0x80047E4C,ZZ_47D38_10C);
ZZ_MARK_TARGET(0x80047E4C,0x80047E60,ZZ_47D38_114);
ZZ_MARK_TARGET(0x80047E60,0x80047E74,ZZ_47D38_128);
ZZ_MARK_TARGET(0x80047E74,0x80047E8C,ZZ_47D38_13C);
ZZ_MARK_TARGET(0x80047E8C,0x80047EAC,ZZ_47D38_154);
ZZ_MARK_TARGET(0x80047EAC,0x80047ED4,ZZ_47D38_174);
