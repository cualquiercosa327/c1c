#ifdef ZZ_INCLUDE_CODE
ZZ_1177C:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x800117F4);
		goto ZZ_1177C_78;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26016); //+ 0x65A0
	V0 = V1 < A0;
	if (V0)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(8,0x800117A4);
		goto ZZ_1177C_28;
	}
	A1 = A0;
	A1 = V1;
	ZZ_CLOCKCYCLES(10,0x800117A8);
	goto ZZ_1177C_2C;
ZZ_1177C_28:
	A0 = V1;
	ZZ_CLOCKCYCLES(1,0x800117A8);
ZZ_1177C_2C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26024); //+ 0x65A8
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26008); //+ 0x6598
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 2;
	V0 <<= 2;
	V1 = V0 - 8;
	V0 = (int32_t)V1 < (int32_t)A1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x800117E0);
		goto ZZ_1177C_64;
	}
	A0 = A1;
	ZZ_CLOCKCYCLES(14,0x80011814);
	goto ZZ_1177C_98;
ZZ_1177C_64:
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80011814);
		goto ZZ_1177C_98;
	}
	ZZ_CLOCKCYCLES(3,0x800117EC);
ZZ_1177C_70:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80011868);
	goto ZZ_1177C_EC;
ZZ_1177C_78:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26008); //+ 0x6598
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26024); //+ 0x65A8
	V0 = V0 < V1;
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(8,0x800117EC);
		goto ZZ_1177C_70;
	}
	A0 = R0;
	ZZ_CLOCKCYCLES(8,0x80011814);
ZZ_1177C_98:
	if ((int32_t)A0 >= 0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(2,0x80011820);
		goto ZZ_1177C_A4;
	}
	V0 = A0;
	V0 = A0 + 3;
	ZZ_CLOCKCYCLES(3,0x80011820);
ZZ_1177C_A4:
	A1 = A0 + 4;
	V0 = (int32_t)V0 >> 2;
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 26008); //+ 0x6598
	V0 <<= 2;
	V1 = -2;
	V0 += A2;
	EMU_Write32(V0,V1);
	V0 = A0 | 0x1;
	if ((int32_t)A1 >= 0)
	{
		EMU_Write32(A2 - 4,V0); //+ 0xFFFFFFFC
		ZZ_CLOCKCYCLES(11,0x80011850);
		goto ZZ_1177C_D4;
	}
	EMU_Write32(A2 - 4,V0); //+ 0xFFFFFFFC
	A1 = A0 + 7;
	ZZ_CLOCKCYCLES(12,0x80011850);
ZZ_1177C_D4:
	V0 = (int32_t)A1 >> 2;
	V0 <<= 2;
	V0 += A2;
	AT = 0x80050000;
	EMU_Write32(AT + 26008,V0); //+ 0x6598
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x80011868);
ZZ_1177C_EC:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80011AD0,ZZ_11A58_78);
	ZZ_JUMPREGISTER(0x80011C10,ZZ_11A58_1B8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001177C,0x800117A4,ZZ_1177C);
ZZ_MARK_TARGET(0x800117A4,0x800117A8,ZZ_1177C_28);
ZZ_MARK_TARGET(0x800117A8,0x800117E0,ZZ_1177C_2C);
ZZ_MARK_TARGET(0x800117E0,0x800117EC,ZZ_1177C_64);
ZZ_MARK_TARGET(0x800117EC,0x800117F4,ZZ_1177C_70);
ZZ_MARK_TARGET(0x800117F4,0x80011814,ZZ_1177C_78);
ZZ_MARK_TARGET(0x80011814,0x80011820,ZZ_1177C_98);
ZZ_MARK_TARGET(0x80011820,0x80011850,ZZ_1177C_A4);
ZZ_MARK_TARGET(0x80011850,0x80011868,ZZ_1177C_D4);
ZZ_MARK_TARGET(0x80011868,0x80011870,ZZ_1177C_EC);
