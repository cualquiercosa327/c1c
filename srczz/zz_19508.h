#ifdef ZZ_INCLUDE_CODE
ZZ_19508:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26296); //+ 0x66B8
	SP -= 40;
	EMU_Write32(SP + 32,RA); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V0 = EMU_ReadU16(V0);
	if (!V0)
	{
		S1 = A0;
		ZZ_CLOCKCYCLES(10,0x800195B4);
		goto ZZ_19508_AC;
	}
	S1 = A0;
	S0 = 0x80050000;
	S0 += 30692;
	RA = 0x80019540; //ZZ_19508_38
	A0 = S0;
	ZZ_CLOCKCYCLES(14,0x80042E9C);
	goto ZZ_42E9C;
ZZ_19508_38:
	RA = 0x80019548; //ZZ_19508_40
	A0 = S0 + 272;
	ZZ_CLOCKCYCLES(2,0x80042ECC);
	goto ZZ_42ECC;
ZZ_19508_40:
	A1 = 0x1F800000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A1 |= 0x100;
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A2 = 0x100;
	RA = 0x80019568; //ZZ_19508_60
	A0 += 4;
	ZZ_CLOCKCYCLES(8,0x80033FBC);
	goto ZZ_33FBC;
ZZ_19508_60:
	RA = 0x80019570; //ZZ_19508_68
	ZZ_CLOCKCYCLES(2,0x80016E18);
	goto ZZ_16E18;
ZZ_19508_68:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 26296); //+ 0x66B8
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 30928); //+ 0x78D0
	A3 = 0x80050000;
	A3 = EMU_ReadU32(A3 + 31072); //+ 0x7960
	A1 = S1;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x80050000;
	V0 += 6004;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = A2 >> 31;
	A2 += V0;
	A2 = (int32_t)A2 >> 1;
	V0 = 0x800;
	RA = 0x800195B4; //ZZ_19508_AC
	A2 = V0 - A2;
	ZZ_CLOCKCYCLES(17,0x80035438);
	goto ZZ_35438;
ZZ_19508_AC:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80019508,0x80019540,ZZ_19508);
ZZ_MARK_TARGET(0x80019540,0x80019548,ZZ_19508_38);
ZZ_MARK_TARGET(0x80019548,0x80019568,ZZ_19508_40);
ZZ_MARK_TARGET(0x80019568,0x80019570,ZZ_19508_60);
ZZ_MARK_TARGET(0x80019570,0x800195B4,ZZ_19508_68);
ZZ_MARK_TARGET(0x800195B4,0x800195CC,ZZ_19508_AC);
