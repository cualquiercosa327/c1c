#ifdef ZZ_INCLUDE_CODE
ZZ_1E3D4:
	SP -= 160;
	EMU_Write32(SP + 144,S6); //+ 0x90
	S6 = EMU_ReadU32(SP + 180); //+ 0xB4
	T0 = 0x1;
	EMU_Write32(SP + 112,T0); //+ 0x70
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	EMU_Write32(SP + 132,S3); //+ 0x84
	S3 = A0;
	EMU_Write32(SP + 120,S0); //+ 0x78
	S0 = A1;
	EMU_Write32(SP + 152,FP); //+ 0x98
	FP = A3;
	EMU_Write32(SP + 148,S7); //+ 0x94
	S7 = R0;
	EMU_Write32(SP + 156,RA); //+ 0x9C
	EMU_Write32(SP + 140,S5); //+ 0x8C
	EMU_Write32(SP + 136,S4); //+ 0x88
	EMU_Write32(SP + 128,S2); //+ 0x80
	EMU_Write32(SP + 124,S1); //+ 0x7C
	EMU_Write32(SP + 88,A2); //+ 0x58
	EMU_Write32(SP + 96,R0); //+ 0x60
	if (!T0)
	{
		EMU_Write32(SP + 104,R0); //+ 0x68
		ZZ_CLOCKCYCLES(23,0x8001E464);
		goto ZZ_1E3D4_90;
	}
	EMU_Write32(SP + 104,R0); //+ 0x68
	V1 = EMU_ReadU32(S3 + 204); //+ 0xCC
	V0 = 0x4000000;
	V1 &= V0;
	if (!V1)
	{
		EMU_Write32(SP + 104,V1); //+ 0x68
		ZZ_CLOCKCYCLES(28,0x8001E464);
		goto ZZ_1E3D4_90;
	}
	EMU_Write32(SP + 104,V1); //+ 0x68
	V0 = 0xF0000;
	V0 |= 0x423F;
	V1 = 0xFFF00000;
	V1 |= 0xBDC1;
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 68,V1); //+ 0x44
	EMU_Write32(SP + 72,V1); //+ 0x48
	ZZ_CLOCKCYCLES(36,0x8001E464);
ZZ_1E3D4_90:
	T0 = EMU_ReadU32(SP + 88); //+ 0x58
	EMU_Write32(SP + 32,T0); //+ 0x20
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		S1 = 0x190;
		ZZ_CLOCKCYCLES(7,0x8001E734);
		goto ZZ_1E3D4_360;
	}
	S1 = 0x190;
	S5 = 0x7E;
	S2 = SP + 80;
	V0 = EMU_ReadU8(S0);
	ZZ_CLOCKCYCLES(10,0x8001E48C);
ZZ_1E3D4_B8:
	if (V0 != S5)
	{
		S4 = 0x190;
		ZZ_CLOCKCYCLES(3,0x8001E5F8);
		goto ZZ_1E3D4_224;
	}
	S4 = 0x190;
	ZZ_CLOCKCYCLES(3,0x8001E498);
ZZ_1E3D4_C4:
	S0 += 1;
	V1 = EMU_ReadU8(S0);
	V0 = 0x6E;
	if (V1 == V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(5,0x8001E5E0);
		goto ZZ_1E3D4_20C;
	}
	S0 += 1;
	V0 = (int32_t)V1 < 111;
	if (!V0)
	{
		V0 = 0x25;
		ZZ_CLOCKCYCLES(8,0x8001E4D0);
		goto ZZ_1E3D4_FC;
	}
	V0 = 0x25;
	if (V1 == V0)
	{
		V0 = 0x63;
		ZZ_CLOCKCYCLES(10,0x8001E5E0);
		goto ZZ_1E3D4_20C;
	}
	V0 = 0x63;
	if (V1 == V0)
	{
		V0 = S1 << S6;
		ZZ_CLOCKCYCLES(12,0x8001E4EC);
		goto ZZ_1E3D4_118;
	}
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(14,0x8001E5FC);
	goto ZZ_1E3D4_228;
ZZ_1E3D4_FC:
	V0 = 0x70;
	if (V1 == V0)
	{
		V0 = 0x73;
		ZZ_CLOCKCYCLES(3,0x8001E510);
		goto ZZ_1E3D4_13C;
	}
	V0 = 0x73;
	if (V1 == V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(5,0x8001E558);
		goto ZZ_1E3D4_184;
	}
	A1 = R0;
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(7,0x8001E5FC);
	goto ZZ_1E3D4_228;
ZZ_1E3D4_118:
	V0 = EMU_ReadU8(S0);
	S0 += 1;
	V1 = EMU_ReadU8(S0);
	V0 ^= 0x31;
	V0 = V0 < 1;
	if (V1 == S5)
	{
		EMU_Write32(SP + 112,V0); //+ 0x70
		ZZ_CLOCKCYCLES(7,0x8001E498);
		goto ZZ_1E3D4_C4;
	}
	EMU_Write32(SP + 112,V0); //+ 0x70
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(9,0x8001E5FC);
	goto ZZ_1E3D4_228;
ZZ_1E3D4_13C:
	V1 = EMU_ReadU8(S0);
	V0 = EMU_ReadU32(S3 + 220); //+ 0xDC
	V1 -= 46;
	V1 <<= 2;
	V0 = V0 - V1;
	V1 = EMU_ReadU32(V0);
	V0 = 0x1;
	if (V1 != V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(9,0x8001E538);
		goto ZZ_1E3D4_164;
	}
	S0 += 1;
	S0 += 1;
	ZZ_CLOCKCYCLES(10,0x8001E538);
ZZ_1E3D4_164:
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E734);
		goto ZZ_1E3D4_360;
	}
	if (V0 == S5)
	{
		V0 = S1 << S6;
		ZZ_CLOCKCYCLES(6,0x8001E498);
		goto ZZ_1E3D4_C4;
	}
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(8,0x8001E5FC);
	goto ZZ_1E3D4_228;
ZZ_1E3D4_184:
	V1 = EMU_ReadU8(S0);
	S0 += 1;
	A0 = EMU_ReadU8(S0);
	if (A0 == S5)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(6,0x8001E594);
		goto ZZ_1E3D4_1C0;
	}
	S0 += 1;
	A2 = 0x7E;
	V0 = S2;
	ZZ_CLOCKCYCLES(8,0x8001E578);
ZZ_1E3D4_1A4:
	EMU_Write8(V0,A0);
	V0 += 1;
	A1 += 1;
	A0 = EMU_ReadU8(S0);
	if (A0 != A2)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(7,0x8001E578);
		goto ZZ_1E3D4_1A4;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(7,0x8001E594);
ZZ_1E3D4_1C0:
	V0 = S2 + A1;
	EMU_Write8(V0,R0);
	V1 &= 0xFF;
	V0 = 0x78;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001E5BC);
		goto ZZ_1E3D4_1E8;
	}
	RA = 0x8001E5B4; //ZZ_1E3D4_1E0
	A0 = S2;
	ZZ_CLOCKCYCLES(8,0x8003D690);
	goto ZZ_3D690;
ZZ_1E3D4_1E0:
	S1 = V0;
	ZZ_CLOCKCYCLES(2,0x8001E5C8);
	goto ZZ_1E3D4_1F4;
ZZ_1E3D4_1E8:
	RA = 0x8001E5C4; //ZZ_1E3D4_1F0
	A0 = S2;
	ZZ_CLOCKCYCLES(2,0x8003D690);
	goto ZZ_3D690;
ZZ_1E3D4_1F0:
	S4 = V0;
	ZZ_CLOCKCYCLES(1,0x8001E5C8);
ZZ_1E3D4_1F4:
	V0 = EMU_ReadU8(S0);
	if (V0 == S5)
	{
		V0 = S1 << S6;
		ZZ_CLOCKCYCLES(4,0x8001E498);
		goto ZZ_1E3D4_C4;
	}
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(6,0x8001E5FC);
	goto ZZ_1E3D4_228;
ZZ_1E3D4_20C:
	V0 = EMU_ReadS16(FP + 18); //+ 0x12
	T0 = EMU_ReadU32(SP + 88); //+ 0x58
	V0 <<= S6;
	S7 = S7 - V0;
	EMU_Write32(SP + 32,T0); //+ 0x20
	ZZ_CLOCKCYCLES(6,0x8001E720);
	goto ZZ_1E3D4_34C;
ZZ_1E3D4_224:
	V0 = S1 << S6;
	ZZ_CLOCKCYCLES(1,0x8001E5FC);
ZZ_1E3D4_228:
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	V1 = EMU_ReadU8(S0);
	A2 = V0 + A0;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 -= 376;
	S1 = FP + V0;
	EMU_Write32(SP + 44,A2); //+ 0x2C
	V0 = EMU_ReadS16(S1 + 10); //+ 0xA
	T0 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 <<= S6;
	A3 = S7 + V0;
	V0 = S4 << S6;
	A1 = A3 - V0;
	V0 = (int32_t)T0 < (int32_t)A2;
	EMU_Write32(SP + 48,A3); //+ 0x30
	if (!V0)
	{
		EMU_Write32(SP + 36,A1); //+ 0x24
		ZZ_CLOCKCYCLES(19,0x8001E64C);
		goto ZZ_1E3D4_278;
	}
	EMU_Write32(SP + 36,A1); //+ 0x24
	EMU_Write32(SP + 96,A2); //+ 0x60
	ZZ_CLOCKCYCLES(20,0x8001E64C);
ZZ_1E3D4_278:
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E70C);
		goto ZZ_1E3D4_338;
	}
	V0 = EMU_ReadU32(S1);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001E70C);
		goto ZZ_1E3D4_338;
	}
	T0 = EMU_ReadU32(SP + 104); //+ 0x68
	if (!T0)
	{
		ZZ_CLOCKCYCLES(12,0x8001E6E0);
		goto ZZ_1E3D4_30C;
	}
	V1 = EMU_ReadU32(SP + 56); //+ 0x38
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(17,0x8001E694);
		goto ZZ_1E3D4_2C0;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(18,0x8001E694);
ZZ_1E3D4_2C0:
	A0 = EMU_ReadU32(SP + 60); //+ 0x3C
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		EMU_Write32(SP + 56,V1); //+ 0x38
		ZZ_CLOCKCYCLES(5,0x8001E6AC);
		goto ZZ_1E3D4_2D8;
	}
	EMU_Write32(SP + 56,V1); //+ 0x38
	A0 = A1;
	ZZ_CLOCKCYCLES(6,0x8001E6AC);
ZZ_1E3D4_2D8:
	A1 = EMU_ReadU32(SP + 68); //+ 0x44
	V0 = (int32_t)A1 < (int32_t)A2;
	if (!V0)
	{
		EMU_Write32(SP + 60,A0); //+ 0x3C
		ZZ_CLOCKCYCLES(5,0x8001E6C4);
		goto ZZ_1E3D4_2F0;
	}
	EMU_Write32(SP + 60,A0); //+ 0x3C
	A1 = A2;
	ZZ_CLOCKCYCLES(6,0x8001E6C4);
ZZ_1E3D4_2F0:
	V1 = EMU_ReadU32(SP + 72); //+ 0x48
	V0 = (int32_t)V1 < (int32_t)A3;
	if (!V0)
	{
		EMU_Write32(SP + 68,A1); //+ 0x44
		ZZ_CLOCKCYCLES(5,0x8001E6DC);
		goto ZZ_1E3D4_308;
	}
	EMU_Write32(SP + 68,A1); //+ 0x44
	V1 = A3;
	ZZ_CLOCKCYCLES(6,0x8001E6DC);
ZZ_1E3D4_308:
	EMU_Write32(SP + 72,V1); //+ 0x48
	ZZ_CLOCKCYCLES(1,0x8001E6E0);
ZZ_1E3D4_30C:
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	A3 = EMU_ReadU32(SP + 176); //+ 0xB0
	A0 = S3;
	EMU_Write32(SP + 20,T0); //+ 0x14
	T0 = EMU_ReadU32(SP + 112); //+ 0x70
	V0 = SP + 32;
	EMU_Write32(SP + 16,V0); //+ 0x10
	EMU_Write32(SP + 24,T0); //+ 0x18
	A2 = EMU_ReadU32(S3 + 312); //+ 0x138
	RA = 0x8001E70C; //ZZ_1E3D4_338
	A1 = S1;
	ZZ_CLOCKCYCLES(11,0x80018DBC);
	goto ZZ_18DBC;
ZZ_1E3D4_338:
	V0 = EMU_ReadS16(S1 + 8); //+ 0x8
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 <<= S6;
	V0 += V1;
	EMU_Write32(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(5,0x8001E720);
ZZ_1E3D4_34C:
	S0 += 1;
	V0 = EMU_ReadU8(S0);
	if (V0)
	{
		S1 = 0x190;
		ZZ_CLOCKCYCLES(5,0x8001E48C);
		goto ZZ_1E3D4_B8;
	}
	S1 = 0x190;
	ZZ_CLOCKCYCLES(5,0x8001E734);
ZZ_1E3D4_360:
	T0 = EMU_ReadU32(SP + 104); //+ 0x68
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E7A0);
		goto ZZ_1E3D4_3CC;
	}
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	if (!T0)
	{
		A0 = FP + 764;
		ZZ_CLOCKCYCLES(8,0x8001E7A0);
		goto ZZ_1E3D4_3CC;
	}
	A0 = FP + 764;
	V0 = EMU_ReadU32(FP + 764); //+ 0x2FC
	if (!V0)
	{
		A3 = SP + 56;
		ZZ_CLOCKCYCLES(12,0x8001E7A0);
		goto ZZ_1E3D4_3CC;
	}
	A3 = SP + 56;
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = EMU_ReadU32(SP + 60); //+ 0x3C
	A2 = EMU_ReadU32(SP + 176); //+ 0xB0
	V0 -= 100;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(SP + 68); //+ 0x44
	EMU_Write32(SP + 60,V1); //+ 0x3C
	V1 = EMU_ReadU32(SP + 72); //+ 0x48
	V0 += 100;
	EMU_Write32(SP + 68,V0); //+ 0x44
	EMU_Write32(SP + 72,V1); //+ 0x48
	A1 = EMU_ReadU32(S3 + 312); //+ 0x138
	EMU_Write32(SP + 16,T0); //+ 0x10
	RA = 0x8001E7A0; //ZZ_1E3D4_3CC
	A1 -= 10;
	ZZ_CLOCKCYCLES(27,0x80018B98);
	goto ZZ_18B98;
ZZ_1E3D4_3CC:
	V0 = EMU_ReadU32(SP + 96); //+ 0x60
	RA = EMU_ReadU32(SP + 156); //+ 0x9C
	FP = EMU_ReadU32(SP + 152); //+ 0x98
	S7 = EMU_ReadU32(SP + 148); //+ 0x94
	S6 = EMU_ReadU32(SP + 144); //+ 0x90
	S5 = EMU_ReadU32(SP + 140); //+ 0x8C
	S4 = EMU_ReadU32(SP + 136); //+ 0x88
	S3 = EMU_ReadU32(SP + 132); //+ 0x84
	S2 = EMU_ReadU32(SP + 128); //+ 0x80
	S1 = EMU_ReadU32(SP + 124); //+ 0x7C
	S0 = EMU_ReadU32(SP + 120); //+ 0x78
	SP += 160;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8001E9A8,ZZ_1E7D8_1D0);
	ZZ_JUMPREGISTER(0x8001E9D4,ZZ_1E7D8_1FC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001E3D4,0x8001E464,ZZ_1E3D4);
ZZ_MARK_TARGET(0x8001E464,0x8001E48C,ZZ_1E3D4_90);
ZZ_MARK_TARGET(0x8001E48C,0x8001E498,ZZ_1E3D4_B8);
ZZ_MARK_TARGET(0x8001E498,0x8001E4D0,ZZ_1E3D4_C4);
ZZ_MARK_TARGET(0x8001E4D0,0x8001E4EC,ZZ_1E3D4_FC);
ZZ_MARK_TARGET(0x8001E4EC,0x8001E510,ZZ_1E3D4_118);
ZZ_MARK_TARGET(0x8001E510,0x8001E538,ZZ_1E3D4_13C);
ZZ_MARK_TARGET(0x8001E538,0x8001E558,ZZ_1E3D4_164);
ZZ_MARK_TARGET(0x8001E558,0x8001E578,ZZ_1E3D4_184);
ZZ_MARK_TARGET(0x8001E578,0x8001E594,ZZ_1E3D4_1A4);
ZZ_MARK_TARGET(0x8001E594,0x8001E5B4,ZZ_1E3D4_1C0);
ZZ_MARK_TARGET(0x8001E5B4,0x8001E5BC,ZZ_1E3D4_1E0);
ZZ_MARK_TARGET(0x8001E5BC,0x8001E5C4,ZZ_1E3D4_1E8);
ZZ_MARK_TARGET(0x8001E5C4,0x8001E5C8,ZZ_1E3D4_1F0);
ZZ_MARK_TARGET(0x8001E5C8,0x8001E5E0,ZZ_1E3D4_1F4);
ZZ_MARK_TARGET(0x8001E5E0,0x8001E5F8,ZZ_1E3D4_20C);
ZZ_MARK_TARGET(0x8001E5F8,0x8001E5FC,ZZ_1E3D4_224);
ZZ_MARK_TARGET(0x8001E5FC,0x8001E64C,ZZ_1E3D4_228);
ZZ_MARK_TARGET(0x8001E64C,0x8001E694,ZZ_1E3D4_278);
ZZ_MARK_TARGET(0x8001E694,0x8001E6AC,ZZ_1E3D4_2C0);
ZZ_MARK_TARGET(0x8001E6AC,0x8001E6C4,ZZ_1E3D4_2D8);
ZZ_MARK_TARGET(0x8001E6C4,0x8001E6DC,ZZ_1E3D4_2F0);
ZZ_MARK_TARGET(0x8001E6DC,0x8001E6E0,ZZ_1E3D4_308);
ZZ_MARK_TARGET(0x8001E6E0,0x8001E70C,ZZ_1E3D4_30C);
ZZ_MARK_TARGET(0x8001E70C,0x8001E720,ZZ_1E3D4_338);
ZZ_MARK_TARGET(0x8001E720,0x8001E734,ZZ_1E3D4_34C);
ZZ_MARK_TARGET(0x8001E734,0x8001E7A0,ZZ_1E3D4_360);
ZZ_MARK_TARGET(0x8001E7A0,0x8001E7D8,ZZ_1E3D4_3CC);
