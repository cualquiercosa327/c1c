#ifdef ZZ_INCLUDE_CODE
ZZ_26FF0:
	SP -= 112;
	EMU_Write32(SP + 100,S7); //+ 0x64
	S7 = A0;
	EMU_Write32(SP + 76,S1); //+ 0x4C
	S1 = A2;
	EMU_Write32(SP + 84,S3); //+ 0x54
	S3 = A3;
	EMU_Write32(SP + 92,S5); //+ 0x5C
	S5 = EMU_ReadU32(SP + 128); //+ 0x80
	V1 = A1;
	EMU_Write32(SP + 104,FP); //+ 0x68
	FP = EMU_ReadU32(SP + 132); //+ 0x84
	A1 &= 0x1;
	EMU_Write32(SP + 108,RA); //+ 0x6C
	EMU_Write32(SP + 96,S6); //+ 0x60
	EMU_Write32(SP + 88,S4); //+ 0x58
	EMU_Write32(SP + 80,S2); //+ 0x50
	if (A1)
	{
		EMU_Write32(SP + 72,S0); //+ 0x48
		ZZ_CLOCKCYCLES(19,0x80027048);
		goto ZZ_26FF0_58;
	}
	EMU_Write32(SP + 72,S0); //+ 0x48
	V0 = V1 & 0xFFFF;
	if (V0)
	{
		T1 = S7 + V0;
		ZZ_CLOCKCYCLES(22,0x8002704C);
		goto ZZ_26FF0_5C;
	}
	T1 = S7 + V0;
	ZZ_CLOCKCYCLES(22,0x80027048);
ZZ_26FF0_58:
	T1 = V1 & 0xFFFF;
	ZZ_CLOCKCYCLES(1,0x8002704C);
ZZ_26FF0_5C:
	V0 = V1 & 0x1;
	if (V0)
	{
		A2 = 0x7FFF0000;
		ZZ_CLOCKCYCLES(3,0x80027064);
		goto ZZ_26FF0_74;
	}
	A2 = 0x7FFF0000;
	V0 = V1 & 0xFFFF;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x80027550);
		goto ZZ_26FF0_560;
	}
	ZZ_CLOCKCYCLES(6,0x80027064);
ZZ_26FF0_74:
	if (T1)
	{
		A2 |= 0xFFFF;
		ZZ_CLOCKCYCLES(2,0x8002727C);
		goto ZZ_26FF0_28C;
	}
	A2 |= 0xFFFF;
	V0 = EMU_ReadU32(S5);
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8002708C);
		goto ZZ_26FF0_9C;
	}
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 += V1;
	ZZ_CLOCKCYCLES(10,0x80027090);
	goto ZZ_26FF0_A0;
ZZ_26FF0_9C:
	V0 = EMU_ReadU32(S1);
	ZZ_CLOCKCYCLES(1,0x80027090);
ZZ_26FF0_A0:
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800270B8);
		goto ZZ_26FF0_C8;
	}
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = EMU_ReadU32(S1 + 16); //+ 0x10
	V0 += V1;
	ZZ_CLOCKCYCLES(10,0x800270BC);
	goto ZZ_26FF0_CC;
ZZ_26FF0_C8:
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x800270BC);
ZZ_26FF0_CC:
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800270E4);
		goto ZZ_26FF0_F4;
	}
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 20); //+ 0x14
	V0 += V1;
	ZZ_CLOCKCYCLES(10,0x800270E8);
	goto ZZ_26FF0_F8;
ZZ_26FF0_F4:
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	ZZ_CLOCKCYCLES(1,0x800270E8);
ZZ_26FF0_F8:
	EMU_Write32(SP + 32,V0); //+ 0x20
	A0 = EMU_ReadU32(S5);
	if (!A0)
	{
		ZZ_CLOCKCYCLES(6,0x80027154);
		goto ZZ_26FF0_164;
	}
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 = EMU_ReadU32(S3);
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(14,0x80027124);
		goto ZZ_26FF0_134;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x80027124);
ZZ_26FF0_134:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002713C);
		goto ZZ_26FF0_14C;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002713C);
		goto ZZ_26FF0_14C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002713C);
ZZ_26FF0_14C:
	A0 = LO;
	V0 = (int32_t)A0 < (int32_t)A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80027154);
		goto ZZ_26FF0_164;
	}
	A2 = A0;
	ZZ_CLOCKCYCLES(6,0x80027154);
ZZ_26FF0_164:
	A0 = EMU_ReadU32(S5 + 4); //+ 0x4
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x800271B8);
		goto ZZ_26FF0_1C8;
	}
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(12,0x80027188);
		goto ZZ_26FF0_198;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x80027188);
ZZ_26FF0_198:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800271A0);
		goto ZZ_26FF0_1B0;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800271A0);
		goto ZZ_26FF0_1B0;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800271A0);
ZZ_26FF0_1B0:
	A0 = LO;
	V0 = (int32_t)A0 < (int32_t)A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800271B8);
		goto ZZ_26FF0_1C8;
	}
	A2 = A0;
	ZZ_CLOCKCYCLES(6,0x800271B8);
ZZ_26FF0_1C8:
	A0 = EMU_ReadU32(S5 + 8); //+ 0x8
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8002721C);
		goto ZZ_26FF0_22C;
	}
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(12,0x800271EC);
		goto ZZ_26FF0_1FC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x800271EC);
ZZ_26FF0_1FC:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80027204);
		goto ZZ_26FF0_214;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80027204);
		goto ZZ_26FF0_214;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80027204);
ZZ_26FF0_214:
	A0 = LO;
	V0 = (int32_t)A0 < (int32_t)A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002721C);
		goto ZZ_26FF0_22C;
	}
	A2 = A0;
	ZZ_CLOCKCYCLES(6,0x8002721C);
ZZ_26FF0_22C:
	V0 = EMU_ReadU32(S5);
	A2 += 256;
	EMU_SMultiply(A2,V0);
	V1 = EMU_ReadU32(S3);
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	V0 += V1;
	EMU_Write32(S3,V0);
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	EMU_SMultiply(A2,V0);
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	V0 += V1;
	EMU_Write32(S3 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	EMU_SMultiply(A2,V0);
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = LO;
	V0 = (int32_t)V0 >> 8;
	V0 += V1;
	ZZ_CLOCKCYCLES(24,0x80027540);
	goto ZZ_26FF0_550;
ZZ_26FF0_28C:
	V0 = EMU_ReadU32(S5);
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(4,0x8002729C);
		goto ZZ_26FF0_2AC;
	}
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 += V1;
	ZZ_CLOCKCYCLES(8,0x800272A0);
	goto ZZ_26FF0_2B0;
ZZ_26FF0_2AC:
	V0 = EMU_ReadU32(S1);
	ZZ_CLOCKCYCLES(1,0x800272A0);
ZZ_26FF0_2B0:
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800272C8);
		goto ZZ_26FF0_2D8;
	}
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = EMU_ReadU32(S1 + 16); //+ 0x10
	V0 += V1;
	ZZ_CLOCKCYCLES(10,0x800272CC);
	goto ZZ_26FF0_2DC;
ZZ_26FF0_2D8:
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x800272CC);
ZZ_26FF0_2DC:
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800272F4);
		goto ZZ_26FF0_304;
	}
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 20); //+ 0x14
	V0 += V1;
	ZZ_CLOCKCYCLES(10,0x800272F8);
	goto ZZ_26FF0_308;
ZZ_26FF0_304:
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	ZZ_CLOCKCYCLES(1,0x800272F8);
ZZ_26FF0_308:
	EMU_Write32(SP + 32,V0); //+ 0x20
	A0 = EMU_ReadU32(S5);
	if (!A0)
	{
		A2 = 0x80000000;
		ZZ_CLOCKCYCLES(6,0x80027368);
		goto ZZ_26FF0_378;
	}
	A2 = 0x80000000;
	V1 = EMU_ReadU32(S3);
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 = V1 - A0;
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(14,0x80027334);
		goto ZZ_26FF0_344;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x80027334);
ZZ_26FF0_344:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002734C);
		goto ZZ_26FF0_35C;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002734C);
		goto ZZ_26FF0_35C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002734C);
ZZ_26FF0_35C:
	A0 = LO;
	V0 = (int32_t)A2 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80027368);
		goto ZZ_26FF0_378;
	}
	A2 = A0;
	T0 = R0;
	ZZ_CLOCKCYCLES(7,0x80027368);
ZZ_26FF0_378:
	A1 = EMU_ReadU32(S5 + 8); //+ 0x8
	if (!A1)
	{
		ZZ_CLOCKCYCLES(4,0x800273F8);
		goto ZZ_26FF0_408;
	}
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	V1 = V1 - A1;
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(12,0x8002739C);
		goto ZZ_26FF0_3AC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8002739C);
ZZ_26FF0_3AC:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800273B4);
		goto ZZ_26FF0_3C4;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800273B4);
		goto ZZ_26FF0_3C4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800273B4);
ZZ_26FF0_3C4:
	A0 = LO;
	V0 = (int32_t)A2 < (int32_t)A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x800273F0);
		goto ZZ_26FF0_400;
	}
	V0 = EMU_ReadU32(S5);
	if ((int32_t)A1 >= 0)
	{
		V1 = A1;
		ZZ_CLOCKCYCLES(8,0x800273D8);
		goto ZZ_26FF0_3E8;
	}
	V1 = A1;
	V1 = -V1;
	ZZ_CLOCKCYCLES(9,0x800273D8);
ZZ_26FF0_3E8:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x800273E4);
		goto ZZ_26FF0_3F4;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x800273E4);
ZZ_26FF0_3F4:
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x800273F8);
		goto ZZ_26FF0_408;
	}
	ZZ_CLOCKCYCLES(3,0x800273F0);
ZZ_26FF0_400:
	A2 = A0;
	T0 = 0x2;
	ZZ_CLOCKCYCLES(2,0x800273F8);
ZZ_26FF0_408:
	A1 = EMU_ReadU32(S5 + 4); //+ 0x4
	if (!A1)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x800274C0);
		goto ZZ_26FF0_4D0;
	}
	V0 = 0x1;
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	V1 = V1 - A1;
	V0 = V0 - V1;
	V0 <<= 8;
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(12,0x8002742C);
		goto ZZ_26FF0_43C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8002742C);
ZZ_26FF0_43C:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80027444);
		goto ZZ_26FF0_454;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80027444);
		goto ZZ_26FF0_454;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80027444);
ZZ_26FF0_454:
	A0 = LO;
	V0 = (int32_t)A2 < (int32_t)A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x800274B8);
		goto ZZ_26FF0_4C8;
	}
	if (T0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(7,0x80027488);
		goto ZZ_26FF0_498;
	}
	V0 = 0x2;
	V0 = EMU_ReadU32(S5);
	if ((int32_t)A1 >= 0)
	{
		V1 = A1;
		ZZ_CLOCKCYCLES(10,0x80027470);
		goto ZZ_26FF0_480;
	}
	V1 = A1;
	V1 = -V1;
	ZZ_CLOCKCYCLES(11,0x80027470);
ZZ_26FF0_480:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002747C);
		goto ZZ_26FF0_48C;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x8002747C);
ZZ_26FF0_48C:
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(3,0x800274B8);
		goto ZZ_26FF0_4C8;
	}
	V0 = 0x2;
	ZZ_CLOCKCYCLES(3,0x80027488);
ZZ_26FF0_498:
	if (T0 != V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x800274C0);
		goto ZZ_26FF0_4D0;
	}
	V0 = 0x1;
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	if ((int32_t)A1 >= 0)
	{
		V1 = A1;
		ZZ_CLOCKCYCLES(5,0x800274A0);
		goto ZZ_26FF0_4B0;
	}
	V1 = A1;
	V1 = -V1;
	ZZ_CLOCKCYCLES(6,0x800274A0);
ZZ_26FF0_4B0:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x800274AC);
		goto ZZ_26FF0_4BC;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x800274AC);
ZZ_26FF0_4BC:
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(3,0x800274C0);
		goto ZZ_26FF0_4D0;
	}
	V0 = 0x1;
	ZZ_CLOCKCYCLES(3,0x800274B8);
ZZ_26FF0_4C8:
	T0 = 0x1;
	V0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x800274C0);
ZZ_26FF0_4D0:
	if (T0 == V0)
	{
		V0 = (int32_t)T0 < 2;
		ZZ_CLOCKCYCLES(2,0x80027510);
		goto ZZ_26FF0_520;
	}
	V0 = (int32_t)T0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800274E0);
		goto ZZ_26FF0_4F0;
	}
	if (!T0)
	{
		V0 = T1;
		ZZ_CLOCKCYCLES(6,0x800274F4);
		goto ZZ_26FF0_504;
	}
	V0 = T1;
	ZZ_CLOCKCYCLES(8,0x800277B8);
	goto ZZ_26FF0_7C8;
ZZ_26FF0_4F0:
	V0 = 0x2;
	if (T0 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002752C);
		goto ZZ_26FF0_53C;
	}
	V0 = T1;
	ZZ_CLOCKCYCLES(5,0x800277B8);
	goto ZZ_26FF0_7C8;
ZZ_26FF0_504:
	V0 = EMU_ReadU32(S5);
	V0 = -V0;
	EMU_Write32(S5,V0);
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	EMU_Write32(S3,V0);
	ZZ_CLOCKCYCLES(7,0x80027548);
	goto ZZ_26FF0_558;
ZZ_26FF0_520:
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	V0 = -V0;
	EMU_Write32(S5 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	EMU_Write32(S3 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(7,0x80027548);
	goto ZZ_26FF0_558;
ZZ_26FF0_53C:
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 = -V0;
	EMU_Write32(S5 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(5,0x80027540);
ZZ_26FF0_550:
	EMU_Write32(S3 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(2,0x80027548);
ZZ_26FF0_558:
	V0 = T1;
	ZZ_CLOCKCYCLES(2,0x800277B8);
	goto ZZ_26FF0_7C8;
ZZ_26FF0_560:
	V0 = EMU_ReadS16(S7 + 30); //+ 0x1E
	V0 = (int32_t)FP < (int32_t)V0;
	if (!V0)
	{
		EMU_Write32(SP + 24,V0); //+ 0x18
		ZZ_CLOCKCYCLES(5,0x8002757C);
		goto ZZ_26FF0_58C;
	}
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(11,0x80027580);
	goto ZZ_26FF0_590;
ZZ_26FF0_58C:
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	ZZ_CLOCKCYCLES(1,0x80027580);
ZZ_26FF0_590:
	EMU_Write32(SP + 52,V0); //+ 0x34
	V0 = EMU_ReadS16(S7 + 32); //+ 0x20
	V0 = (int32_t)FP < (int32_t)V0;
	if (!V0)
	{
		EMU_Write32(SP + 28,V0); //+ 0x1C
		ZZ_CLOCKCYCLES(7,0x800275B4);
		goto ZZ_26FF0_5C4;
	}
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S1 + 16); //+ 0x10
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(13,0x800275B8);
	goto ZZ_26FF0_5C8;
ZZ_26FF0_5C4:
	V0 = EMU_ReadU32(S1 + 16); //+ 0x10
	ZZ_CLOCKCYCLES(1,0x800275B8);
ZZ_26FF0_5C8:
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadS16(S7 + 34); //+ 0x22
	V0 = (int32_t)FP < (int32_t)V0;
	if (!V0)
	{
		EMU_Write32(SP + 32,V0); //+ 0x20
		ZZ_CLOCKCYCLES(7,0x800275EC);
		goto ZZ_26FF0_5FC;
	}
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(13,0x800275F0);
	goto ZZ_26FF0_600;
ZZ_26FF0_5FC:
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	ZZ_CLOCKCYCLES(1,0x800275F0);
ZZ_26FF0_600:
	EMU_Write32(SP + 60,V0); //+ 0x3C
	S4 = R0;
	S6 = R0;
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	if (V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(8,0x80027618);
		goto ZZ_26FF0_628;
	}
	V1 = R0;
	ZZ_CLOCKCYCLES(8,0x80027610);
ZZ_26FF0_620:
	if ((int32_t)V1 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x800277B8);
		goto ZZ_26FF0_7C8;
	}
	ZZ_CLOCKCYCLES(2,0x80027618);
ZZ_26FF0_628:
	S2 = R0;
	ZZ_CLOCKCYCLES(1,0x8002761C);
ZZ_26FF0_62C:
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	if (V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(4,0x80027634);
		goto ZZ_26FF0_644;
	}
	V1 = R0;
	ZZ_CLOCKCYCLES(4,0x8002762C);
ZZ_26FF0_63C:
	if ((int32_t)V1 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x80027798);
		goto ZZ_26FF0_7A8;
	}
	ZZ_CLOCKCYCLES(2,0x80027634);
ZZ_26FF0_644:
	S0 = R0;
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	if (V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(5,0x80027650);
		goto ZZ_26FF0_660;
	}
	V1 = R0;
	ZZ_CLOCKCYCLES(5,0x80027648);
ZZ_26FF0_658:
	if ((int32_t)V1 > 0)
	{
		V1 = S2 + 1;
		ZZ_CLOCKCYCLES(2,0x8002777C);
		goto ZZ_26FF0_78C;
	}
	V1 = S2 + 1;
	ZZ_CLOCKCYCLES(2,0x80027650);
ZZ_26FF0_660:
	A1 = EMU_ReadU32(S1);
	if (!S6)
	{
		ZZ_CLOCKCYCLES(3,0x80027668);
		goto ZZ_26FF0_678;
	}
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	A1 += V0;
	ZZ_CLOCKCYCLES(6,0x80027668);
ZZ_26FF0_678:
	EMU_Write32(SP + 40,A1); //+ 0x28
	A0 = EMU_ReadU32(S1 + 4); //+ 0x4
	if (!S2)
	{
		ZZ_CLOCKCYCLES(4,0x80027684);
		goto ZZ_26FF0_694;
	}
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	A0 += V0;
	ZZ_CLOCKCYCLES(7,0x80027684);
ZZ_26FF0_694:
	EMU_Write32(SP + 44,A0); //+ 0x2C
	V1 = EMU_ReadU32(S1 + 8); //+ 0x8
	if (!S0)
	{
		ZZ_CLOCKCYCLES(4,0x800276A0);
		goto ZZ_26FF0_6B0;
	}
	V0 = EMU_ReadU32(SP + 60); //+ 0x3C
	V1 += V0;
	ZZ_CLOCKCYCLES(7,0x800276A0);
ZZ_26FF0_6B0:
	EMU_Write32(SP + 48,V1); //+ 0x30
	A2 = EMU_ReadU32(S3);
	V0 = (int32_t)A1 < (int32_t)A2;
	if (!V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(6,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	S0 += 1;
	A3 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = (int32_t)A0 < (int32_t)A3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	T0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = (int32_t)V1 < (int32_t)T0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 += A1;
	V0 = (int32_t)V0 < (int32_t)A2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(22,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	V0 += A0;
	V0 = (int32_t)V0 < (int32_t)A3;
	if (V0)
	{
		ZZ_CLOCKCYCLES(28,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	V0 = EMU_ReadU32(SP + 60); //+ 0x3C
	V0 += V1;
	V0 = (int32_t)V0 < (int32_t)T0;
	if (V0)
	{
		V0 = S4 << 1;
		ZZ_CLOCKCYCLES(34,0x8002775C);
		goto ZZ_26FF0_76C;
	}
	V0 = S4 << 1;
	V0 += T1;
	A1 = EMU_ReadU16(V0);
	V0 = FP + 1;
	A0 = S7;
	A2 = SP + 40;
	A3 = S3;
	EMU_Write32(SP + 16,S5); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	RA = 0x80027750; //ZZ_26FF0_760
	EMU_Write32(SP + 64,T1); //+ 0x40
	ZZ_CLOCKCYCLES(44,0x80026FF0);
	goto ZZ_26FF0;
ZZ_26FF0_760:
	T1 = EMU_ReadU32(SP + 64); //+ 0x40
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x800277B8);
		goto ZZ_26FF0_7C8;
	}
	ZZ_CLOCKCYCLES(3,0x8002775C);
ZZ_26FF0_76C:
	S4 += 1;
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(5,0x80027648);
		goto ZZ_26FF0_658;
	}
	V1 = S0;
	V0 = (int32_t)V1 < 2;
	if (V0)
	{
		V1 = S2 + 1;
		ZZ_CLOCKCYCLES(8,0x80027650);
		goto ZZ_26FF0_660;
	}
	V1 = S2 + 1;
	ZZ_CLOCKCYCLES(8,0x8002777C);
ZZ_26FF0_78C:
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	if (!V0)
	{
		S2 = V1;
		ZZ_CLOCKCYCLES(4,0x8002762C);
		goto ZZ_26FF0_63C;
	}
	S2 = V1;
	V0 = (int32_t)V1 < 2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80027634);
		goto ZZ_26FF0_644;
	}
	ZZ_CLOCKCYCLES(7,0x80027798);
ZZ_26FF0_7A8:
	V1 = S6 + 1;
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	if (!V0)
	{
		S6 = V1;
		ZZ_CLOCKCYCLES(5,0x80027610);
		goto ZZ_26FF0_620;
	}
	S6 = V1;
	V0 = (int32_t)V1 < 2;
	if (V0)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(8,0x8002761C);
		goto ZZ_26FF0_62C;
	}
	S2 = R0;
	ZZ_CLOCKCYCLES(8,0x800277B8);
ZZ_26FF0_7C8:
	RA = EMU_ReadU32(SP + 108); //+ 0x6C
	FP = EMU_ReadU32(SP + 104); //+ 0x68
	S7 = EMU_ReadU32(SP + 100); //+ 0x64
	S6 = EMU_ReadU32(SP + 96); //+ 0x60
	S5 = EMU_ReadU32(SP + 92); //+ 0x5C
	S4 = EMU_ReadU32(SP + 88); //+ 0x58
	S3 = EMU_ReadU32(SP + 84); //+ 0x54
	S2 = EMU_ReadU32(SP + 80); //+ 0x50
	S1 = EMU_ReadU32(SP + 76); //+ 0x4C
	S0 = EMU_ReadU32(SP + 72); //+ 0x48
	SP += 112;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x800279D4,ZZ_277EC_1E8);
	ZZ_JUMPREGISTER(0x80027750,ZZ_26FF0_760);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80026FF0,0x80027048,ZZ_26FF0);
ZZ_MARK_TARGET(0x80027048,0x8002704C,ZZ_26FF0_58);
ZZ_MARK_TARGET(0x8002704C,0x80027064,ZZ_26FF0_5C);
ZZ_MARK_TARGET(0x80027064,0x8002708C,ZZ_26FF0_74);
ZZ_MARK_TARGET(0x8002708C,0x80027090,ZZ_26FF0_9C);
ZZ_MARK_TARGET(0x80027090,0x800270B8,ZZ_26FF0_A0);
ZZ_MARK_TARGET(0x800270B8,0x800270BC,ZZ_26FF0_C8);
ZZ_MARK_TARGET(0x800270BC,0x800270E4,ZZ_26FF0_CC);
ZZ_MARK_TARGET(0x800270E4,0x800270E8,ZZ_26FF0_F4);
ZZ_MARK_TARGET(0x800270E8,0x80027124,ZZ_26FF0_F8);
ZZ_MARK_TARGET(0x80027124,0x8002713C,ZZ_26FF0_134);
ZZ_MARK_TARGET(0x8002713C,0x80027154,ZZ_26FF0_14C);
ZZ_MARK_TARGET(0x80027154,0x80027188,ZZ_26FF0_164);
ZZ_MARK_TARGET(0x80027188,0x800271A0,ZZ_26FF0_198);
ZZ_MARK_TARGET(0x800271A0,0x800271B8,ZZ_26FF0_1B0);
ZZ_MARK_TARGET(0x800271B8,0x800271EC,ZZ_26FF0_1C8);
ZZ_MARK_TARGET(0x800271EC,0x80027204,ZZ_26FF0_1FC);
ZZ_MARK_TARGET(0x80027204,0x8002721C,ZZ_26FF0_214);
ZZ_MARK_TARGET(0x8002721C,0x8002727C,ZZ_26FF0_22C);
ZZ_MARK_TARGET(0x8002727C,0x8002729C,ZZ_26FF0_28C);
ZZ_MARK_TARGET(0x8002729C,0x800272A0,ZZ_26FF0_2AC);
ZZ_MARK_TARGET(0x800272A0,0x800272C8,ZZ_26FF0_2B0);
ZZ_MARK_TARGET(0x800272C8,0x800272CC,ZZ_26FF0_2D8);
ZZ_MARK_TARGET(0x800272CC,0x800272F4,ZZ_26FF0_2DC);
ZZ_MARK_TARGET(0x800272F4,0x800272F8,ZZ_26FF0_304);
ZZ_MARK_TARGET(0x800272F8,0x80027334,ZZ_26FF0_308);
ZZ_MARK_TARGET(0x80027334,0x8002734C,ZZ_26FF0_344);
ZZ_MARK_TARGET(0x8002734C,0x80027368,ZZ_26FF0_35C);
ZZ_MARK_TARGET(0x80027368,0x8002739C,ZZ_26FF0_378);
ZZ_MARK_TARGET(0x8002739C,0x800273B4,ZZ_26FF0_3AC);
ZZ_MARK_TARGET(0x800273B4,0x800273D8,ZZ_26FF0_3C4);
ZZ_MARK_TARGET(0x800273D8,0x800273E4,ZZ_26FF0_3E8);
ZZ_MARK_TARGET(0x800273E4,0x800273F0,ZZ_26FF0_3F4);
ZZ_MARK_TARGET(0x800273F0,0x800273F8,ZZ_26FF0_400);
ZZ_MARK_TARGET(0x800273F8,0x8002742C,ZZ_26FF0_408);
ZZ_MARK_TARGET(0x8002742C,0x80027444,ZZ_26FF0_43C);
ZZ_MARK_TARGET(0x80027444,0x80027470,ZZ_26FF0_454);
ZZ_MARK_TARGET(0x80027470,0x8002747C,ZZ_26FF0_480);
ZZ_MARK_TARGET(0x8002747C,0x80027488,ZZ_26FF0_48C);
ZZ_MARK_TARGET(0x80027488,0x800274A0,ZZ_26FF0_498);
ZZ_MARK_TARGET(0x800274A0,0x800274AC,ZZ_26FF0_4B0);
ZZ_MARK_TARGET(0x800274AC,0x800274B8,ZZ_26FF0_4BC);
ZZ_MARK_TARGET(0x800274B8,0x800274C0,ZZ_26FF0_4C8);
ZZ_MARK_TARGET(0x800274C0,0x800274E0,ZZ_26FF0_4D0);
ZZ_MARK_TARGET(0x800274E0,0x800274F4,ZZ_26FF0_4F0);
ZZ_MARK_TARGET(0x800274F4,0x80027510,ZZ_26FF0_504);
ZZ_MARK_TARGET(0x80027510,0x8002752C,ZZ_26FF0_520);
ZZ_MARK_TARGET(0x8002752C,0x80027540,ZZ_26FF0_53C);
ZZ_MARK_TARGET(0x80027540,0x80027548,ZZ_26FF0_550);
ZZ_MARK_TARGET(0x80027548,0x80027550,ZZ_26FF0_558);
ZZ_MARK_TARGET(0x80027550,0x8002757C,ZZ_26FF0_560);
ZZ_MARK_TARGET(0x8002757C,0x80027580,ZZ_26FF0_58C);
ZZ_MARK_TARGET(0x80027580,0x800275B4,ZZ_26FF0_590);
ZZ_MARK_TARGET(0x800275B4,0x800275B8,ZZ_26FF0_5C4);
ZZ_MARK_TARGET(0x800275B8,0x800275EC,ZZ_26FF0_5C8);
ZZ_MARK_TARGET(0x800275EC,0x800275F0,ZZ_26FF0_5FC);
ZZ_MARK_TARGET(0x800275F0,0x80027610,ZZ_26FF0_600);
ZZ_MARK_TARGET(0x80027610,0x80027618,ZZ_26FF0_620);
ZZ_MARK_TARGET(0x80027618,0x8002761C,ZZ_26FF0_628);
ZZ_MARK_TARGET(0x8002761C,0x8002762C,ZZ_26FF0_62C);
ZZ_MARK_TARGET(0x8002762C,0x80027634,ZZ_26FF0_63C);
ZZ_MARK_TARGET(0x80027634,0x80027648,ZZ_26FF0_644);
ZZ_MARK_TARGET(0x80027648,0x80027650,ZZ_26FF0_658);
ZZ_MARK_TARGET(0x80027650,0x80027668,ZZ_26FF0_660);
ZZ_MARK_TARGET(0x80027668,0x80027684,ZZ_26FF0_678);
ZZ_MARK_TARGET(0x80027684,0x800276A0,ZZ_26FF0_694);
ZZ_MARK_TARGET(0x800276A0,0x80027750,ZZ_26FF0_6B0);
ZZ_MARK_TARGET(0x80027750,0x8002775C,ZZ_26FF0_760);
ZZ_MARK_TARGET(0x8002775C,0x8002777C,ZZ_26FF0_76C);
ZZ_MARK_TARGET(0x8002777C,0x80027798,ZZ_26FF0_78C);
ZZ_MARK_TARGET(0x80027798,0x800277B8,ZZ_26FF0_7A8);
ZZ_MARK_TARGET(0x800277B8,0x800277EC,ZZ_26FF0_7C8);
