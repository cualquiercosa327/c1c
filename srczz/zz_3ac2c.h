#ifdef ZZ_INCLUDE_CODE
ZZ_3AC2C:
	V1 = EMU_ReadU32(GP + 360); //+ 0x168
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(V1 + 24); //+ 0x18
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8003AC5C);
		goto ZZ_3AC2C_30;
	}
	RA = 0x8003AC54; //ZZ_3AC2C_28
	EMU_Write32(V1 + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(10,0x8003C538);
	goto ZZ_3C538;
ZZ_3AC2C_28:
	RA = 0x8003AC5C; //ZZ_3AC2C_30
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80051434);
	goto ZZ_51434;
ZZ_3AC2C_30:
	RA = 0x8003AC64; //ZZ_3AC2C_38
	ZZ_CLOCKCYCLES(2,0x8003C420);
	goto ZZ_3C420;
ZZ_3AC2C_38:
	V1 = V0;
	V0 = 0x1;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 2;
		ZZ_CLOCKCYCLES(4,0x8003AD34);
		goto ZZ_3AC2C_108;
	}
	V0 = (int32_t)V1 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8003AC8C);
		goto ZZ_3AC2C_60;
	}
	if (!V1)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(8,0x8003ACA8);
		goto ZZ_3AC2C_7C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(10,0x8003AD70);
	goto ZZ_3AC2C_144;
ZZ_3AC2C_60:
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(3,0x8003AD34);
		goto ZZ_3AC2C_108;
	}
	V0 = 0x3;
	if (V1 == V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(5,0x8003AD54);
		goto ZZ_3AC2C_128;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(7,0x8003AD70);
	goto ZZ_3AC2C_144;
ZZ_3AC2C_7C:
	A1 = EMU_ReadU32(GP + 360); //+ 0x168
	A0 = 0x80050000;
	A0 += 25972;
	RA = 0x8003ACBC; //ZZ_3AC2C_90
	A1 += 1180;
	ZZ_CLOCKCYCLES(5,0x8003C714);
	goto ZZ_3C714;
ZZ_3AC2C_90:
	S0 = V0;
	A0 = EMU_ReadU32(GP + 360); //+ 0x168
	A1 = S0;
	RA = 0x8003ACD0; //ZZ_3AC2C_A4
	A0 += 1180;
	ZZ_CLOCKCYCLES(5,0x8003C7A8);
	goto ZZ_3C7A8;
ZZ_3AC2C_A4:
	if ((int32_t)S0 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003ACFC);
		goto ZZ_3AC2C_D0;
	}
	V1 = EMU_ReadU32(GP + 360); //+ 0x168
	V0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	V0 += 1;
	EMU_Write32(V1 + 28,V0); //+ 0x1C
	V0 = (int32_t)V0 < 11;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x8003AD44);
		goto ZZ_3AC2C_118;
	}
	ZZ_CLOCKCYCLES(11,0x8003ACFC);
ZZ_3AC2C_D0:
	RA = 0x8003AD04; //ZZ_3AC2C_D8
	A0 = 0x2;
	ZZ_CLOCKCYCLES(2,0x8003CAD8);
	goto ZZ_3CAD8;
ZZ_3AC2C_D8:
	RA = 0x8003AD0C; //ZZ_3AC2C_E0
	ZZ_CLOCKCYCLES(2,0x8003CA50);
	goto ZZ_3CA50;
ZZ_3AC2C_E0:
	RA = 0x8003AD14; //ZZ_3AC2C_E8
	A0 = 0x5;
	ZZ_CLOCKCYCLES(2,0x8003CAF8);
	goto ZZ_3CAF8;
ZZ_3AC2C_E8:
	RA = 0x8003AD1C; //ZZ_3AC2C_F0
	A0 = 0x20;
	ZZ_CLOCKCYCLES(2,0x8003C3E4);
	goto ZZ_3C3E4;
ZZ_3AC2C_F0:
	V1 = EMU_ReadU32(GP + 360); //+ 0x168
	V0 = 0x1;
	EMU_Write32(V1 + 8,R0); //+ 0x8
	EMU_Write32(V1 + 32,S0); //+ 0x20
	EMU_Write32(V1 + 36,R0); //+ 0x24
	ZZ_CLOCKCYCLES(6,0x8003AD70);
	goto ZZ_3AC2C_144;
ZZ_3AC2C_108:
	RA = 0x8003AD3C; //ZZ_3AC2C_110
	ZZ_CLOCKCYCLES(2,0x8003C3FC);
	goto ZZ_3C3FC;
ZZ_3AC2C_110:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8003AD54);
		goto ZZ_3AC2C_128;
	}
	ZZ_CLOCKCYCLES(2,0x8003AD44);
ZZ_3AC2C_118:
	RA = 0x8003AD4C; //ZZ_3AC2C_120
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x8003CAF8);
	goto ZZ_3CAF8;
ZZ_3AC2C_120:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003AD70);
	goto ZZ_3AC2C_144;
ZZ_3AC2C_128:
	RA = 0x8003AD5C; //ZZ_3AC2C_130
	A0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x8003CA04);
	goto ZZ_3CA04;
ZZ_3AC2C_130:
	RA = 0x8003AD64; //ZZ_3AC2C_138
	A0 = 0x2;
	ZZ_CLOCKCYCLES(2,0x8003CAB0);
	goto ZZ_3CAB0;
ZZ_3AC2C_138:
	RA = 0x8003AD6C; //ZZ_3AC2C_140
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003CAF8);
	goto ZZ_3CAF8;
ZZ_3AC2C_140:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x8003AD70);
ZZ_3AC2C_144:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8003A9F4,ZZ_3A94C_A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003AC2C,0x8003AC54,ZZ_3AC2C);
ZZ_MARK_TARGET(0x8003AC54,0x8003AC5C,ZZ_3AC2C_28);
ZZ_MARK_TARGET(0x8003AC5C,0x8003AC64,ZZ_3AC2C_30);
ZZ_MARK_TARGET(0x8003AC64,0x8003AC8C,ZZ_3AC2C_38);
ZZ_MARK_TARGET(0x8003AC8C,0x8003ACA8,ZZ_3AC2C_60);
ZZ_MARK_TARGET(0x8003ACA8,0x8003ACBC,ZZ_3AC2C_7C);
ZZ_MARK_TARGET(0x8003ACBC,0x8003ACD0,ZZ_3AC2C_90);
ZZ_MARK_TARGET(0x8003ACD0,0x8003ACFC,ZZ_3AC2C_A4);
ZZ_MARK_TARGET(0x8003ACFC,0x8003AD04,ZZ_3AC2C_D0);
ZZ_MARK_TARGET(0x8003AD04,0x8003AD0C,ZZ_3AC2C_D8);
ZZ_MARK_TARGET(0x8003AD0C,0x8003AD14,ZZ_3AC2C_E0);
ZZ_MARK_TARGET(0x8003AD14,0x8003AD1C,ZZ_3AC2C_E8);
ZZ_MARK_TARGET(0x8003AD1C,0x8003AD34,ZZ_3AC2C_F0);
ZZ_MARK_TARGET(0x8003AD34,0x8003AD3C,ZZ_3AC2C_108);
ZZ_MARK_TARGET(0x8003AD3C,0x8003AD44,ZZ_3AC2C_110);
ZZ_MARK_TARGET(0x8003AD44,0x8003AD4C,ZZ_3AC2C_118);
ZZ_MARK_TARGET(0x8003AD4C,0x8003AD54,ZZ_3AC2C_120);
ZZ_MARK_TARGET(0x8003AD54,0x8003AD5C,ZZ_3AC2C_128);
ZZ_MARK_TARGET(0x8003AD5C,0x8003AD64,ZZ_3AC2C_130);
ZZ_MARK_TARGET(0x8003AD64,0x8003AD6C,ZZ_3AC2C_138);
ZZ_MARK_TARGET(0x8003AD6C,0x8003AD70,ZZ_3AC2C_140);
ZZ_MARK_TARGET(0x8003AD70,0x8003AD84,ZZ_3AC2C_144);
