#ifdef ZZ_INCLUDE_CODE
ZZ_489B8:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A1;
	V0 = 0x70000;
	V0 |= 0xF000;
	V0 = V0 < S0;
	if (!V0)
	{
		EMU_Write32(SP + 20,RA); //+ 0x14
		ZZ_CLOCKCYCLES(8,0x800489E0);
		goto ZZ_489B8_28;
	}
	EMU_Write32(SP + 20,RA); //+ 0x14
	S0 = 0x70000;
	S0 |= 0xF000;
	ZZ_CLOCKCYCLES(10,0x800489E0);
ZZ_489B8_28:
	RA = 0x800489E8; //ZZ_489B8_30
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x80046CC8);
	goto ZZ_46CC8;
ZZ_489B8_30:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22808); //+ 0x5918
	if (V0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(5,0x80048A04);
		goto ZZ_489B8_4C;
	}
	V0 = S0;
	AT = 0x80050000;
	EMU_Write32(AT + 22804,R0); //+ 0x5914
	ZZ_CLOCKCYCLES(7,0x80048A04);
ZZ_489B8_4C:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8001416C,ZZ_13D48_424);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800489B8,0x800489E0,ZZ_489B8);
ZZ_MARK_TARGET(0x800489E0,0x800489E8,ZZ_489B8_28);
ZZ_MARK_TARGET(0x800489E8,0x80048A04,ZZ_489B8_30);
ZZ_MARK_TARGET(0x80048A04,0x80048A18,ZZ_489B8_4C);
