#ifdef ZZ_INCLUDE_CODE
ZZ_42B9C:
	GTE_SetRegister(30,A0);
	V0 = GTE_GetRegister(31);
	AT = 32;
	if (V0 == AT)
	{
		ZZ_CLOCKCYCLES(7,0x80042C18);
		goto ZZ_42B9C_7C;
	}
	T0 = V0 & 0x1;
	T2 = -2;
	T2 &= V0;
	T1 = 31;
	T1 = EMU_CheckedSubtract(T1,T2);
	T1 = (int32_t)T1 >> 1;
	T3 = EMU_CheckedAdd(T2,-24);
	if ((int32_t)T3 < 0)
	{
		ZZ_CLOCKCYCLES(16,0x80042BE4);
		goto ZZ_42B9C_48;
	}
	T4 = A0 << T3;
	if (!R0)
	{
		T3 = 24;
		ZZ_CLOCKCYCLES(19,0x80042BF0);
		goto ZZ_42B9C_54;
	}
	ZZ_CLOCKCYCLES(18,0x80042BE4);
ZZ_42B9C_48:
	T3 = 24;
	T3 = EMU_CheckedSubtract(T3,T2);
	T4 = (int32_t)A0 >> T3;
	ZZ_CLOCKCYCLES(3,0x80042BF0);
ZZ_42B9C_54:
	T4 = EMU_CheckedAdd(T4,-64);
	T4 <<= 1;
	T5 = 0x80050000;
	T5 += T4;
	T5 = EMU_ReadS16(T5 + 19356); //+ 0x4B9C
	T5 <<= T1;
	V0 = T5 >> 12;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80029DFC,ZZ_29DB0_4C);
	ZZ_JUMPREGISTER(0x80029D9C,ZZ_29D30_6C);
	ZZ_JUMPREGISTER(0x8001AE74,ZZ_1AC9C_1D8);
	ZZ_JUMPREGISTER(0x80018580,ZZ_180CC_4B4);
	ZZ_JUMPREGISTER(0x8002BC68,ZZ_2BAB4_1B4);
	ZZ_JUMPREGISTER(0x800187C4,ZZ_180CC_6F8);
	ZZ_JUMPREGISTER(0x8002A7F0,ZZ_2A3EC_404);
	ZZ_JUMPREGISTER(0x8002A3D0,ZZ_2A0C4_30C);
	ZZ_JUMPREGISTER(0x8002DC58,ZZ_2D8B8_3A0);
	ZZ_JUMPREGISTER_END();
ZZ_42B9C_7C:
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = 0;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80029DFC,ZZ_29DB0_4C);
	ZZ_JUMPREGISTER(0x80029D9C,ZZ_29D30_6C);
	ZZ_JUMPREGISTER(0x8001AE74,ZZ_1AC9C_1D8);
	ZZ_JUMPREGISTER(0x80018580,ZZ_180CC_4B4);
	ZZ_JUMPREGISTER(0x8002BC68,ZZ_2BAB4_1B4);
	ZZ_JUMPREGISTER(0x800187C4,ZZ_180CC_6F8);
	ZZ_JUMPREGISTER(0x8002A7F0,ZZ_2A3EC_404);
	ZZ_JUMPREGISTER(0x8002A3D0,ZZ_2A0C4_30C);
	ZZ_JUMPREGISTER(0x8002DC58,ZZ_2D8B8_3A0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80042B9C,0x80042BE4,ZZ_42B9C);
ZZ_MARK_TARGET(0x80042BE4,0x80042BF0,ZZ_42B9C_48);
ZZ_MARK_TARGET(0x80042BF0,0x80042C18,ZZ_42B9C_54);
ZZ_MARK_TARGET(0x80042C18,0x80042C20,ZZ_42B9C_7C);
