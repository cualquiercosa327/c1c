#ifdef ZZ_INCLUDE_CODE
ZZ_44640:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21932); //+ 0x55AC
	SP -= 80;
	EMU_Write32(SP + 60,S5); //+ 0x3C
	S5 = A1;
	EMU_Write32(SP + 68,S7); //+ 0x44
	S7 = A2;
	EMU_Write32(SP + 40,S0); //+ 0x28
	S0 = A3;
	EMU_Write32(SP + 52,S3); //+ 0x34
	S3 = A0;
	EMU_Write32(SP + 72,RA); //+ 0x48
	EMU_Write32(SP + 64,S6); //+ 0x40
	EMU_Write32(SP + 56,S4); //+ 0x38
	EMU_Write32(SP + 48,S2); //+ 0x30
	V0 = (int32_t)V0 < 2;
	if (V0)
	{
		EMU_Write32(SP + 44,S1); //+ 0x2C
		ZZ_CLOCKCYCLES(18,0x800446B0);
		goto ZZ_44640_70;
	}
	EMU_Write32(SP + 44,S1); //+ 0x2C
	V0 = S3 & 0xFF;
	V0 <<= 2;
	AT = 0x80050000;
	AT += 21956;
	AT += V0;
	A1 = EMU_ReadU32(AT);
	A0 = 0x80010000;
	A0 += 5524;
	RA = 0x800446B0; //ZZ_44640_70
	ZZ_CLOCKCYCLES(28,0x8003D730);
	goto ZZ_3D730;
ZZ_44640_70:
	V0 = S3 & 0xFF;
	V1 = V0 << 2;
	AT = 0x80050000;
	AT += 22500;
	AT += V1;
	V0 = EMU_ReadU32(AT);
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(9,0x80044718);
		goto ZZ_44640_D8;
	}
	A0 = R0;
	if (S5)
	{
		ZZ_CLOCKCYCLES(11,0x80044718);
		goto ZZ_44640_D8;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21932); //+ 0x55AC
	if ((int32_t)V0 <= 0)
	{
		V0 = -2;
		ZZ_CLOCKCYCLES(16,0x80044A78);
		goto ZZ_44640_438;
	}
	V0 = -2;
	AT = 0x80050000;
	AT += 21956;
	AT += V1;
	A1 = EMU_ReadU32(AT);
	A0 = 0x80010000;
	A0 += 5532;
	RA = 0x80044710; //ZZ_44640_D0
	ZZ_CLOCKCYCLES(24,0x8003D730);
	goto ZZ_3D730;
ZZ_44640_D0:
	V0 = -2;
	ZZ_CLOCKCYCLES(2,0x80044A78);
	goto ZZ_44640_438;
ZZ_44640_D8:
	RA = 0x80044720; //ZZ_44640_E0
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x800440EC);
	goto ZZ_440EC;
ZZ_44640_E0:
	V1 = S3 & 0xFF;
	V0 = 0x2;
	if (V1 != V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x8004475C);
		goto ZZ_44640_11C;
	}
	A0 = R0;
	V1 = S5;
	ZZ_CLOCKCYCLES(5,0x80044734);
ZZ_44640_F4:
	V0 = EMU_ReadU8(V1);
	AT = 0x80050000;
	AT += 21948;
	AT += A0;
	EMU_Write8(AT,V0);
	A0 += 1;
	V0 = (int32_t)A0 < 4;
	if (V0)
	{
		V1 += 1;
		ZZ_CLOCKCYCLES(10,0x80044734);
		goto ZZ_44640_F4;
	}
	V1 += 1;
	ZZ_CLOCKCYCLES(10,0x8004475C);
ZZ_44640_11C:
	V0 = 0x80050000;
	V0 += 22652;
	EMU_Write8(V0,R0);
	V0 = S3 & 0xFF;
	A0 = V0 << 2;
	AT = 0x80050000;
	AT += 22244;
	AT += A0;
	V0 = EMU_ReadU32(AT);
	V1 = 0x80050000;
	V1 += 22244;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x80044798);
		goto ZZ_44640_158;
	}
	AT = 0x80050000;
	EMU_Write8(AT + 22653,R0); //+ 0x587D
	ZZ_CLOCKCYCLES(15,0x80044798);
ZZ_44640_158:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	EMU_Write8(V0,R0);
	V0 = V1 + 256;
	V1 = A0 + V0;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(10,0x800447F0);
		goto ZZ_44640_1B0;
	}
	A0 = R0;
	A2 = V1;
	A1 = S5;
	ZZ_CLOCKCYCLES(12,0x800447C8);
ZZ_44640_188:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22636); //+ 0x586C
	V0 = EMU_ReadU8(A1);
	A1 += 1;
	EMU_Write8(V1,V0);
	V0 = EMU_ReadU32(A2);
	A0 += 1;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(10,0x800447C8);
		goto ZZ_44640_188;
	}
	ZZ_CLOCKCYCLES(10,0x800447F0);
ZZ_44640_1B0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22632); //+ 0x5868
	AT = 0x80050000;
	EMU_Write8(AT + 21953,S3); //+ 0x55C1
	EMU_Write8(V0,S3);
	if (S0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(7,0x80044A78);
		goto ZZ_44640_438;
	}
	V0 = R0;
	RA = 0x80044814; //ZZ_44640_1D4
	A0 = -1;
	ZZ_CLOCKCYCLES(9,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_44640_1D4:
	V0 += 480;
	A0 = 0x80050000;
	A0 += 22652;
	AT = 0x80050000;
	EMU_Write32(AT + 29104,V0); //+ 0x71B0
	AT = 0x80050000;
	EMU_Write32(AT + 29108,R0); //+ 0x71B4
	V1 = EMU_ReadU8(A0);
	V0 = 0x80010000;
	V0 += 5548;
	AT = 0x80050000;
	EMU_Write32(AT + 29112,V0); //+ 0x71B8
	if (V1)
	{
		ZZ_CLOCKCYCLES(14,0x800449F0);
		goto ZZ_44640_3B0;
	}
	S4 = 0x80050000;
	S4 += 22084;
	S2 = A0;
	S6 = A0 + 1;
	ZZ_CLOCKCYCLES(18,0x8004485C);
ZZ_44640_21C:
	RA = 0x80044864; //ZZ_44640_224
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_44640_224:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29104); //+ 0x71B0
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x800448A4);
		goto ZZ_44640_264;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 29108); //+ 0x71B4
	V0 = V1 + 1;
	AT = 0x80050000;
	EMU_Write32(AT + 29108,V0); //+ 0x71B4
	V0 = 0x1E0000;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x8004491C);
		goto ZZ_44640_2DC;
	}
	ZZ_CLOCKCYCLES(16,0x800448A4);
ZZ_44640_264:
	A0 = 0x80010000;
	A0 += 5368;
	RA = 0x800448B4; //ZZ_44640_274
	ZZ_CLOCKCYCLES(4,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_44640_274:
	A0 = EMU_ReadU8(S2);
	V0 = EMU_ReadU8(S2 + 1); //+ 0x1
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 29112); //+ 0x71B8
	V0 <<= 2;
	V0 += S4;
	A0 <<= 2;
	V1 = EMU_ReadU32(V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 21953); //+ 0x55C1
	A0 += S4;
	V0 <<= 2;
	EMU_Write32(SP + 16,V1); //+ 0x10
	AT = 0x80050000;
	AT += 21956;
	AT += V0;
	A2 = EMU_ReadU32(AT);
	A3 = EMU_ReadU32(A0);
	A0 = 0x80010000;
	A0 += 5384;
	RA = 0x8004490C; //ZZ_44640_2CC
	ZZ_CLOCKCYCLES(22,0x8003D730);
	goto ZZ_3D730;
ZZ_44640_2CC:
	RA = 0x80044914; //ZZ_44640_2D4
	ZZ_CLOCKCYCLES(2,0x80044C40);
	goto ZZ_44C40;
ZZ_44640_2D4:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80044920);
	goto ZZ_44640_2E0;
ZZ_44640_2DC:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80044920);
ZZ_44640_2E0:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80044A78);
		goto ZZ_44640_438;
	}
	V0 = -1;
	RA = 0x80044930; //ZZ_44640_2F0
	ZZ_CLOCKCYCLES(4,0x8003E848);
	goto ZZ_3E848;
ZZ_44640_2F0:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800449E0);
		goto ZZ_44640_3A0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	V0 = EMU_ReadU8(V0);
	S1 = V0 & 0x3;
	ZZ_CLOCKCYCLES(8,0x80044950);
ZZ_44640_310:
	RA = 0x80044958; //ZZ_44640_318
	ZZ_CLOCKCYCLES(2,0x80043BA8);
	goto ZZ_43BA8;
ZZ_44640_318:
	S0 = V0;
	if (!S0)
	{
		V0 = S0 & 0x4;
		ZZ_CLOCKCYCLES(3,0x800449D0);
		goto ZZ_44640_390;
	}
	V0 = S0 & 0x4;
	if (!V0)
	{
		V0 = S0 & 0x2;
		ZZ_CLOCKCYCLES(5,0x80044998);
		goto ZZ_44640_358;
	}
	V0 = S0 & 0x2;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21924); //+ 0x55A4
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80044994);
		goto ZZ_44640_354;
	}
	A0 = EMU_ReadU8(S6);
	A1 = 0x80050000;
	A1 += 29088;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80044994; //ZZ_44640_354
	ZZ_CLOCKCYCLES_JR(15);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004498C)
	ZZ_JUMPREGISTER_END();
ZZ_44640_354:
	V0 = S0 & 0x2;
	ZZ_CLOCKCYCLES(1,0x80044998);
ZZ_44640_358:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80044950);
		goto ZZ_44640_310;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21920); //+ 0x55A0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80044950);
		goto ZZ_44640_310;
	}
	A0 = EMU_ReadU8(S2);
	A1 = 0x80050000;
	A1 += 29080;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800449C8; //ZZ_44640_388
	ZZ_CLOCKCYCLES_JR(12);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800449C0)
	ZZ_JUMPREGISTER_END();
ZZ_44640_388:
	ZZ_CLOCKCYCLES(2,0x80044950);
	goto ZZ_44640_310;
ZZ_44640_390:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	EMU_Write8(V0,S1);
	ZZ_CLOCKCYCLES(4,0x800449E0);
ZZ_44640_3A0:
	V0 = EMU_ReadU8(S2);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8004485C);
		goto ZZ_44640_21C;
	}
	ZZ_CLOCKCYCLES(4,0x800449F0);
ZZ_44640_3B0:
	V0 = 0x80050000;
	V0 += 22652;
	V0 = EMU_ReadU8(V0);
	V1 = 0x2;
	V0 &= 0xFF;
	if (V0 != V1)
	{
		A2 = S7;
		ZZ_CLOCKCYCLES(7,0x80044A2C);
		goto ZZ_44640_3EC;
	}
	A2 = S7;
	V1 = S3 & 0xFF;
	V0 = 0xE;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(11,0x80044A2C);
		goto ZZ_44640_3EC;
	}
	V0 = EMU_ReadU8(S5);
	AT = 0x80050000;
	EMU_Write8(AT + 21952,V0); //+ 0x55C0
	ZZ_CLOCKCYCLES(15,0x80044A2C);
ZZ_44640_3EC:
	A0 = 0x80050000;
	A0 += 29080;
	if (!A2)
	{
		ZZ_CLOCKCYCLES(4,0x80044A5C);
		goto ZZ_44640_41C;
	}
	V1 = 0x7;
	A1 = -1;
	ZZ_CLOCKCYCLES(6,0x80044A44);
ZZ_44640_404:
	V0 = EMU_ReadU8(A0);
	A0 += 1;
	V1 -= 1;
	EMU_Write8(A2,V0);
	if (V1 != A1)
	{
		A2 += 1;
		ZZ_CLOCKCYCLES(6,0x80044A44);
		goto ZZ_44640_404;
	}
	A2 += 1;
	ZZ_CLOCKCYCLES(6,0x80044A5C);
ZZ_44640_41C:
	V0 = 0x80050000;
	V0 += 22652;
	V0 = EMU_ReadU8(V0);
	V0 ^= 0x5;
	V0 = V0 < 1;
	V0 = -V0;
	ZZ_CLOCKCYCLES(7,0x80044A78);
ZZ_44640_438:
	RA = EMU_ReadU32(SP + 72); //+ 0x48
	S7 = EMU_ReadU32(SP + 68); //+ 0x44
	S6 = EMU_ReadU32(SP + 64); //+ 0x40
	S5 = EMU_ReadU32(SP + 60); //+ 0x3C
	S4 = EMU_ReadU32(SP + 56); //+ 0x38
	S3 = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 80;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80043610,ZZ_43520_F0);
	ZZ_JUMPREGISTER(0x800435EC,ZZ_43520_CC);
	ZZ_JUMPREGISTER(0x80044BE0,ZZ_44B30_B0);
	ZZ_JUMPREGISTER(0x80044BB0,ZZ_44B30_80);
	ZZ_JUMPREGISTER(0x80044BF8,ZZ_44B30_C8);
	ZZ_JUMPREGISTER(0x8004501C,ZZ_44E8C_190);
	ZZ_JUMPREGISTER(0x80045048,ZZ_44E8C_1BC);
	ZZ_JUMPREGISTER(0x80043750,ZZ_43668_E8);
	ZZ_JUMPREGISTER(0x80045148,ZZ_44E8C_2BC);
	ZZ_JUMPREGISTER(0x80045164,ZZ_44E8C_2D8);
	ZZ_JUMPREGISTER(0x8004372C,ZZ_43668_C4);
	ZZ_JUMPREGISTER(0x800450EC,ZZ_44E8C_260);
	ZZ_JUMPREGISTER(0x800450BC,ZZ_44E8C_230);
	ZZ_JUMPREGISTER(0x80045104,ZZ_44E8C_278);
	ZZ_JUMPREGISTER(0x800455E4,ZZ_45518_CC);
	ZZ_JUMPREGISTER(0x80045348,ZZ_4519C_1AC);
	ZZ_JUMPREGISTER(0x80045364,ZZ_4519C_1C8);
	ZZ_JUMPREGISTER(0x800452EC,ZZ_4519C_150);
	ZZ_JUMPREGISTER(0x800452BC,ZZ_4519C_120);
	ZZ_JUMPREGISTER(0x80045304,ZZ_4519C_168);
	ZZ_JUMPREGISTER(0x8004545C,ZZ_4519C_2C0);
	ZZ_JUMPREGISTER(0x80045494,ZZ_4519C_2F8);
	ZZ_JUMPREGISTER(0x80045D28,ZZ_45C04_124);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80044640,0x800446B0,ZZ_44640);
ZZ_MARK_TARGET(0x800446B0,0x80044710,ZZ_44640_70);
ZZ_MARK_TARGET(0x80044710,0x80044718,ZZ_44640_D0);
ZZ_MARK_TARGET(0x80044718,0x80044720,ZZ_44640_D8);
ZZ_MARK_TARGET(0x80044720,0x80044734,ZZ_44640_E0);
ZZ_MARK_TARGET(0x80044734,0x8004475C,ZZ_44640_F4);
ZZ_MARK_TARGET(0x8004475C,0x80044798,ZZ_44640_11C);
ZZ_MARK_TARGET(0x80044798,0x800447C8,ZZ_44640_158);
ZZ_MARK_TARGET(0x800447C8,0x800447F0,ZZ_44640_188);
ZZ_MARK_TARGET(0x800447F0,0x80044814,ZZ_44640_1B0);
ZZ_MARK_TARGET(0x80044814,0x8004485C,ZZ_44640_1D4);
ZZ_MARK_TARGET(0x8004485C,0x80044864,ZZ_44640_21C);
ZZ_MARK_TARGET(0x80044864,0x800448A4,ZZ_44640_224);
ZZ_MARK_TARGET(0x800448A4,0x800448B4,ZZ_44640_264);
ZZ_MARK_TARGET(0x800448B4,0x8004490C,ZZ_44640_274);
ZZ_MARK_TARGET(0x8004490C,0x80044914,ZZ_44640_2CC);
ZZ_MARK_TARGET(0x80044914,0x8004491C,ZZ_44640_2D4);
ZZ_MARK_TARGET(0x8004491C,0x80044920,ZZ_44640_2DC);
ZZ_MARK_TARGET(0x80044920,0x80044930,ZZ_44640_2E0);
ZZ_MARK_TARGET(0x80044930,0x80044950,ZZ_44640_2F0);
ZZ_MARK_TARGET(0x80044950,0x80044958,ZZ_44640_310);
ZZ_MARK_TARGET(0x80044958,0x80044994,ZZ_44640_318);
ZZ_MARK_TARGET(0x80044994,0x80044998,ZZ_44640_354);
ZZ_MARK_TARGET(0x80044998,0x800449C8,ZZ_44640_358);
ZZ_MARK_TARGET(0x800449C8,0x800449D0,ZZ_44640_388);
ZZ_MARK_TARGET(0x800449D0,0x800449E0,ZZ_44640_390);
ZZ_MARK_TARGET(0x800449E0,0x800449F0,ZZ_44640_3A0);
ZZ_MARK_TARGET(0x800449F0,0x80044A2C,ZZ_44640_3B0);
ZZ_MARK_TARGET(0x80044A2C,0x80044A44,ZZ_44640_3EC);
ZZ_MARK_TARGET(0x80044A44,0x80044A5C,ZZ_44640_404);
ZZ_MARK_TARGET(0x80044A5C,0x80044A78,ZZ_44640_41C);
ZZ_MARK_TARGET(0x80044A78,0x80044AA8,ZZ_44640_438);
