#ifdef ZZ_INCLUDE_CODE
ZZ_44E8C:
	SP -= 32;
	A0 = 0x80010000;
	A0 += 5640;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	RA = 0x80044EA8; //ZZ_44E8C_1C
	EMU_Write32(SP + 16,S0); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_44E8C_1C:
	A0 = 0x80010000;
	A0 += 5652;
	A1 = 0x80050000;
	A1 += 22704;
	RA = 0x80044EC0; //ZZ_44E8C_34
	ZZ_CLOCKCYCLES(6,0x8003D730);
	goto ZZ_3D730;
ZZ_44E8C_34:
	V1 = 0x80050000;
	V1 += 22656;
	V0 = 0x9;
	A0 = -1;
	AT = 0x80050000;
	EMU_Write8(AT + 21953,R0); //+ 0x55C1
	AT = 0x80050000;
	EMU_Write8(AT + 21952,R0); //+ 0x55C0
	AT = 0x80050000;
	EMU_Write32(AT + 21924,R0); //+ 0x55A4
	AT = 0x80050000;
	EMU_Write32(AT + 21920,R0); //+ 0x55A0
	AT = 0x80050000;
	EMU_Write32(AT + 21940,R0); //+ 0x55B4
	AT = 0x80050000;
	EMU_Write32(AT + 21936,R0); //+ 0x55B0
	ZZ_CLOCKCYCLES(16,0x80044F00);
ZZ_44E8C_74:
	EMU_Write32(V1,R0);
	V0 -= 1;
	if (V0 != A0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(4,0x80044F00);
		goto ZZ_44E8C_74;
	}
	V1 += 4;
	RA = 0x80044F18; //ZZ_44E8C_8C
	ZZ_CLOCKCYCLES(6,0x8003E6F4);
	goto ZZ_3E6F4;
ZZ_44E8C_8C:
	A1 = 0x80040000;
	A1 += 23332;
	RA = 0x80044F28; //ZZ_44E8C_9C
	A0 = 0x2;
	ZZ_CLOCKCYCLES(4,0x8003E724);
	goto ZZ_3E724;
ZZ_44E8C_9C:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22628); //+ 0x5864
	V0 = 0x1;
	EMU_Write8(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22640); //+ 0x5870
	V0 = EMU_ReadU8(V0);
	V0 &= 0x7;
	if (!V0)
	{
		A0 = 0x1;
		ZZ_CLOCKCYCLES(12,0x80044FAC);
		goto ZZ_44E8C_120;
	}
	A0 = 0x1;
	V1 = 0x7;
	ZZ_CLOCKCYCLES(13,0x80044F5C);
ZZ_44E8C_D0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	EMU_Write8(V0,A0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22640); //+ 0x5870
	EMU_Write8(V0,V1);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22636); //+ 0x586C
	EMU_Write8(V0,V1);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22640); //+ 0x5870
	V0 = EMU_ReadU8(V0);
	V0 &= 0x7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(20,0x80044F5C);
		goto ZZ_44E8C_D0;
	}
	ZZ_CLOCKCYCLES(20,0x80044FAC);
ZZ_44E8C_120:
	A0 = 0x1;
	A1 = R0;
	A2 = R0;
	AT = 0x80050000;
	EMU_Write8(AT + 22654,R0); //+ 0x587E
	V1 = 0x80050000;
	V1 = EMU_ReadU8(V1 + 22654); //+ 0x587E
	V0 = 0x80050000;
	V0 += 22653;
	AT = 0x80050000;
	EMU_Write8(AT + 21952,R0); //+ 0x55C0
	EMU_Write8(V0,V1);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22628); //+ 0x5864
	V0 = 0x2;
	AT = 0x80050000;
	EMU_Write8(AT + 22652,V0); //+ 0x587C
	EMU_Write8(V1,R0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22640); //+ 0x5870
	A3 = R0;
	EMU_Write8(V0,R0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22644); //+ 0x5874
	V0 = 0x1325;
	EMU_Write32(V1,V0);
	RA = 0x8004501C; //ZZ_44E8C_190
	ZZ_CLOCKCYCLES(28,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_190:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21936); //+ 0x55B0
	V0 &= 0x10;
	if (!V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(6,0x80045048);
		goto ZZ_44E8C_1BC;
	}
	S0 = R0;
	A0 = 0x1;
	A1 = R0;
	A2 = R0;
	RA = 0x80045048; //ZZ_44E8C_1BC
	A3 = R0;
	ZZ_CLOCKCYCLES(11,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_1BC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22696); //+ 0x58A8
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 21944); //+ 0x55B8
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		A0 = 0xA;
		ZZ_CLOCKCYCLES(8,0x80045138);
		goto ZZ_44E8C_2AC;
	}
	A0 = 0xA;
	S1 = 0x80050000;
	S1 = EMU_ReadU32(S1 + 21920); //+ 0x55A0
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21936); //+ 0x55B0
	AT = 0x80050000;
	EMU_Write32(AT + 21920,R0); //+ 0x55A0
	V0 &= 0x10;
	if (!V0)
	{
		A0 = 0x16;
		ZZ_CLOCKCYCLES(17,0x800450D8);
		goto ZZ_44E8C_24C;
	}
	A0 = 0x16;
	V0 = S0 & 0xFF;
	ZZ_CLOCKCYCLES(18,0x80045090);
ZZ_44E8C_204:
	if (V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(2,0x800450A8);
		goto ZZ_44E8C_21C;
	}
	S0 += 1;
	A0 = 0x80010000;
	A0 += 5556;
	RA = 0x800450A8; //ZZ_44E8C_21C
	ZZ_CLOCKCYCLES(6,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_44E8C_21C:
	A0 = 0x1;
	A1 = R0;
	A2 = R0;
	RA = 0x800450BC; //ZZ_44E8C_230
	A3 = R0;
	ZZ_CLOCKCYCLES(5,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_230:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21936); //+ 0x55B0
	V0 &= 0x10;
	if (V0)
	{
		V0 = S0 & 0xFF;
		ZZ_CLOCKCYCLES(6,0x80045090);
		goto ZZ_44E8C_204;
	}
	V0 = S0 & 0xFF;
	A0 = 0x16;
	ZZ_CLOCKCYCLES(7,0x800450D8);
ZZ_44E8C_24C:
	A1 = 0x80050000;
	A1 += 22700;
	A2 = R0;
	RA = 0x800450EC; //ZZ_44E8C_260
	A3 = R0;
	ZZ_CLOCKCYCLES(5,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_260:
	if (!V0)
	{
		A0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8004511C);
		goto ZZ_44E8C_290;
	}
	A0 = 0x1;
	A1 = R0;
	A2 = R0;
	RA = 0x80045104; //ZZ_44E8C_278
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_278:
	A0 = 0x80010000;
	A0 += 5572;
	RA = 0x80045114; //ZZ_44E8C_288
	ZZ_CLOCKCYCLES(4,0x8003E6D4);
	goto ZZ_3E6D4;
ZZ_44E8C_288:
	A0 = 0x16;
	ZZ_CLOCKCYCLES(2,0x800450D8);
	goto ZZ_44E8C_24C;
ZZ_44E8C_290:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 21944); //+ 0x55B8
	AT = 0x80050000;
	EMU_Write32(AT + 21920,S1); //+ 0x55A0
	AT = 0x80050000;
	EMU_Write32(AT + 22696,V0); //+ 0x58A8
	A0 = 0xA;
	ZZ_CLOCKCYCLES(7,0x80045138);
ZZ_44E8C_2AC:
	A1 = R0;
	A2 = R0;
	RA = 0x80045148; //ZZ_44E8C_2BC
	A3 = R0;
	ZZ_CLOCKCYCLES(4,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_2BC:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80045184);
		goto ZZ_44E8C_2F8;
	}
	V0 = -1;
	A0 = 0xC;
	A1 = R0;
	A2 = R0;
	RA = 0x80045164; //ZZ_44E8C_2D8
	A3 = R0;
	ZZ_CLOCKCYCLES(7,0x80044640);
	goto ZZ_44640;
ZZ_44E8C_2D8:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80045184);
		goto ZZ_44E8C_2F8;
	}
	V0 = -1;
	A0 = R0;
	RA = 0x80045178; //ZZ_44E8C_2EC
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x800440EC);
	goto ZZ_440EC;
ZZ_44E8C_2EC:
	V0 ^= 0x2;
	V0 = R0 < V0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x80045184);
ZZ_44E8C_2F8:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800433B4,ZZ_43384_30);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80044E8C,0x80044EA8,ZZ_44E8C);
ZZ_MARK_TARGET(0x80044EA8,0x80044EC0,ZZ_44E8C_1C);
ZZ_MARK_TARGET(0x80044EC0,0x80044F00,ZZ_44E8C_34);
ZZ_MARK_TARGET(0x80044F00,0x80044F18,ZZ_44E8C_74);
ZZ_MARK_TARGET(0x80044F18,0x80044F28,ZZ_44E8C_8C);
ZZ_MARK_TARGET(0x80044F28,0x80044F5C,ZZ_44E8C_9C);
ZZ_MARK_TARGET(0x80044F5C,0x80044FAC,ZZ_44E8C_D0);
ZZ_MARK_TARGET(0x80044FAC,0x8004501C,ZZ_44E8C_120);
ZZ_MARK_TARGET(0x8004501C,0x80045048,ZZ_44E8C_190);
ZZ_MARK_TARGET(0x80045048,0x80045090,ZZ_44E8C_1BC);
ZZ_MARK_TARGET(0x80045090,0x800450A8,ZZ_44E8C_204);
ZZ_MARK_TARGET(0x800450A8,0x800450BC,ZZ_44E8C_21C);
ZZ_MARK_TARGET(0x800450BC,0x800450D8,ZZ_44E8C_230);
ZZ_MARK_TARGET(0x800450D8,0x800450EC,ZZ_44E8C_24C);
ZZ_MARK_TARGET(0x800450EC,0x80045104,ZZ_44E8C_260);
ZZ_MARK_TARGET(0x80045104,0x80045114,ZZ_44E8C_278);
ZZ_MARK_TARGET(0x80045114,0x8004511C,ZZ_44E8C_288);
ZZ_MARK_TARGET(0x8004511C,0x80045138,ZZ_44E8C_290);
ZZ_MARK_TARGET(0x80045138,0x80045148,ZZ_44E8C_2AC);
ZZ_MARK_TARGET(0x80045148,0x80045164,ZZ_44E8C_2BC);
ZZ_MARK_TARGET(0x80045164,0x80045178,ZZ_44E8C_2D8);
ZZ_MARK_TARGET(0x80045178,0x80045184,ZZ_44E8C_2EC);
ZZ_MARK_TARGET(0x80045184,0x8004519C,ZZ_44E8C_2F8);
