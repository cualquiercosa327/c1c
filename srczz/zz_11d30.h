#ifdef ZZ_INCLUDE_CODE
ZZ_11D30:
	EMU_SMultiply(A1,A0);
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = LO;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 16,S0); //+ 0x10
	RA = 0x80011D54; //ZZ_11D30_24
	A0 = S1;
	ZZ_CLOCKCYCLES(9,0x80011A58);
	goto ZZ_11A58;
ZZ_11D30_24:
	S0 = V0;
	if (!S0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(3,0x80011D70);
		goto ZZ_11D30_40;
	}
	A0 = S0;
	RA = 0x80011D68; //ZZ_11D30_38
	A1 = S1;
	ZZ_CLOCKCYCLES(5,0x8003D700);
	goto ZZ_3D700;
ZZ_11D30_38:
	V0 = S0;
	ZZ_CLOCKCYCLES(2,0x80011D74);
	goto ZZ_11D30_44;
ZZ_11D30_40:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80011D74);
ZZ_11D30_44:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 32;
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80031BD0,ZZ_31BAC_24);
	ZZ_JUMPREGISTER(0x8003CE34,ZZ_3CE20_14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80011D30,0x80011D54,ZZ_11D30);
ZZ_MARK_TARGET(0x80011D54,0x80011D68,ZZ_11D30_24);
ZZ_MARK_TARGET(0x80011D68,0x80011D70,ZZ_11D30_38);
ZZ_MARK_TARGET(0x80011D70,0x80011D74,ZZ_11D30_40);
ZZ_MARK_TARGET(0x80011D74,0x80011D88,ZZ_11D30_44);
