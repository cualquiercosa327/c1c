#ifdef ZZ_INCLUDE_CODE
ZZ_1C6C8:
	SP -= 64;
	EMU_Write32(SP + 52,S7); //+ 0x34
	S7 = EMU_ReadU32(SP + 80); //+ 0x50
	EMU_Write32(SP + 44,S5); //+ 0x2C
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A0;
	EMU_Write32(SP + 36,S3); //+ 0x24
	S3 = A1;
	EMU_Write32(SP + 40,S4); //+ 0x28
	S4 = A2;
	EMU_Write32(SP + 48,S6); //+ 0x30
	S6 = A3;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 28,S1); //+ 0x1C
	if (S3)
	{
		EMU_Write32(SP + 24,S0); //+ 0x18
		ZZ_CLOCKCYCLES(17,0x8001C72C);
		goto ZZ_1C6C8_64;
	}
	EMU_Write32(SP + 24,S0); //+ 0x18
	if (S4)
	{
		ZZ_CLOCKCYCLES(19,0x8001C72C);
		goto ZZ_1C6C8_64;
	}
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 + 3504); //+ 0xDB0
	EMU_Write32(GP + 696,S1); //+ 0x2B8
	ZZ_CLOCKCYCLES(25,0x8001C824);
	goto ZZ_1C6C8_15C;
ZZ_1C6C8_64:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 3576); //+ 0xDF8
	V0 = 0x2;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001C750);
		goto ZZ_1C6C8_88;
	}
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 + 3580); //+ 0xDFC
	ZZ_CLOCKCYCLES(9,0x8001C758);
	goto ZZ_1C6C8_90;
ZZ_1C6C8_88:
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 + 3684); //+ 0xE64
	ZZ_CLOCKCYCLES(2,0x8001C758);
ZZ_1C6C8_90:
	if (S1)
	{
		ZZ_CLOCKCYCLES(3,0x8001C82C);
		goto ZZ_1C6C8_164;
	}
	if (!S5)
	{
		ZZ_CLOCKCYCLES(5,0x8001C824);
		goto ZZ_1C6C8_15C;
	}
	A0 = 0x80060000;
	A0 += 3536;
	if (A0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(9,0x8001C784);
		goto ZZ_1C6C8_BC;
	}
	V1 = R0;
	V0 = R0;
	ZZ_CLOCKCYCLES(11,0x8001C80C);
	goto ZZ_1C6C8_144;
ZZ_1C6C8_BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3536); //+ 0xDD0
	S0 = 0x2;
	if (V0 == S0)
	{
		ZZ_CLOCKCYCLES(5,0x8001C7C0);
		goto ZZ_1C6C8_F8;
	}
	RA = 0x8001C7A0; //ZZ_1C6C8_D8
	A1 = 0x80000;
	ZZ_CLOCKCYCLES(7,0x8001BCA4);
	goto ZZ_1BCA4;
ZZ_1C6C8_D8:
	V1 = V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(3,0x8001C80C);
		goto ZZ_1C6C8_144;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3536); //+ 0xDD0
	if (V0 != S0)
	{
		ZZ_CLOCKCYCLES(8,0x8001C7D0);
		goto ZZ_1C6C8_108;
	}
	ZZ_CLOCKCYCLES(8,0x8001C7C0);
ZZ_1C6C8_F8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 3540); //+ 0xDD4
	ZZ_CLOCKCYCLES(4,0x8001C7FC);
	goto ZZ_1C6C8_134;
ZZ_1C6C8_108:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 3644); //+ 0xE3C
	ZZ_CLOCKCYCLES(4,0x8001C7FC);
	goto ZZ_1C6C8_134;
ZZ_1C6C8_118:
	A1 = 0x80020000;
	A1 -= 17244;
	S0 = EMU_ReadU32(A0 + 104); //+ 0x68
	RA = 0x8001C7F4; //ZZ_1C6C8_12C
	A2 = 0x80000;
	ZZ_CLOCKCYCLES(5,0x8001B788);
	goto ZZ_1B788;
ZZ_1C6C8_12C:
	V1 = V0;
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x8001C7FC);
ZZ_1C6C8_134:
	if (!A0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(2,0x8001C80C);
		goto ZZ_1C6C8_144;
	}
	V0 = V1;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(4,0x8001C7E0);
		goto ZZ_1C6C8_118;
	}
	ZZ_CLOCKCYCLES(4,0x8001C80C);
ZZ_1C6C8_144:
	if (!V0)
	{
		A0 = V0;
		ZZ_CLOCKCYCLES(2,0x8001C824);
		goto ZZ_1C6C8_15C;
	}
	A0 = V0;
	RA = 0x8001C81C; //ZZ_1C6C8_154
	A1 = R0;
	ZZ_CLOCKCYCLES(4,0x8001D1E0);
	goto ZZ_1D1E0;
ZZ_1C6C8_154:
	ZZ_CLOCKCYCLES(2,0x8001C72C);
	goto ZZ_1C6C8_64;
ZZ_1C6C8_15C:
	if (!S1)
	{
		V0 = -22;
		ZZ_CLOCKCYCLES(2,0x8001CB50);
		goto ZZ_1C6C8_488;
	}
	V0 = -22;
	ZZ_CLOCKCYCLES(2,0x8001C82C);
ZZ_1C6C8_164:
	A0 = EMU_ReadU32(S1 + 100); //+ 0x64
	if (!A0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(4,0x8001C8BC);
		goto ZZ_1C6C8_1F4;
	}
	V0 = 0x2;
	V1 = EMU_ReadU32(A0);
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001C858);
		goto ZZ_1C6C8_190;
	}
	V1 = EMU_ReadU32(A0 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(11,0x8001C85C);
	goto ZZ_1C6C8_194;
ZZ_1C6C8_190:
	V1 = EMU_ReadU32(A0 + 108); //+ 0x6C
	ZZ_CLOCKCYCLES(1,0x8001C85C);
ZZ_1C6C8_194:
	if (V1 != S1)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(3,0x8001C894);
		goto ZZ_1C6C8_1CC;
	}
	V0 = 0x2;
	V1 = EMU_ReadU32(A0);
	if (V1 != V0)
	{
		V1 = A0 + 108;
		ZZ_CLOCKCYCLES(7,0x8001C87C);
		goto ZZ_1C6C8_1B4;
	}
	V1 = A0 + 108;
	V1 = A0 + 4;
	ZZ_CLOCKCYCLES(8,0x8001C87C);
ZZ_1C6C8_1B4:
	V0 = EMU_ReadU32(S1 + 104); //+ 0x68
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(3,0x8001C8BC);
	goto ZZ_1C6C8_1F4;
ZZ_1C6C8_1C0:
	if (!V1)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x8001C904);
		goto ZZ_1C6C8_23C;
	}
	A0 = S1;
	V1 = EMU_ReadU32(V1 + 104); //+ 0x68
	ZZ_CLOCKCYCLES(3,0x8001C894);
ZZ_1C6C8_1CC:
	if (!V1)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(3,0x8001C904);
		goto ZZ_1C6C8_23C;
	}
	A0 = S1;
	V0 = EMU_ReadU32(V1 + 104); //+ 0x68
	if (V0 != S1)
	{
		ZZ_CLOCKCYCLES(7,0x8001C888);
		goto ZZ_1C6C8_1C0;
	}
	V0 = EMU_ReadU32(S1 + 104); //+ 0x68
	EMU_Write32(V1 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(10,0x8001C8BC);
ZZ_1C6C8_1F4:
	EMU_Write32(S1 + 100,S2); //+ 0x64
	V1 = EMU_ReadU32(S2);
	V0 = 0x2;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001C8DC);
		goto ZZ_1C6C8_214;
	}
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	EMU_Write32(S1 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(8,0x8001C8E8);
	goto ZZ_1C6C8_220;
ZZ_1C6C8_214:
	V0 = EMU_ReadU32(S2 + 108); //+ 0x6C
	EMU_Write32(S1 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(3,0x8001C8E8);
ZZ_1C6C8_220:
	V1 = EMU_ReadU32(S2);
	V0 = 0x2;
	if (V1 != V0)
	{
		V1 = S2 + 108;
		ZZ_CLOCKCYCLES(4,0x8001C8FC);
		goto ZZ_1C6C8_234;
	}
	V1 = S2 + 108;
	V1 = S2 + 4;
	ZZ_CLOCKCYCLES(5,0x8001C8FC);
ZZ_1C6C8_234:
	EMU_Write32(V1,S1);
	A0 = S1;
	ZZ_CLOCKCYCLES(2,0x8001C904);
ZZ_1C6C8_23C:
	A1 = S3;
	A2 = S4;
	V0 = 0x3;
	A3 = S6;
	EMU_Write32(S1 + 4,V0); //+ 0x4
	RA = 0x8001C920; //ZZ_1C6C8_258
	EMU_Write32(SP + 16,S7); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x8001CB80);
	goto ZZ_1CB80;
ZZ_1C6C8_258:
	V1 = EMU_ReadU32(S1 + 40); //+ 0x28
	if (!V1)
	{
		T1 = V0;
		ZZ_CLOCKCYCLES(4,0x8001C9D4);
		goto ZZ_1C6C8_30C;
	}
	T1 = V0;
	V1 = EMU_ReadU32(V1 + 16); //+ 0x10
	A3 = S1 + 48;
	A2 = V1 + 792;
	V0 = A2 | A3;
	V0 &= 0x3;
	if (!V0)
	{
		T0 = V1 + 840;
		ZZ_CLOCKCYCLES(11,0x8001C9A0);
		goto ZZ_1C6C8_2D8;
	}
	T0 = V1 + 840;
	ZZ_CLOCKCYCLES(11,0x8001C94C);
ZZ_1C6C8_284:
	EMU_ReadLeft(A2 + 3,&V0); //+ 0x3
	EMU_ReadRight(A2,&V0);
	EMU_ReadLeft(A2 + 7,&V1); //+ 0x7
	EMU_ReadRight(A2 + 4,&V1); //+ 0x4
	EMU_ReadLeft(A2 + 11,&A0); //+ 0xB
	EMU_ReadRight(A2 + 8,&A0); //+ 0x8
	EMU_ReadLeft(A2 + 15,&A1); //+ 0xF
	EMU_ReadRight(A2 + 12,&A1); //+ 0xC
	EMU_WriteLeft(A3 + 3,V0); //+ 0x3
	EMU_WriteRight(A3,V0);
	EMU_WriteLeft(A3 + 7,V1); //+ 0x7
	EMU_WriteRight(A3 + 4,V1); //+ 0x4
	EMU_WriteLeft(A3 + 11,A0); //+ 0xB
	EMU_WriteRight(A3 + 8,A0); //+ 0x8
	EMU_WriteLeft(A3 + 15,A1); //+ 0xF
	EMU_WriteRight(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(19,0x8001C94C);
		goto ZZ_1C6C8_284;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(21,0x8001CB40);
	goto ZZ_1C6C8_478;
ZZ_1C6C8_2D8:
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(A2 + 4); //+ 0x4
	A0 = EMU_ReadU32(A2 + 8); //+ 0x8
	A1 = EMU_ReadU32(A2 + 12); //+ 0xC
	EMU_Write32(A3,V0);
	EMU_Write32(A3 + 4,V1); //+ 0x4
	EMU_Write32(A3 + 8,A0); //+ 0x8
	EMU_Write32(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(11,0x8001C9A0);
		goto ZZ_1C6C8_2D8;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(13,0x8001CB40);
	goto ZZ_1C6C8_478;
ZZ_1C6C8_30C:
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S1 != V0)
	{
		A3 = S1 + 48;
		ZZ_CLOCKCYCLES(4,0x8001CA94);
		goto ZZ_1C6C8_3CC;
	}
	A3 = S1 + 48;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A2 = V1 + 840;
	V0 = A2 | A3;
	V0 &= 0x3;
	if (!V0)
	{
		T0 = V1 + 888;
		ZZ_CLOCKCYCLES(14,0x8001CA60);
		goto ZZ_1C6C8_398;
	}
	T0 = V1 + 888;
	ZZ_CLOCKCYCLES(14,0x8001CA0C);
ZZ_1C6C8_344:
	EMU_ReadLeft(A2 + 3,&V0); //+ 0x3
	EMU_ReadRight(A2,&V0);
	EMU_ReadLeft(A2 + 7,&V1); //+ 0x7
	EMU_ReadRight(A2 + 4,&V1); //+ 0x4
	EMU_ReadLeft(A2 + 11,&A0); //+ 0xB
	EMU_ReadRight(A2 + 8,&A0); //+ 0x8
	EMU_ReadLeft(A2 + 15,&A1); //+ 0xF
	EMU_ReadRight(A2 + 12,&A1); //+ 0xC
	EMU_WriteLeft(A3 + 3,V0); //+ 0x3
	EMU_WriteRight(A3,V0);
	EMU_WriteLeft(A3 + 7,V1); //+ 0x7
	EMU_WriteRight(A3 + 4,V1); //+ 0x4
	EMU_WriteLeft(A3 + 11,A0); //+ 0xB
	EMU_WriteRight(A3 + 8,A0); //+ 0x8
	EMU_WriteLeft(A3 + 15,A1); //+ 0xF
	EMU_WriteRight(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(19,0x8001CA0C);
		goto ZZ_1C6C8_344;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(21,0x8001CB40);
	goto ZZ_1C6C8_478;
ZZ_1C6C8_398:
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(A2 + 4); //+ 0x4
	A0 = EMU_ReadU32(A2 + 8); //+ 0x8
	A1 = EMU_ReadU32(A2 + 12); //+ 0xC
	EMU_Write32(A3,V0);
	EMU_Write32(A3 + 4,V1); //+ 0x4
	EMU_Write32(A3 + 8,A0); //+ 0x8
	EMU_Write32(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(11,0x8001CA60);
		goto ZZ_1C6C8_398;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(13,0x8001CB40);
	goto ZZ_1C6C8_478;
ZZ_1C6C8_3CC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A2 = V1 + 792;
	V0 = A2 | A3;
	V0 &= 0x3;
	if (!V0)
	{
		T0 = V1 + 840;
		ZZ_CLOCKCYCLES(10,0x8001CB10);
		goto ZZ_1C6C8_448;
	}
	T0 = V1 + 840;
	ZZ_CLOCKCYCLES(10,0x8001CABC);
ZZ_1C6C8_3F4:
	EMU_ReadLeft(A2 + 3,&V0); //+ 0x3
	EMU_ReadRight(A2,&V0);
	EMU_ReadLeft(A2 + 7,&V1); //+ 0x7
	EMU_ReadRight(A2 + 4,&V1); //+ 0x4
	EMU_ReadLeft(A2 + 11,&A0); //+ 0xB
	EMU_ReadRight(A2 + 8,&A0); //+ 0x8
	EMU_ReadLeft(A2 + 15,&A1); //+ 0xF
	EMU_ReadRight(A2 + 12,&A1); //+ 0xC
	EMU_WriteLeft(A3 + 3,V0); //+ 0x3
	EMU_WriteRight(A3,V0);
	EMU_WriteLeft(A3 + 7,V1); //+ 0x7
	EMU_WriteRight(A3 + 4,V1); //+ 0x4
	EMU_WriteLeft(A3 + 11,A0); //+ 0xB
	EMU_WriteRight(A3 + 8,A0); //+ 0x8
	EMU_WriteLeft(A3 + 15,A1); //+ 0xF
	EMU_WriteRight(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(19,0x8001CABC);
		goto ZZ_1C6C8_3F4;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(21,0x8001CB40);
	goto ZZ_1C6C8_478;
ZZ_1C6C8_448:
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(A2 + 4); //+ 0x4
	A0 = EMU_ReadU32(A2 + 8); //+ 0x8
	A1 = EMU_ReadU32(A2 + 12); //+ 0xC
	EMU_Write32(A3,V0);
	EMU_Write32(A3 + 4,V1); //+ 0x4
	EMU_Write32(A3 + 8,A0); //+ 0x8
	EMU_Write32(A3 + 12,A1); //+ 0xC
	A2 += 16;
	if (A2 != T0)
	{
		A3 += 16;
		ZZ_CLOCKCYCLES(11,0x8001CB10);
		goto ZZ_1C6C8_448;
	}
	A3 += 16;
	V0 = T1;
	ZZ_CLOCKCYCLES(12,0x8001CB40);
ZZ_1C6C8_478:
	V1 = (int32_t)V0 < -254;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x8001CB50);
		goto ZZ_1C6C8_488;
	}
	V0 = S1;
	ZZ_CLOCKCYCLES(4,0x8001CB50);
ZZ_1C6C8_488:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S7 = EMU_ReadU32(SP + 52); //+ 0x34
	S6 = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80011EC4,ZZ_11DD0_F4);
	ZZ_JUMPREGISTER(0x80011EE8,ZZ_11DD0_118);
	ZZ_JUMPREGISTER(0x80011F0C,ZZ_11DD0_13C);
	ZZ_JUMPREGISTER(0x800263AC,ZZ_262DC_D0);
	ZZ_JUMPREGISTER(0x80026344,ZZ_262DC_68);
	
	ZZ_JUMPREGISTER(0x8002EA00,ZZ_2E98C_74);
	ZZ_JUMPREGISTER(0x800268C4,ZZ_26650_274);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001C6C8,0x8001C72C,ZZ_1C6C8);
ZZ_MARK_TARGET(0x8001C72C,0x8001C750,ZZ_1C6C8_64);
ZZ_MARK_TARGET(0x8001C750,0x8001C758,ZZ_1C6C8_88);
ZZ_MARK_TARGET(0x8001C758,0x8001C784,ZZ_1C6C8_90);
ZZ_MARK_TARGET(0x8001C784,0x8001C7A0,ZZ_1C6C8_BC);
ZZ_MARK_TARGET(0x8001C7A0,0x8001C7C0,ZZ_1C6C8_D8);
ZZ_MARK_TARGET(0x8001C7C0,0x8001C7D0,ZZ_1C6C8_F8);
ZZ_MARK_TARGET(0x8001C7D0,0x8001C7E0,ZZ_1C6C8_108);
ZZ_MARK_TARGET(0x8001C7E0,0x8001C7F4,ZZ_1C6C8_118);
ZZ_MARK_TARGET(0x8001C7F4,0x8001C7FC,ZZ_1C6C8_12C);
ZZ_MARK_TARGET(0x8001C7FC,0x8001C80C,ZZ_1C6C8_134);
ZZ_MARK_TARGET(0x8001C80C,0x8001C81C,ZZ_1C6C8_144);
ZZ_MARK_TARGET(0x8001C81C,0x8001C824,ZZ_1C6C8_154);
ZZ_MARK_TARGET(0x8001C824,0x8001C82C,ZZ_1C6C8_15C);
ZZ_MARK_TARGET(0x8001C82C,0x8001C858,ZZ_1C6C8_164);
ZZ_MARK_TARGET(0x8001C858,0x8001C85C,ZZ_1C6C8_190);
ZZ_MARK_TARGET(0x8001C85C,0x8001C87C,ZZ_1C6C8_194);
ZZ_MARK_TARGET(0x8001C87C,0x8001C888,ZZ_1C6C8_1B4);
ZZ_MARK_TARGET(0x8001C888,0x8001C894,ZZ_1C6C8_1C0);
ZZ_MARK_TARGET(0x8001C894,0x8001C8BC,ZZ_1C6C8_1CC);
ZZ_MARK_TARGET(0x8001C8BC,0x8001C8DC,ZZ_1C6C8_1F4);
ZZ_MARK_TARGET(0x8001C8DC,0x8001C8E8,ZZ_1C6C8_214);
ZZ_MARK_TARGET(0x8001C8E8,0x8001C8FC,ZZ_1C6C8_220);
ZZ_MARK_TARGET(0x8001C8FC,0x8001C904,ZZ_1C6C8_234);
ZZ_MARK_TARGET(0x8001C904,0x8001C920,ZZ_1C6C8_23C);
ZZ_MARK_TARGET(0x8001C920,0x8001C94C,ZZ_1C6C8_258);
ZZ_MARK_TARGET(0x8001C94C,0x8001C9A0,ZZ_1C6C8_284);
ZZ_MARK_TARGET(0x8001C9A0,0x8001C9D4,ZZ_1C6C8_2D8);
ZZ_MARK_TARGET(0x8001C9D4,0x8001CA0C,ZZ_1C6C8_30C);
ZZ_MARK_TARGET(0x8001CA0C,0x8001CA60,ZZ_1C6C8_344);
ZZ_MARK_TARGET(0x8001CA60,0x8001CA94,ZZ_1C6C8_398);
ZZ_MARK_TARGET(0x8001CA94,0x8001CABC,ZZ_1C6C8_3CC);
ZZ_MARK_TARGET(0x8001CABC,0x8001CB10,ZZ_1C6C8_3F4);
ZZ_MARK_TARGET(0x8001CB10,0x8001CB40,ZZ_1C6C8_448);
ZZ_MARK_TARGET(0x8001CB40,0x8001CB50,ZZ_1C6C8_478);
ZZ_MARK_TARGET(0x8001CB50,0x8001CB80,ZZ_1C6C8_488);
