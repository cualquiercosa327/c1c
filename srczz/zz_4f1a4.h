#ifdef ZZ_INCLUDE_CODE
ZZ_4F1A4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12324); //+ 0xFFFFCFDC
	V1 = EMU_ReadU8(V0 + 24); //+ 0x18
	A0 = 0x80060000;
	A0 = EMU_ReadU8(A0 - 6820); //+ 0xFFFFE55C
	V0 = V1 << 14;
	V0 = V0 - V1;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	V1 = 0x3F01;
	EMU_SDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(15,0x8004F1E4);
		goto ZZ_4F1A4_40;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(16,0x8004F1E4);
ZZ_4F1A4_40:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004F1FC);
		goto ZZ_4F1A4_58;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004F1FC);
		goto ZZ_4F1A4_58;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004F1FC);
ZZ_4F1A4_58:
	A3 = LO;
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 6814); //+ 0xFFFFE562
	EMU_SMultiply(A3,V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 6811); //+ 0xFFFFE565
	A0 = LO;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(17,0x8004F244);
		goto ZZ_4F1A4_A0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(18,0x8004F244);
ZZ_4F1A4_A0:
	A2 = LO;
	A0 = 0x80060000;
	A0 = EMU_ReadU16(A0 - 6802); //+ 0xFFFFE56E
	SP -= 16;
	T0 = A1;
	A1 = A0 << 16;
	A0 &= 0xFF;
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 - 6798); //+ 0xFFFFE572
	A0 <<= 2;
	V1 = A1 >> 24;
	T1 = V0 << 3;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 = V0 - V1;
	AT = 0x80060000;
	AT += A0;
	V1 = EMU_ReadU32(AT + 1048); //+ 0x418
	A1 = (int32_t)A1 >> 16;
	V0 <<= 2;
	A0 = V0 + V1;
	V0 = 0x21;
	if (A1 == V0)
	{
		A3 = A2;
		ZZ_CLOCKCYCLES(27,0x8004F308);
		goto ZZ_4F1A4_164;
	}
	A3 = A2;
	V0 = EMU_ReadU16(A0 + 116); //+ 0x74
	EMU_SMultiply(A2,V0);
	V0 = LO;
	V1 = 0x7F;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(36,0x8004F2D8);
		goto ZZ_4F1A4_134;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(37,0x8004F2D8);
ZZ_4F1A4_134:
	A3 = LO;
	V0 = EMU_ReadU16(A0 + 118); //+ 0x76
	EMU_SMultiply(A2,V0);
	V0 = LO;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(10,0x8004F304);
		goto ZZ_4F1A4_160;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8004F304);
ZZ_4F1A4_160:
	A2 = LO;
	ZZ_CLOCKCYCLES(1,0x8004F308);
ZZ_4F1A4_164:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 6810); //+ 0xFFFFE566
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(6,0x8004F348);
		goto ZZ_4F1A4_1A4;
	}
	EMU_SMultiply(A2,V1);
	V0 = LO;
	V1 = 0x3F;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(12,0x8004F33C);
		goto ZZ_4F1A4_198;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8004F33C);
ZZ_4F1A4_198:
	A2 = LO;
	A1 = A3;
	ZZ_CLOCKCYCLES(3,0x8004F374);
	goto ZZ_4F1A4_1D0;
ZZ_4F1A4_1A4:
	V0 = 0x7F;
	V0 = V0 - V1;
	EMU_SMultiply(A3,V0);
	V1 = LO;
	V0 = 0x3F;
	EMU_UDivide(V1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x8004F370);
		goto ZZ_4F1A4_1CC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x8004F370);
ZZ_4F1A4_1CC:
	A1 = LO;
	ZZ_CLOCKCYCLES(1,0x8004F374);
ZZ_4F1A4_1D0:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 6813); //+ 0xFFFFE563
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(6,0x8004F3B4);
		goto ZZ_4F1A4_210;
	}
	EMU_SMultiply(A2,V1);
	V0 = LO;
	V1 = 0x3F;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(12,0x8004F3A8);
		goto ZZ_4F1A4_204;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8004F3A8);
ZZ_4F1A4_204:
	A2 = LO;
	ZZ_CLOCKCYCLES(3,0x8004F3E0);
	goto ZZ_4F1A4_23C;
ZZ_4F1A4_210:
	V0 = 0x7F;
	V0 = V0 - V1;
	EMU_SMultiply(A1,V0);
	V1 = LO;
	V0 = 0x3F;
	EMU_UDivide(V1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x8004F3DC);
		goto ZZ_4F1A4_238;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x8004F3DC);
ZZ_4F1A4_238:
	A1 = LO;
	ZZ_CLOCKCYCLES(1,0x8004F3E0);
ZZ_4F1A4_23C:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 6819); //+ 0xFFFFE55D
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(6,0x8004F420);
		goto ZZ_4F1A4_27C;
	}
	EMU_SMultiply(A2,V1);
	V0 = LO;
	V1 = 0x3F;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(12,0x8004F414);
		goto ZZ_4F1A4_270;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8004F414);
ZZ_4F1A4_270:
	A2 = LO;
	ZZ_CLOCKCYCLES(3,0x8004F44C);
	goto ZZ_4F1A4_2A8;
ZZ_4F1A4_27C:
	V0 = 0x7F;
	V0 = V0 - V1;
	EMU_SMultiply(A1,V0);
	V1 = LO;
	V0 = 0x3F;
	EMU_UDivide(V1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x8004F448);
		goto ZZ_4F1A4_2A4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x8004F448);
ZZ_4F1A4_2A4:
	A1 = LO;
	ZZ_CLOCKCYCLES(1,0x8004F44C);
ZZ_4F1A4_2A8:
	V1 = 0x80060000;
	V1 = EMU_ReadS16(V1 - 31752); //+ 0xFFFF83F8
	V0 = 0x1;
	if (V1 != V0)
	{
		EMU_SMultiply(A1,A1);
		ZZ_CLOCKCYCLES(5,0x8004F47C);
		goto ZZ_4F1A4_2D8;
	}
	EMU_SMultiply(A1,A1);
	V0 = A1 < A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004F474);
		goto ZZ_4F1A4_2D0;
	}
	A1 = A2;
	ZZ_CLOCKCYCLES(10,0x8004F478);
	goto ZZ_4F1A4_2D4;
ZZ_4F1A4_2D0:
	A2 = A1;
	ZZ_CLOCKCYCLES(1,0x8004F478);
ZZ_4F1A4_2D4:
	EMU_SMultiply(A1,A1);
	ZZ_CLOCKCYCLES(1,0x8004F47C);
ZZ_4F1A4_2D8:
	V0 = LO;
	V1 = 0x3FFF;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x8004F498);
		goto ZZ_4F1A4_2F4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x8004F498);
ZZ_4F1A4_2F4:
	A1 = LO;
	EMU_SMultiply(A2,A2);
	V0 = LO;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(10,0x8004F4C4);
		goto ZZ_4F1A4_320;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8004F4C4);
ZZ_4F1A4_320:
	A2 = LO;
	A0 = 0x80060000;
	A0 -= 6772;
	V1 = T1 & 0xFFFF;
	V1 <<= 1;
	AT = 0x80060000;
	AT += V1;
	EMU_Write16(AT - 6772,T0); //+ 0xFFFFE58C
	V0 = A0 - 4;
	V0 += V1;
	A0 -= 2;
	V1 += A0;
	A0 = 0x80060000;
	A0 -= 6798;
	EMU_Write16(V0,A1);
	EMU_Write16(V1,A2);
	V1 = EMU_ReadS16(A0);
	AT = 0x80050000;
	AT += V1;
	V0 = EMU_ReadU8(AT + 30628); //+ 0x77A4
	V0 |= 0x7;
	AT = 0x80050000;
	AT += V1;
	EMU_Write8(AT + 30628,V0); //+ 0x77A4
	V1 = EMU_ReadS16(A0);
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29360,T0); //+ 0x72B0
	V1 = EMU_ReadS16(A0);
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	V1 = 0x1;
	AT = 0x80050000;
	AT += V0;
	EMU_Write8(AT + 29383,V1); //+ 0x72C7
	V1 = EMU_ReadS16(A0);
	V0 = (int32_t)V1 < 16;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(52,0x8004F5A0);
		goto ZZ_4F1A4_3FC;
	}
	V0 = 0x1;
	A3 = V0 << V1;
	A2 = R0;
	ZZ_CLOCKCYCLES(55,0x8004F5AC);
	goto ZZ_4F1A4_408;
ZZ_4F1A4_3FC:
	A3 = R0;
	V1 -= 16;
	A2 = V0 << V1;
	ZZ_CLOCKCYCLES(3,0x8004F5AC);
ZZ_4F1A4_408:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 6804); //+ 0xFFFFE56C
	V0 &= 0x4;
	if (!V0)
	{
		V1 = ~A3;
		ZZ_CLOCKCYCLES(6,0x8004F5F4);
		goto ZZ_4F1A4_450;
	}
	V1 = ~A3;
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 29276); //+ 0x725C
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 29284); //+ 0x7264
	V0 |= A3;
	AT = 0x80050000;
	EMU_Write16(AT + 29276,V0); //+ 0x725C
	V1 |= A2;
	AT = 0x80050000;
	EMU_Write16(AT + 29284,V1); //+ 0x7264
	ZZ_CLOCKCYCLES(18,0x8004F620);
	goto ZZ_4F1A4_47C;
ZZ_4F1A4_450:
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 29276); //+ 0x725C
	A0 = 0x80050000;
	A0 = EMU_ReadU16(A0 + 29284); //+ 0x7264
	V0 &= V1;
	AT = 0x80050000;
	EMU_Write16(AT + 29276,V0); //+ 0x725C
	V0 = ~A2;
	A0 &= V0;
	AT = 0x80050000;
	EMU_Write16(AT + 29284,A0); //+ 0x7264
	ZZ_CLOCKCYCLES(11,0x8004F620);
ZZ_4F1A4_47C:
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 29260); //+ 0x724C
	A1 = 0x80050000;
	A1 = EMU_ReadU16(A1 + 29268); //+ 0x7254
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 6760); //+ 0x1A68
	A0 = 0x80060000;
	A0 = EMU_ReadU16(A0 + 6768); //+ 0x1A70
	V1 |= A3;
	AT = 0x80050000;
	EMU_Write16(AT + 29260,V1); //+ 0x724C
	A1 |= A2;
	AT = 0x80050000;
	EMU_Write16(AT + 29268,A1); //+ 0x7254
	V1 = ~V1;
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write16(AT + 6760,V0); //+ 0x1A68
	A1 = ~A1;
	A0 &= A1;
	AT = 0x80060000;
	EMU_Write16(AT + 6768,A0); //+ 0x1A70
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 16;
	ZZ_CLOCKCYCLES_JR(24);
	ZZ_JUMPREGISTER(0x8004E2C8,ZZ_4DDE4_4E4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004F1A4,0x8004F1E4,ZZ_4F1A4);
ZZ_MARK_TARGET(0x8004F1E4,0x8004F1FC,ZZ_4F1A4_40);
ZZ_MARK_TARGET(0x8004F1FC,0x8004F244,ZZ_4F1A4_58);
ZZ_MARK_TARGET(0x8004F244,0x8004F2D8,ZZ_4F1A4_A0);
ZZ_MARK_TARGET(0x8004F2D8,0x8004F304,ZZ_4F1A4_134);
ZZ_MARK_TARGET(0x8004F304,0x8004F308,ZZ_4F1A4_160);
ZZ_MARK_TARGET(0x8004F308,0x8004F33C,ZZ_4F1A4_164);
ZZ_MARK_TARGET(0x8004F33C,0x8004F348,ZZ_4F1A4_198);
ZZ_MARK_TARGET(0x8004F348,0x8004F370,ZZ_4F1A4_1A4);
ZZ_MARK_TARGET(0x8004F370,0x8004F374,ZZ_4F1A4_1CC);
ZZ_MARK_TARGET(0x8004F374,0x8004F3A8,ZZ_4F1A4_1D0);
ZZ_MARK_TARGET(0x8004F3A8,0x8004F3B4,ZZ_4F1A4_204);
ZZ_MARK_TARGET(0x8004F3B4,0x8004F3DC,ZZ_4F1A4_210);
ZZ_MARK_TARGET(0x8004F3DC,0x8004F3E0,ZZ_4F1A4_238);
ZZ_MARK_TARGET(0x8004F3E0,0x8004F414,ZZ_4F1A4_23C);
ZZ_MARK_TARGET(0x8004F414,0x8004F420,ZZ_4F1A4_270);
ZZ_MARK_TARGET(0x8004F420,0x8004F448,ZZ_4F1A4_27C);
ZZ_MARK_TARGET(0x8004F448,0x8004F44C,ZZ_4F1A4_2A4);
ZZ_MARK_TARGET(0x8004F44C,0x8004F474,ZZ_4F1A4_2A8);
ZZ_MARK_TARGET(0x8004F474,0x8004F478,ZZ_4F1A4_2D0);
ZZ_MARK_TARGET(0x8004F478,0x8004F47C,ZZ_4F1A4_2D4);
ZZ_MARK_TARGET(0x8004F47C,0x8004F498,ZZ_4F1A4_2D8);
ZZ_MARK_TARGET(0x8004F498,0x8004F4C4,ZZ_4F1A4_2F4);
ZZ_MARK_TARGET(0x8004F4C4,0x8004F5A0,ZZ_4F1A4_320);
ZZ_MARK_TARGET(0x8004F5A0,0x8004F5AC,ZZ_4F1A4_3FC);
ZZ_MARK_TARGET(0x8004F5AC,0x8004F5F4,ZZ_4F1A4_408);
ZZ_MARK_TARGET(0x8004F5F4,0x8004F620,ZZ_4F1A4_450);
ZZ_MARK_TARGET(0x8004F620,0x8004F680,ZZ_4F1A4_47C);
