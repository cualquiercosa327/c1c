#ifdef ZZ_INCLUDE_CODE
ZZ_508E8:
	SP -= 32;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22844); //+ 0x593C
	A2 = R0;
	if ((int32_t)V1 <= 0)
	{
		EMU_Write32(SP + 24,RA); //+ 0x18
		ZZ_CLOCKCYCLES(6,0x8005094C);
		goto ZZ_508E8_64;
	}
	EMU_Write32(SP + 24,RA); //+ 0x18
	T1 = 0x40000000;
	V0 = 0x80000000;
	T0 = A0 | V0;
	A3 = V1;
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 22852); //+ 0x5944
	ZZ_CLOCKCYCLES(12,0x80050918);
ZZ_508E8_30:
	V1 = EMU_ReadU32(A1);
	V0 = V1 & T1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x8005094C);
		goto ZZ_508E8_64;
	}
	if (V1 != A0)
	{
		A2 += 1;
		ZZ_CLOCKCYCLES(8,0x80050940);
		goto ZZ_508E8_58;
	}
	A2 += 1;
	EMU_Write32(A1,T0);
	ZZ_CLOCKCYCLES(10,0x8005094C);
	goto ZZ_508E8_64;
ZZ_508E8_58:
	V0 = (int32_t)A2 < (int32_t)A3;
	if (V0)
	{
		A1 += 8;
		ZZ_CLOCKCYCLES(3,0x80050918);
		goto ZZ_508E8_30;
	}
	A1 += 8;
	ZZ_CLOCKCYCLES(3,0x8005094C);
ZZ_508E8_64:
	RA = 0x80050954; //ZZ_508E8_6C
	ZZ_CLOCKCYCLES(2,0x80050964);
	goto ZZ_50964;
ZZ_508E8_6C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x800508B4,ZZ_50868_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800508E8,0x80050918,ZZ_508E8);
ZZ_MARK_TARGET(0x80050918,0x80050940,ZZ_508E8_30);
ZZ_MARK_TARGET(0x80050940,0x8005094C,ZZ_508E8_58);
ZZ_MARK_TARGET(0x8005094C,0x80050954,ZZ_508E8_64);
ZZ_MARK_TARGET(0x80050954,0x80050964,ZZ_508E8_6C);
