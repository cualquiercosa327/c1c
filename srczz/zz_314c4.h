#ifdef ZZ_INCLUDE_CODE
ZZ_314C4:
	V0 = EMU_ReadS16(GP + 604); //+ 0x25C
	V1 = EMU_ReadU32(GP + 624); //+ 0x270
	SP -= 64;
	EMU_Write32(SP + 44,S3); //+ 0x2C
	S3 = A0;
	EMU_Write32(SP + 60,RA); //+ 0x3C
	EMU_Write32(SP + 56,S6); //+ 0x38
	EMU_Write32(SP + 52,S5); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 40,S2); //+ 0x28
	EMU_Write32(SP + 36,S1); //+ 0x24
	EMU_Write32(SP + 32,S0); //+ 0x20
	V0 = ~V0;
	if (!V1)
	{
		S6 = V0 < 1;
		ZZ_CLOCKCYCLES(15,0x80031508);
		goto ZZ_314C4_44;
	}
	S6 = V0 < 1;
	V0 = -1;
	ZZ_CLOCKCYCLES(17,0x800317B0);
	goto ZZ_314C4_2EC;
ZZ_314C4_44:
	V1 = EMU_ReadU32(GP + 708); //+ 0x2C4
	V0 = 0x1;
	if (V1 != V0)
	{
		A0 = S3;
		ZZ_CLOCKCYCLES(4,0x800315D0);
		goto ZZ_314C4_10C;
	}
	A0 = S3;
	S0 = 0x63960000;
	V0 = EMU_ReadU32(GP + 596); //+ 0x254
	S0 |= 0x347F;
	if (V0 == S0)
	{
		ZZ_CLOCKCYCLES(9,0x8003154C);
		goto ZZ_314C4_88;
	}
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	RA = 0x80031538; //ZZ_314C4_74
	ZZ_CLOCKCYCLES(12,0x80049404);
	goto ZZ_49404;
ZZ_314C4_74:
	A0 = SP + 16;
	V0 = EMU_ReadU32(GP + 596); //+ 0x254
	A1 = 0x1;
	RA = 0x8003154C; //ZZ_314C4_88
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(5,0x80015458);
	goto ZZ_15458;
ZZ_314C4_88:
	V0 = EMU_ReadU32(S3);
	if (V0 == S0)
	{
		A0 = S3;
		ZZ_CLOCKCYCLES(4,0x800315C4);
		goto ZZ_314C4_100;
	}
	A0 = S3;
	A1 = 0x1;
	RA = 0x80031568; //ZZ_314C4_A4
	A2 = 0x1;
	ZZ_CLOCKCYCLES(7,0x80015118);
	goto ZZ_15118;
ZZ_314C4_A4:
	S2 = V0;
	S0 = R0;
	S4 = 0x63960000;
	S4 |= 0x347F;
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	S1 = 0x8;
	EMU_Write32(GP + 596,V0); //+ 0x254
	ZZ_CLOCKCYCLES(7,0x80031584);
ZZ_314C4_C0:
	V1 = EMU_ReadU32(S2 + 16); //+ 0x10
	V0 = S0 << 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	if (V0 == S4)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(7,0x800315B0);
		goto ZZ_314C4_EC;
	}
	S0 += 1;
	A0 = S1 + V1;
	A1 = R0;
	RA = 0x800315B0; //ZZ_314C4_EC
	A2 = 0x1;
	ZZ_CLOCKCYCLES(11,0x80015118);
	goto ZZ_15118;
ZZ_314C4_EC:
	V0 = (int32_t)S0 < 7;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(3,0x80031584);
		goto ZZ_314C4_C0;
	}
	S1 += 4;
	A0 = S3;
	ZZ_CLOCKCYCLES(5,0x800315D0);
	goto ZZ_314C4_10C;
ZZ_314C4_100:
	EMU_Write32(GP + 596,V0); //+ 0x254
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x800317B0);
	goto ZZ_314C4_2EC;
ZZ_314C4_10C:
	A1 = 0x1;
	V0 = 0x2;
	EMU_Write32(GP + 708,V0); //+ 0x2C4
	RA = 0x800315E4; //ZZ_314C4_120
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x80015118);
	goto ZZ_15118;
ZZ_314C4_120:
	S2 = V0;
	S0 = R0;
	S3 = 0x63960000;
	S3 |= 0x347F;
	S1 = 0x8;
	EMU_Write32(GP + 256,R0); //+ 0x100
	ZZ_CLOCKCYCLES(6,0x800315FC);
ZZ_314C4_138:
	V1 = EMU_ReadU32(S2 + 16); //+ 0x10
	V0 = S0 << 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	if (V0 == S3)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(7,0x8003162C);
		goto ZZ_314C4_168;
	}
	S0 += 1;
	A0 = S1 + V1;
	RA = 0x80031624; //ZZ_314C4_160
	A1 = R0;
	ZZ_CLOCKCYCLES(10,0x80015458);
	goto ZZ_15458;
ZZ_314C4_160:
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x800317B0);
		goto ZZ_314C4_2EC;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003162C);
ZZ_314C4_168:
	V0 = (int32_t)S0 < 7;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(3,0x800315FC);
		goto ZZ_314C4_138;
	}
	S1 += 4;
	V0 = EMU_ReadU32(S2 + 16); //+ 0x10
	S0 = EMU_ReadS16(GP + 604); //+ 0x25C
	V1 = EMU_ReadU16(V0);
	V0 = 0x3;
	EMU_Write32(GP + 708,V0); //+ 0x2C4
	V0 = -1;
	EMU_Write16(GP + 608,V1); //+ 0x260
	if (S0 != V0)
	{
		A1 = 0x1;
		ZZ_CLOCKCYCLES(12,0x800316D0);
		goto ZZ_314C4_20C;
	}
	A1 = 0x1;
	A0 = EMU_ReadU32(S2 + 16); //+ 0x10
	A2 = 0x1;
	RA = 0x8003166C; //ZZ_314C4_1A8
	A0 += 4;
	ZZ_CLOCKCYCLES(16,0x80015118);
	goto ZZ_15118;
ZZ_314C4_1A8:
	A1 = -1;
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 12368); //+ 0xFFFFCFB0
	A0 = EMU_ReadU32(S2 + 20); //+ 0x14
	A2 <<= 16;
	RA = 0x80031688; //ZZ_314C4_1C4
	A2 |= 0x2000;
	ZZ_CLOCKCYCLES(7,0x80050D30);
	goto ZZ_50D30;
ZZ_314C4_1C4:
	EMU_Write16(GP + 604,V0); //+ 0x25C
	V0 <<= 16;
	A0 = (int32_t)V0 >> 16;
	if (A0 != S0)
	{
		ZZ_CLOCKCYCLES(5,0x800316A4);
		goto ZZ_314C4_1E0;
	}
	RA = 0x800316A4; //ZZ_314C4_1E0
	A0 = -1;
	ZZ_CLOCKCYCLES(7,0x8003D680);
	goto ZZ_3D680;
ZZ_314C4_1E0:
	RA = 0x800316AC; //ZZ_314C4_1E8
	ZZ_CLOCKCYCLES(2,0x80050C64);
	goto ZZ_50C64;
ZZ_314C4_1E8:
	EMU_Write16(GP + 604,V0); //+ 0x25C
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	if (V0 != S0)
	{
		ZZ_CLOCKCYCLES(5,0x800316C8);
		goto ZZ_314C4_204;
	}
	RA = 0x800316C8; //ZZ_314C4_204
	A0 = -1;
	ZZ_CLOCKCYCLES(7,0x8003D680);
	goto ZZ_3D680;
ZZ_314C4_204:
	RA = 0x800316D0; //ZZ_314C4_20C
	ZZ_CLOCKCYCLES(2,0x8004BB3C);
	goto ZZ_4BB3C;
ZZ_314C4_20C:
	A0 = EMU_ReadU32(S2 + 24); //+ 0x18
	A1 = EMU_ReadS16(GP + 604); //+ 0x25C
	A2 = EMU_ReadS16(GP + 608); //+ 0x260
	RA = 0x800316E4; //ZZ_314C4_220
	ZZ_CLOCKCYCLES(5,0x80049844);
	goto ZZ_49844;
ZZ_314C4_220:
	EMU_Write16(GP + 600,V0); //+ 0x258
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V1 = -1;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(6,0x80031704);
		goto ZZ_314C4_240;
	}
	RA = 0x80031704; //ZZ_314C4_240
	A0 = -1;
	ZZ_CLOCKCYCLES(8,0x8003D680);
	goto ZZ_3D680;
ZZ_314C4_240:
	V0 = EMU_ReadS16(GP + 608); //+ 0x260
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(4,0x8003179C);
		goto ZZ_314C4_2D8;
	}
	S0 = R0;
	S1 = 0x80050000;
	S1 += 28348;
	S2 = R0;
	ZZ_CLOCKCYCLES(7,0x80031720);
ZZ_314C4_25C:
	if (!S6)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x80031750);
		goto ZZ_314C4_28C;
	}
	A0 = S1;
	A2 = S0;
	A1 = EMU_ReadU16(GP + 588); //+ 0x24C
	A3 = S5;
	A1 <<= 16;
	A1 = (int32_t)A1 >> 23;
	V0 = A1 << 16;
	RA = 0x80031748; //ZZ_314C4_284
	A1 |= V0;
	ZZ_CLOCKCYCLES(10,0x80031964);
	goto ZZ_31964;
ZZ_314C4_284:
	S1 += 20;
	ZZ_CLOCKCYCLES(2,0x80031788);
	goto ZZ_314C4_2C4;
ZZ_314C4_28C:
	A1 = R0;
	A2 = S0;
	RA = 0x80031760; //ZZ_314C4_29C
	A3 = S5;
	ZZ_CLOCKCYCLES(4,0x80031964);
	goto ZZ_31964;
ZZ_314C4_29C:
	A3 = 0x1E;
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A2 = EMU_ReadU16(GP + 588); //+ 0x24C
	AT = 0x80050000;
	AT += S2;
	A1 = EMU_ReadS16(AT + 28348); //+ 0x6EBC
	A2 <<= 16;
	RA = 0x80031784; //ZZ_314C4_2C0
	A2 = (int32_t)A2 >> 23;
	ZZ_CLOCKCYCLES(9,0x80049504);
	goto ZZ_49504;
ZZ_314C4_2C0:
	S1 += 20;
	ZZ_CLOCKCYCLES(1,0x80031788);
ZZ_314C4_2C4:
	V0 = EMU_ReadS16(GP + 608); //+ 0x260
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S2 += 20;
		ZZ_CLOCKCYCLES(5,0x80031720);
		goto ZZ_314C4_25C;
	}
	S2 += 20;
	ZZ_CLOCKCYCLES(5,0x8003179C);
ZZ_314C4_2D8:
	A0 = 0x80050000;
	A0 += 28348;
	A1 = R0;
	RA = 0x800317B0; //ZZ_314C4_2EC
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x80031A40);
	goto ZZ_31A40;
ZZ_314C4_2EC:
	RA = EMU_ReadU32(SP + 60); //+ 0x3C
	S6 = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80031924,ZZ_317F8_12C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800314C4,0x80031508,ZZ_314C4);
ZZ_MARK_TARGET(0x80031508,0x80031538,ZZ_314C4_44);
ZZ_MARK_TARGET(0x80031538,0x8003154C,ZZ_314C4_74);
ZZ_MARK_TARGET(0x8003154C,0x80031568,ZZ_314C4_88);
ZZ_MARK_TARGET(0x80031568,0x80031584,ZZ_314C4_A4);
ZZ_MARK_TARGET(0x80031584,0x800315B0,ZZ_314C4_C0);
ZZ_MARK_TARGET(0x800315B0,0x800315C4,ZZ_314C4_EC);
ZZ_MARK_TARGET(0x800315C4,0x800315D0,ZZ_314C4_100);
ZZ_MARK_TARGET(0x800315D0,0x800315E4,ZZ_314C4_10C);
ZZ_MARK_TARGET(0x800315E4,0x800315FC,ZZ_314C4_120);
ZZ_MARK_TARGET(0x800315FC,0x80031624,ZZ_314C4_138);
ZZ_MARK_TARGET(0x80031624,0x8003162C,ZZ_314C4_160);
ZZ_MARK_TARGET(0x8003162C,0x8003166C,ZZ_314C4_168);
ZZ_MARK_TARGET(0x8003166C,0x80031688,ZZ_314C4_1A8);
ZZ_MARK_TARGET(0x80031688,0x800316A4,ZZ_314C4_1C4);
ZZ_MARK_TARGET(0x800316A4,0x800316AC,ZZ_314C4_1E0);
ZZ_MARK_TARGET(0x800316AC,0x800316C8,ZZ_314C4_1E8);
ZZ_MARK_TARGET(0x800316C8,0x800316D0,ZZ_314C4_204);
ZZ_MARK_TARGET(0x800316D0,0x800316E4,ZZ_314C4_20C);
ZZ_MARK_TARGET(0x800316E4,0x80031704,ZZ_314C4_220);
ZZ_MARK_TARGET(0x80031704,0x80031720,ZZ_314C4_240);
ZZ_MARK_TARGET(0x80031720,0x80031748,ZZ_314C4_25C);
ZZ_MARK_TARGET(0x80031748,0x80031750,ZZ_314C4_284);
ZZ_MARK_TARGET(0x80031750,0x80031760,ZZ_314C4_28C);
ZZ_MARK_TARGET(0x80031760,0x80031784,ZZ_314C4_29C);
ZZ_MARK_TARGET(0x80031784,0x80031788,ZZ_314C4_2C0);
ZZ_MARK_TARGET(0x80031788,0x8003179C,ZZ_314C4_2C4);
ZZ_MARK_TARGET(0x8003179C,0x800317B0,ZZ_314C4_2D8);
ZZ_MARK_TARGET(0x800317B0,0x800317DC,ZZ_314C4_2EC);
