#ifdef ZZ_INCLUDE_CODE
ZZ_172E8:
	SP -= 24;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31736); //+ 0xFFFF8408
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31732); //+ 0xFFFF840C
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0x80060000;
	S0 -= 31740;
	EMU_Write32(SP + 20,RA); //+ 0x14
	EMU_Write32(S0,V1);
	AT = 0x80060000;
	EMU_Write32(AT - 31736,V0); //+ 0xFFFF8408
	AT = 0x80060000;
	EMU_Write32(AT - 31732,V1); //+ 0xFFFF840C
	RA = 0x80017328; //ZZ_172E8_40
	A0 = R0;
	ZZ_CLOCKCYCLES(16,0x8003E4F0);
	goto ZZ_3E4F0;
ZZ_172E8_40:
	A0 = EMU_ReadU32(S0);
	RA = 0x80017334; //ZZ_172E8_4C
	A0 += 4;
	ZZ_CLOCKCYCLES(3,0x80040A0C);
	goto ZZ_40A0C;
ZZ_172E8_4C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31736); //+ 0xFFFF8408
	RA = 0x80017344; //ZZ_172E8_5C
	A0 += 24;
	ZZ_CLOCKCYCLES(4,0x80040834);
	goto ZZ_40834;
ZZ_172E8_5C:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80032480,ZZ_322CC_1B4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800172E8,0x80017328,ZZ_172E8);
ZZ_MARK_TARGET(0x80017328,0x80017334,ZZ_172E8_40);
ZZ_MARK_TARGET(0x80017334,0x80017344,ZZ_172E8_4C);
ZZ_MARK_TARGET(0x80017344,0x80017358,ZZ_172E8_5C);
