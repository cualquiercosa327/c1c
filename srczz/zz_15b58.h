#ifdef ZZ_INCLUDE_CODE
ZZ_15B58:
	SP -= 336;
	EMU_Write32(SP + 320,S2); //+ 0x140
	S2 = A0;
	EMU_Write32(SP + 332,RA); //+ 0x14C
	EMU_Write32(SP + 328,S4); //+ 0x148
	EMU_Write32(SP + 324,S3); //+ 0x144
	EMU_Write32(SP + 316,S1); //+ 0x13C
	EMU_Write32(SP + 312,S0); //+ 0x138
	V0 = EMU_ReadU32(S2);
	if (V0)
	{
		S3 = A1;
		ZZ_CLOCKCYCLES(12,0x800163F8);
		goto ZZ_15B58_8A0;
	}
	S3 = A1;
	A0 = R0;
	A1 = S3;
	A2 = R0;
	A3 = R0;
	V0 = -1;
	AT = 0x80050000;
	EMU_Write32(AT + 26388,V0); //+ 0x6714
	V0 = 0x1;
	AT = 0x80050000;
	EMU_Write32(AT + 26384,S3); //+ 0x6710
	EMU_Write32(S2,V0);
	EMU_Write32(S2 + 2692,R0); //+ 0xA84
	EMU_Write32(S2 + 2688,R0); //+ 0xA80
	EMU_Write32(S2 + 2700,R0); //+ 0xA8C
	EMU_Write32(S2 + 4,S3); //+ 0x4
	EMU_Write32(S2 + 2704,R0); //+ 0xA90
	RA = 0x80015BD0; //ZZ_15B58_78
	EMU_Write32(S2 + 2712,V0); //+ 0xA98
	ZZ_CLOCKCYCLES(30,0x800128A4);
	goto ZZ_128A4;
ZZ_15B58_78:
	A0 = SP + 16;
	RA = 0x80015BDC; //ZZ_15B58_84
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x8003D6D0);
	goto ZZ_3D6D0;
ZZ_15B58_84:
	V0 = EMU_ReadU32(GP + 20); //+ 0x14
	if (!V0)
	{
		S4 = 0x10000;
		ZZ_CLOCKCYCLES(4,0x80015CC0);
		goto ZZ_15B58_168;
	}
	S4 = 0x10000;
	V0 = S3 << 1;
	V0 += S3;
	V0 <<= 2;
	V1 = 0x80060000;
	V1 -= 8132;
	S1 = V0 + V1;
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	S4 |= 0xFFFF;
	V0 &= S4;
	A0 = V0 + 2047;
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(16,0x80015C20);
		goto ZZ_15B58_C8;
	}
	A0 = V0 + 4094;
	ZZ_CLOCKCYCLES(17,0x80015C20);
ZZ_15B58_C8:
	A0 = (int32_t)A0 >> 11;
	RA = 0x80015C2C; //ZZ_15B58_D4
	A0 <<= 11;
	ZZ_CLOCKCYCLES(3,0x80011A58);
	goto ZZ_11A58;
ZZ_15B58_D4:
	S0 = V0;
	if (S0)
	{
		V0 = 0x7F0000;
		ZZ_CLOCKCYCLES(3,0x80015C40);
		goto ZZ_15B58_E8;
	}
	V0 = 0x7F0000;
	V0 = -15;
	ZZ_CLOCKCYCLES(5,0x80015CB8);
	goto ZZ_15B58_160;
ZZ_15B58_E8:
	V0 |= 0xFFFF;
	A0 = EMU_ReadU32(S1);
	A1 = SP + 280;
	RA = 0x80015C54; //ZZ_15B58_FC
	A0 &= V0;
	ZZ_CLOCKCYCLES(5,0x80043A24);
	goto ZZ_43A24;
ZZ_15B58_FC:
	A0 = 0x2;
	A1 = SP + 280;
	RA = 0x80015C64; //ZZ_15B58_10C
	A2 = SP + 272;
	ZZ_CLOCKCYCLES(4,0x80043520);
	goto ZZ_43520;
ZZ_15B58_10C:
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V0 &= S4;
	A0 = V0 + 2047;
	if ((int32_t)A0 >= 0)
	{
		A1 = S0;
		ZZ_CLOCKCYCLES(6,0x80015C80);
		goto ZZ_15B58_128;
	}
	A1 = S0;
	A0 = V0 + 4094;
	ZZ_CLOCKCYCLES(7,0x80015C80);
ZZ_15B58_128:
	A0 >>= 11;
	RA = 0x80015C8C; //ZZ_15B58_134
	A2 = 0x80;
	ZZ_CLOCKCYCLES(3,0x800439A4);
	goto ZZ_439A4;
ZZ_15B58_134:
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(2,0x80015CA4);
		goto ZZ_15B58_14C;
	}
	A0 = R0;
	RA = 0x80015C9C; //ZZ_15B58_144
	A1 = R0;
	ZZ_CLOCKCYCLES(4,0x80043984);
	goto ZZ_43984;
ZZ_15B58_144:
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(2,0x80015CAC);
		goto ZZ_15B58_154;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80015CA4);
ZZ_15B58_14C:
	V0 = -16;
	ZZ_CLOCKCYCLES(2,0x80015CB8);
	goto ZZ_15B58_160;
ZZ_15B58_154:
	A1 = EMU_ReadU32(S1 + 4); //+ 0x4
	RA = 0x80015CB8; //ZZ_15B58_160
	A1 &= S4;
	ZZ_CLOCKCYCLES(3,0x80011CA0);
	goto ZZ_11CA0;
ZZ_15B58_160:
	EMU_Write32(S2 + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(2,0x80015CC4);
	goto ZZ_15B58_16C;
ZZ_15B58_168:
	EMU_Write32(S2 + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(1,0x80015CC4);
ZZ_15B58_16C:
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	V0 += 1032;
	EMU_Write32(S2 + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	EMU_Write32(S2 + 8,V1); //+ 0x8
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	V0 += 1312;
	EMU_Write32(S2 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(V1 + 1028); //+ 0x404
	A2 = EMU_ReadU32(S2 + 24); //+ 0x18
	V0 <<= 3;
	V0 += 1312;
	V0 += V1;
	EMU_Write32(S2 + 20,V0); //+ 0x14
	A1 = EMU_ReadU32(A2 + 1028); //+ 0x404
	A0 = S3;
	A1 <<= 3;
	A1 += 1840;
	RA = 0x80015D18; //ZZ_15B58_1C0
	A1 += A2;
	ZZ_CLOCKCYCLES(21,0x800322CC);
	goto ZZ_322CC;
ZZ_15B58_1C0:
	A0 = EMU_ReadU32(S2 + 24); //+ 0x18
	A1 = EMU_ReadU32(A0 + 1028); //+ 0x404
	S0 = R0;
	A1 <<= 3;
	RA = 0x80015D34; //ZZ_15B58_1DC
	A1 += 1840;
	ZZ_CLOCKCYCLES(7,0x80011CA0);
	goto ZZ_11CA0;
ZZ_15B58_1DC:
	EMU_Write32(S2 + 24,V0); //+ 0x18
	A0 = S0 << 2;
	ZZ_CLOCKCYCLES(2,0x80015D3C);
ZZ_15B58_1E4:
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	S0 += 1;
	A0 += V0;
	V0 = EMU_ReadU32(A0);
	V1 = EMU_ReadU32(S2 + 12); //+ 0xC
	V0 <<= 3;
	V0 += V1;
	EMU_Write32(A0,V0);
	V0 = (int32_t)S0 < 256;
	if (V0)
	{
		A0 = S0 << 2;
		ZZ_CLOCKCYCLES(11,0x80015D3C);
		goto ZZ_15B58_1E4;
	}
	A0 = S0 << 2;
	A0 = 0x1;
	A1 = S3;
	A2 = R0;
	RA = 0x80015D7C; //ZZ_15B58_224
	A3 = R0;
	ZZ_CLOCKCYCLES(16,0x800128A4);
	goto ZZ_128A4;
ZZ_15B58_224:
	A0 = SP + 16;
	RA = 0x80015D88; //ZZ_15B58_230
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x8003D6D0);
	goto ZZ_3D6D0;
ZZ_15B58_230:
	V0 = EMU_ReadU32(GP + 20); //+ 0x14
	if (!V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(4,0x80015DC4);
		goto ZZ_15B58_26C;
	}
	S0 = R0;
	V0 = 0xFF0000;
	V1 = S3 << 1;
	V1 += S3;
	V1 <<= 2;
	AT = 0x80060000;
	AT += V1;
	V1 = EMU_ReadU32(AT - 8124); //+ 0xFFFFE044
	V0 |= 0xFFFF;
	V1 &= V0;
	AT = 0x80060000;
	EMU_Write32(AT - 15032,V1); //+ 0xFFFFC548
	ZZ_CLOCKCYCLES(15,0x80015DC4);
ZZ_15B58_26C:
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	A0 = EMU_ReadU32(V0 + 1024); //+ 0x400
	RA = 0x80015DD8; //ZZ_15B58_280
	A0 <<= 2;
	ZZ_CLOCKCYCLES(5,0x80011A58);
	goto ZZ_11A58;
ZZ_15B58_280:
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	EMU_Write32(S2 + 2708,V0); //+ 0xA94
	V0 = EMU_ReadU32(V1 + 1024); //+ 0x400
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(6,0x80015E20);
		goto ZZ_15B58_2C8;
	}
	A0 = -18;
	ZZ_CLOCKCYCLES(7,0x80015DF4);
ZZ_15B58_29C:
	V1 = EMU_ReadU32(S2 + 2708); //+ 0xA94
	V0 = S0 << 2;
	V0 += V1;
	EMU_Write32(V0,A0);
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	V0 = EMU_ReadU32(V0 + 1024); //+ 0x400
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x80015DF4);
		goto ZZ_15B58_29C;
	}
	ZZ_CLOCKCYCLES(11,0x80015E20);
ZZ_15B58_2C8:
	S0 = R0;
	S1 = R0;
	ZZ_CLOCKCYCLES(2,0x80015E28);
ZZ_15B58_2D0:
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadU32(AT + 5348); //+ 0x14E4
	if (!V0)
	{
		S1 += 28;
		ZZ_CLOCKCYCLES(6,0x80015E48);
		goto ZZ_15B58_2F0;
	}
	S1 += 28;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80015E48; //ZZ_15B58_2F0
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80016C18,ZZ_16C18);
	ZZ_JUMPREGISTER(0x80029A58,ZZ_29A58);
	ZZ_JUMPREGISTER(0x8002D638,ZZ_2D638);
	ZZ_JUMPREGISTER(0x8002FDE0,ZZ_2FDE0);
	ZZ_JUMPREGISTER(0x80031244,ZZ_31244);
	ZZ_JUMPREGISTER(0x80031BAC,ZZ_31BAC);
	ZZ_JUMPREGISTER(0x8002E8A4,ZZ_2E8A4);
	ZZ_JUMPREGISTER_END();
ZZ_15B58_2F0:
	S0 += 1;
	V0 = (int32_t)S0 < 21;
	if (V0)
	{
		V0 = 0x16;
		ZZ_CLOCKCYCLES(4,0x80015E28);
		goto ZZ_15B58_2D0;
	}
	V0 = 0x16;
	EMU_Write32(S2 + 40,V0); //+ 0x28
	S0 = 0x16;
	ZZ_CLOCKCYCLES(6,0x80015E60);
ZZ_15B58_308:
	RA = 0x80015E68; //ZZ_15B58_310
	A0 = S0 << 16;
	ZZ_CLOCKCYCLES(2,0x80011A58);
	goto ZZ_11A58;
ZZ_15B58_310:
	if (V0)
	{
		EMU_Write32(S2 + 44,V0); //+ 0x2C
		ZZ_CLOCKCYCLES(2,0x80015E7C);
		goto ZZ_15B58_324;
	}
	EMU_Write32(S2 + 44,V0); //+ 0x2C
	S0 -= 1;
	if ((int32_t)S0 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x80015E60);
		goto ZZ_15B58_308;
	}
	ZZ_CLOCKCYCLES(5,0x80015E7C);
ZZ_15B58_324:
	EMU_Write32(S2 + 40,S0); //+ 0x28
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(5,0x80015ED0);
		goto ZZ_15B58_378;
	}
	S0 = R0;
	A1 = 0x1;
	A0 = S2;
	ZZ_CLOCKCYCLES(7,0x80015E98);
ZZ_15B58_340:
	EMU_Write16(A0 + 48,A1); //+ 0x30
	EMU_Write16(A0 + 50,A1); //+ 0x32
	V1 = EMU_ReadU32(S2 + 44); //+ 0x2C
	V0 = S0 << 16;
	EMU_Write16(A0 + 52,S0); //+ 0x34
	S0 += 1;
	EMU_Write16(A0 + 54,R0); //+ 0x36
	V0 += V1;
	EMU_Write32(A0 + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		A0 += 44;
		ZZ_CLOCKCYCLES(14,0x80015E98);
		goto ZZ_15B58_340;
	}
	A0 += 44;
	ZZ_CLOCKCYCLES(14,0x80015ED0);
ZZ_15B58_378:
	V0 = 0x26;
	EMU_Write32(S2 + 1012,V0); //+ 0x3F4
	S0 = R0;
	A0 = 0x1;
	V1 = S2;
	ZZ_CLOCKCYCLES(5,0x80015EE4);
ZZ_15B58_38C:
	EMU_Write16(V1 + 1020,A0); //+ 0x3FC
	EMU_Write16(V1 + 1022,R0); //+ 0x3FE
	EMU_Write32(V1 + 1016,R0); //+ 0x3F8
	EMU_Write16(V1 + 1026,R0); //+ 0x402
	V0 = EMU_ReadU32(S2 + 1012); //+ 0x3F4
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		V1 += 44;
		ZZ_CLOCKCYCLES(9,0x80015EE4);
		goto ZZ_15B58_38C;
	}
	V1 += 44;
	A0 = 0x80010000;
	A0 += 100;
	A1 = EMU_ReadU32(S2 + 40); //+ 0x28
	RA = 0x80015F1C; //ZZ_15B58_3C4
	S0 = R0;
	ZZ_CLOCKCYCLES(14,0x8003D730);
	goto ZZ_3D730;
ZZ_15B58_3C4:
	T2 = 0x80000000;
	T2 |= 0x2;
	V0 = 0x80060000;
	V0 -= 32608;
	T0 = V0 + 4;
	A3 = R0;
	T1 = V0;
	ZZ_CLOCKCYCLES(7,0x80015F38);
ZZ_15B58_3E0:
	V0 = 0x2;
	AT = 0x80060000;
	AT += A3;
	EMU_Write16(AT - 32602,V0); //+ 0xFFFF80A6
	if ((int32_t)S0 >= 0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(6,0x80015F54);
		goto ZZ_15B58_3FC;
	}
	V0 = S0;
	V0 = S0 + 3;
	ZZ_CLOCKCYCLES(7,0x80015F54);
ZZ_15B58_3FC:
	A1 = (int32_t)V0 >> 2;
	V0 = A1 << 2;
	V1 = S0 - V0;
	V0 = (int32_t)S0 < 8;
	if (V0)
	{
		A0 = V1 << 2;
		ZZ_CLOCKCYCLES(6,0x80015F70);
		goto ZZ_15B58_418;
	}
	A0 = V1 << 2;
	A0 |= 0x10;
	ZZ_CLOCKCYCLES(7,0x80015F70);
ZZ_15B58_418:
	V0 = V1 << 8;
	V1 = A1 << 17;
	V1 |= V0;
	V0 = A1 & 0x1;
	if (!V0)
	{
		V0 = V1 | 0x80;
		ZZ_CLOCKCYCLES(6,0x80015F90);
		goto ZZ_15B58_438;
	}
	V0 = V1 | 0x80;
	V0 |= A0;
	ZZ_CLOCKCYCLES(8,0x80015F94);
	goto ZZ_15B58_43C;
ZZ_15B58_438:
	V0 = A0 | V1;
	ZZ_CLOCKCYCLES(1,0x80015F94);
ZZ_15B58_43C:
	V0 |= T2;
	AT = 0x80060000;
	AT += A3;
	EMU_Write32(AT - 32580,V0); //+ 0xFFFF80BC
	V0 = S0 < 4;
	if (V0)
	{
		V0 = 0x1E;
		ZZ_CLOCKCYCLES(7,0x80015FC0);
		goto ZZ_15B58_468;
	}
	V0 = 0x1E;
	V0 = S0 - 4;
	V0 = V0 < 4;
	if (!V0)
	{
		V0 = 0x1E;
		ZZ_CLOCKCYCLES(11,0x80015FD0);
		goto ZZ_15B58_478;
	}
	V0 = 0x1E;
	ZZ_CLOCKCYCLES(11,0x80015FC0);
ZZ_15B58_468:
	EMU_Write16(T0,V0);
	ZZ_CLOCKCYCLES(2,0x800160E0);
	goto ZZ_15B58_588;
ZZ_15B58_470:
	A0 = -10;
	ZZ_CLOCKCYCLES(2,0x80016064);
	goto ZZ_15B58_50C;
ZZ_15B58_478:
	V0 = EMU_ReadU16(T1 + 4); //+ 0x4
	V0 -= 20;
	V0 = V0 < 2;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(6,0x800160D4);
		goto ZZ_15B58_57C;
	}
	V0 = 0x1;
	AT = 0x80060000;
	AT += A3;
	A0 = EMU_ReadU32(AT - 32584); //+ 0xFFFF80B8
  /* begin extended code */
  #ifdef C1C_ENABLE_INGAMEMENU
  uint32_t tpageEID = A0;
  #endif
  /* end extended code */
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15056); //+ 0xFFFFC530
	V0 = A0 >> 13;
	V0 &= 0x3FC;
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 == A0)
	{
		ZZ_CLOCKCYCLES(20,0x80016060);
		goto ZZ_15B58_508;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15040); //+ 0xFFFFC540
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 15052); //+ 0xFFFFC534
	A1 = EMU_ReadU32(V0 + 1028); //+ 0x404
	V1 += 8;
	ZZ_CLOCKCYCLES(26,0x80016038);
ZZ_15B58_4E0:
	V0 = V1 - A2;
	V0 = (int32_t)V0 >> 3;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80015FC8);
		goto ZZ_15B58_470;
	}
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 != A0)
	{
		V1 += 8;
		ZZ_CLOCKCYCLES(9,0x80016038);
		goto ZZ_15B58_4E0;
	}
	V1 += 8;
	V1 -= 8;
	ZZ_CLOCKCYCLES(10,0x80016060);
ZZ_15B58_508:
	A0 = V1;
	ZZ_CLOCKCYCLES(1,0x80016064);
ZZ_15B58_50C:
	V0 = (int32_t)A0 < -254;
	if (!V0)
	{
    /* begin extended code */
    #ifdef C1C_ENABLE_INGAMEMENU
    if (tpageEID != 0x52C2E06F)
    {
    #endif
    /* end extended code */
		  V0 = 0x14;
		  ZZ_CLOCKCYCLES(3,0x800160C8);
		  goto ZZ_15B58_570;
    /* begin extended code */
    #ifdef C1C_ENABLE_INGAMEMENU
    }
    else
    {
      V0 = 0x14;
      goto ZZ_15B58_574;
    }
    #endif
    /* end extended code */
	}
	V0 = 0x14;
	EMU_Write16(T0,V0);
	V0 = EMU_ReadU32(A0);
	AT = 0x80060000;
	AT += A3;
	EMU_Write32(AT - 32576,A0); //+ 0xFFFF80C0
	AT = 0x80060000;
	AT += A3;
	EMU_Write32(AT - 32588,V0); //+ 0xFFFF80B4
	AT = 0x80060000;
	AT += A3;
	V0 = EMU_ReadU32(AT - 32588); //+ 0xFFFF80B4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(V0,T1);
	AT = 0x80060000;
	AT += A3;
	V0 = EMU_ReadU32(AT - 32580); //+ 0xFFFF80BC
	EMU_Write32(A0,V0);
	ZZ_CLOCKCYCLES(25,0x800160E0);
	goto ZZ_15B58_588;
ZZ_15B58_570:
	V0 = 0x15;
ZZ_15B58_574:
	EMU_Write16(T0,V0);
	ZZ_CLOCKCYCLES(3,0x800160E0);
	goto ZZ_15B58_588;
ZZ_15B58_57C:
	AT = 0x80060000;
	AT += A3;
	EMU_Write16(AT - 32604,V0); //+ 0xFFFF80A4
	ZZ_CLOCKCYCLES(3,0x800160E0);
ZZ_15B58_588:
	T0 += 44;
	A3 += 44;
	S0 += 1;
	V0 = (int32_t)S0 < 16;
	if (V0)
	{
		T1 += 44;
		ZZ_CLOCKCYCLES(6,0x80015F38);
		goto ZZ_15B58_3E0;
	}
	T1 += 44;
	S1 = R0;
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	S3 = R0;
	V0 = EMU_ReadU32(V1 + 1028); //+ 0x404
	if ((int32_t)V0 <= 0)
	{
		S4 = 0xE;
		ZZ_CLOCKCYCLES(13,0x80016148);
		goto ZZ_15B58_5F0;
	}
	S4 = 0xE;
	S0 = 0x520;
	ZZ_CLOCKCYCLES(14,0x80016118);
ZZ_15B58_5C0:
	RA = 0x80016120; //ZZ_15B58_5C8
	A0 = S0 + V1;
	ZZ_CLOCKCYCLES(2,0x800126C0);
	goto ZZ_126C0;
ZZ_15B58_5C8:
	if (V0 != S4)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(2,0x8001612C);
		goto ZZ_15B58_5D4;
	}
	S0 += 8;
	S3 += 1;
	ZZ_CLOCKCYCLES(3,0x8001612C);
ZZ_15B58_5D4:
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	V0 = EMU_ReadU32(V1 + 1028); //+ 0x404
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80016118);
		goto ZZ_15B58_5C0;
	}
	ZZ_CLOCKCYCLES(7,0x80016148);
ZZ_15B58_5F0:
	V1 = 0x80060000;
	V1 -= 12368;
	V0 = 0x8;
	V0 = V0 - S3;
	EMU_Write32(V1,V0);
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(8,0x8001616C);
		goto ZZ_15B58_614;
	}
	V0 = 0x2;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(9,0x8001616C);
ZZ_15B58_614:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26384); //+ 0x6710
	V1 = V0 - 3;
	V0 = V1 < 54;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(7,0x800161A0);
		goto ZZ_15B58_648;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 488); //+ 0x1E8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x800161C4,ZZ_15B58_66C);
	ZZ_JUMPREGISTER(0x800161A0,ZZ_15B58_648);
	ZZ_JUMPREGISTER_END();
ZZ_15B58_648:
	V1 = 0x80060000;
	V1 -= 12368;
	V0 = EMU_ReadU32(V1);
	V0 = (int32_t)V0 < 5;
	if (V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(7,0x800161C8);
		goto ZZ_15B58_670;
	}
	S0 = R0;
	V0 = 0x4;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(9,0x800161C4);
ZZ_15B58_66C:
	S0 = R0;
	ZZ_CLOCKCYCLES(1,0x800161C8);
ZZ_15B58_670:
	T3 = 0x80060000;
	T3 -= 12368;
	T2 = 0x1;
	T5 = 0x3;
	T4 = 0x4;
	A1 = 0x80050000;
	A1 += 32604;
	A3 = A1 - 22;
	A2 = A1 - 24;
	T1 = 0x2000;
	T0 = R0;
	ZZ_CLOCKCYCLES(11,0x800161F4);
ZZ_15B58_69C:
	AT = 0x80050000;
	AT += T0;
	EMU_Write16(AT + 32584,S0); //+ 0x7F48
	V0 = EMU_ReadU32(T3);
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80016224);
		goto ZZ_15B58_6CC;
	}
	EMU_Write16(A2,T2);
	EMU_Write16(A3,T5);
	EMU_Write32(A1,T1);
	ZZ_CLOCKCYCLES(12,0x8001625C);
	goto ZZ_15B58_704;
ZZ_15B58_6CC:
	EMU_Write16(A2,T2);
	EMU_Write16(A3,T4);
	V0 = EMU_ReadU32(T3);
	A0 = V0 << 16;
	V0 = S0 - V0;
	V1 = V0 << 9;
	V1 = V1 - V0;
	V1 <<= 3;
	V1 += V0;
	V1 <<= 4;
	V1 += 8192;
	A0 += V1;
	EMU_Write32(A1,A0);
	ZZ_CLOCKCYCLES(14,0x8001625C);
ZZ_15B58_704:
	A1 += 44;
	A3 += 44;
	A2 += 44;
	V0 = 0x10000;
	T1 += V0;
	S0 += 1;
	V0 = (int32_t)S0 < 8;
	if (V0)
	{
		T0 += 44;
		ZZ_CLOCKCYCLES(9,0x800161F4);
		goto ZZ_15B58_69C;
	}
	T0 += 44;
	T1 = 0x63960000;
	T1 |= 0x347F;
	T2 = 0x80050000;
	T2 += 29324;
	T0 = T2;
	A3 = R0;
	ZZ_CLOCKCYCLES(15,0x80016298);
ZZ_15B58_740:
	A0 = EMU_ReadU32(T0);
	if (A0 == T1)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(4,0x800163AC);
		goto ZZ_15B58_854;
	}
	V0 = 0x4;
	AT = 0x80050000;
	AT += A3;
	V1 = EMU_ReadS16(AT + 32582); //+ 0x7F46
	if (V1 != V0)
	{
		V0 = A0 >> 13;
		ZZ_CLOCKCYCLES(10,0x800163AC);
		goto ZZ_15B58_854;
	}
	V0 = A0 >> 13;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15056); //+ 0xFFFFC530
	V0 &= 0x3FC;
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 == A0)
	{
		ZZ_CLOCKCYCLES(20,0x80016328);
		goto ZZ_15B58_7D0;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15040); //+ 0xFFFFC540
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 15052); //+ 0xFFFFC534
	A1 = EMU_ReadU32(V0 + 1028); //+ 0x404
	V1 += 8;
	ZZ_CLOCKCYCLES(26,0x80016300);
ZZ_15B58_7A8:
	V0 = V1 - A2;
	V0 = (int32_t)V0 >> 3;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80016340);
		goto ZZ_15B58_7E8;
	}
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (V0 != A0)
	{
		V1 += 8;
		ZZ_CLOCKCYCLES(9,0x80016300);
		goto ZZ_15B58_7A8;
	}
	V1 += 8;
	V1 -= 8;
	ZZ_CLOCKCYCLES(10,0x80016328);
ZZ_15B58_7D0:
	A0 = V1;
	ZZ_CLOCKCYCLES(1,0x8001632C);
ZZ_15B58_7D4:
	V0 = (int32_t)A0 < -254;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x80016348);
		goto ZZ_15B58_7F0;
	}
	EMU_Write32(T0,T1);
	ZZ_CLOCKCYCLES(5,0x800163AC);
	goto ZZ_15B58_854;
ZZ_15B58_7E8:
	A0 = -10;
	ZZ_CLOCKCYCLES(2,0x8001632C);
	goto ZZ_15B58_7D4;
ZZ_15B58_7F0:
	V1 = EMU_ReadU32(A0);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12356); //+ 0xFFFFCFBC
	V1 = (int32_t)V1 >> 1;
	V1 <<= 2;
	V1 += V0;
	V0 = 0x80050000;
	V0 += 32576;
	V0 += A3;
	EMU_Write32(V1,V0);
	V0 = 0x14;
	AT = 0x80050000;
	AT += A3;
	EMU_Write16(AT + 32580,V0); //+ 0x7F44
	V0 = EMU_ReadU32(A0);
	V1 = 0x80000000;
	AT = 0x80050000;
	AT += A3;
	EMU_Write32(AT + 32596,V0); //+ 0x7F54
	V0 = EMU_ReadU32(T0);
	V1 |= 0x2;
	AT = 0x80050000;
	AT += A3;
	EMU_Write32(AT + 32600,V0); //+ 0x7F58
	EMU_Write32(A0,V1);
	ZZ_CLOCKCYCLES(25,0x800163AC);
ZZ_15B58_854:
	T0 += 4;
	V0 = T2 + 32;
	V0 = (int32_t)T0 < (int32_t)V0;
	if (V0)
	{
		A3 += 44;
		ZZ_CLOCKCYCLES(5,0x80016298);
		goto ZZ_15B58_740;
	}
	A3 += 44;
	S0 = R0;
	S1 = R0;
	ZZ_CLOCKCYCLES(7,0x800163C8);
ZZ_15B58_870:
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadU32(AT + 5352); //+ 0x14E8
	if (!V0)
	{
		S1 += 28;
		ZZ_CLOCKCYCLES(6,0x800163E8);
		goto ZZ_15B58_890;
	}
	S1 += 28;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800163E8; //ZZ_15B58_890
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x800253A0,ZZ_253A0);
	ZZ_JUMPREGISTER(0x8001AC60,ZZ_1AC60);
	ZZ_JUMPREGISTER(0x80031BF8,ZZ_31BF8);
	ZZ_JUMPREGISTER_END();
ZZ_15B58_890:
	S0 += 1;
	V0 = (int32_t)S0 < 21;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x800163C8);
		goto ZZ_15B58_870;
	}
	ZZ_CLOCKCYCLES(4,0x800163F8);
ZZ_15B58_8A0:
	V0 = -255;
	RA = EMU_ReadU32(SP + 332); //+ 0x14C
	S4 = EMU_ReadU32(SP + 328); //+ 0x148
	S3 = EMU_ReadU32(SP + 324); //+ 0x144
	S2 = EMU_ReadU32(SP + 320); //+ 0x140
	S1 = EMU_ReadU32(SP + 316); //+ 0x13C
	S0 = EMU_ReadU32(SP + 312); //+ 0x138
	SP += 336;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80015B58,0x80015BD0,ZZ_15B58);
ZZ_MARK_TARGET(0x80015BD0,0x80015BDC,ZZ_15B58_78);
ZZ_MARK_TARGET(0x80015BDC,0x80015C20,ZZ_15B58_84);
ZZ_MARK_TARGET(0x80015C20,0x80015C2C,ZZ_15B58_C8);
ZZ_MARK_TARGET(0x80015C2C,0x80015C40,ZZ_15B58_D4);
ZZ_MARK_TARGET(0x80015C40,0x80015C54,ZZ_15B58_E8);
ZZ_MARK_TARGET(0x80015C54,0x80015C64,ZZ_15B58_FC);
ZZ_MARK_TARGET(0x80015C64,0x80015C80,ZZ_15B58_10C);
ZZ_MARK_TARGET(0x80015C80,0x80015C8C,ZZ_15B58_128);
ZZ_MARK_TARGET(0x80015C8C,0x80015C9C,ZZ_15B58_134);
ZZ_MARK_TARGET(0x80015C9C,0x80015CA4,ZZ_15B58_144);
ZZ_MARK_TARGET(0x80015CA4,0x80015CAC,ZZ_15B58_14C);
ZZ_MARK_TARGET(0x80015CAC,0x80015CB8,ZZ_15B58_154);
ZZ_MARK_TARGET(0x80015CB8,0x80015CC0,ZZ_15B58_160);
ZZ_MARK_TARGET(0x80015CC0,0x80015CC4,ZZ_15B58_168);
ZZ_MARK_TARGET(0x80015CC4,0x80015D18,ZZ_15B58_16C);
ZZ_MARK_TARGET(0x80015D18,0x80015D34,ZZ_15B58_1C0);
ZZ_MARK_TARGET(0x80015D34,0x80015D3C,ZZ_15B58_1DC);
ZZ_MARK_TARGET(0x80015D3C,0x80015D7C,ZZ_15B58_1E4);
ZZ_MARK_TARGET(0x80015D7C,0x80015D88,ZZ_15B58_224);
ZZ_MARK_TARGET(0x80015D88,0x80015DC4,ZZ_15B58_230);
ZZ_MARK_TARGET(0x80015DC4,0x80015DD8,ZZ_15B58_26C);
ZZ_MARK_TARGET(0x80015DD8,0x80015DF4,ZZ_15B58_280);
ZZ_MARK_TARGET(0x80015DF4,0x80015E20,ZZ_15B58_29C);
ZZ_MARK_TARGET(0x80015E20,0x80015E28,ZZ_15B58_2C8);
ZZ_MARK_TARGET(0x80015E28,0x80015E48,ZZ_15B58_2D0);
ZZ_MARK_TARGET(0x80015E48,0x80015E60,ZZ_15B58_2F0);
ZZ_MARK_TARGET(0x80015E60,0x80015E68,ZZ_15B58_308);
ZZ_MARK_TARGET(0x80015E68,0x80015E7C,ZZ_15B58_310);
ZZ_MARK_TARGET(0x80015E7C,0x80015E98,ZZ_15B58_324);
ZZ_MARK_TARGET(0x80015E98,0x80015ED0,ZZ_15B58_340);
ZZ_MARK_TARGET(0x80015ED0,0x80015EE4,ZZ_15B58_378);
ZZ_MARK_TARGET(0x80015EE4,0x80015F1C,ZZ_15B58_38C);
ZZ_MARK_TARGET(0x80015F1C,0x80015F38,ZZ_15B58_3C4);
ZZ_MARK_TARGET(0x80015F38,0x80015F54,ZZ_15B58_3E0);
ZZ_MARK_TARGET(0x80015F54,0x80015F70,ZZ_15B58_3FC);
ZZ_MARK_TARGET(0x80015F70,0x80015F90,ZZ_15B58_418);
ZZ_MARK_TARGET(0x80015F90,0x80015F94,ZZ_15B58_438);
ZZ_MARK_TARGET(0x80015F94,0x80015FC0,ZZ_15B58_43C);
ZZ_MARK_TARGET(0x80015FC0,0x80015FC8,ZZ_15B58_468);
ZZ_MARK_TARGET(0x80015FC8,0x80015FD0,ZZ_15B58_470);
ZZ_MARK_TARGET(0x80015FD0,0x80016038,ZZ_15B58_478);
ZZ_MARK_TARGET(0x80016038,0x80016060,ZZ_15B58_4E0);
ZZ_MARK_TARGET(0x80016060,0x80016064,ZZ_15B58_508);
ZZ_MARK_TARGET(0x80016064,0x800160C8,ZZ_15B58_50C);
ZZ_MARK_TARGET(0x800160C8,0x800160D4,ZZ_15B58_570);
ZZ_MARK_TARGET(0x800160D4,0x800160E0,ZZ_15B58_57C);
ZZ_MARK_TARGET(0x800160E0,0x80016118,ZZ_15B58_588);
ZZ_MARK_TARGET(0x80016118,0x80016120,ZZ_15B58_5C0);
ZZ_MARK_TARGET(0x80016120,0x8001612C,ZZ_15B58_5C8);
ZZ_MARK_TARGET(0x8001612C,0x80016148,ZZ_15B58_5D4);
ZZ_MARK_TARGET(0x80016148,0x8001616C,ZZ_15B58_5F0);
ZZ_MARK_TARGET(0x8001616C,0x800161A0,ZZ_15B58_614);
ZZ_MARK_TARGET(0x800161A0,0x800161C4,ZZ_15B58_648);
ZZ_MARK_TARGET(0x800161C4,0x800161C8,ZZ_15B58_66C);
ZZ_MARK_TARGET(0x800161C8,0x800161F4,ZZ_15B58_670);
ZZ_MARK_TARGET(0x800161F4,0x80016224,ZZ_15B58_69C);
ZZ_MARK_TARGET(0x80016224,0x8001625C,ZZ_15B58_6CC);
ZZ_MARK_TARGET(0x8001625C,0x80016298,ZZ_15B58_704);
ZZ_MARK_TARGET(0x80016298,0x80016300,ZZ_15B58_740);
ZZ_MARK_TARGET(0x80016300,0x80016328,ZZ_15B58_7A8);
ZZ_MARK_TARGET(0x80016328,0x8001632C,ZZ_15B58_7D0);
ZZ_MARK_TARGET(0x8001632C,0x80016340,ZZ_15B58_7D4);
ZZ_MARK_TARGET(0x80016340,0x80016348,ZZ_15B58_7E8);
ZZ_MARK_TARGET(0x80016348,0x800163AC,ZZ_15B58_7F0);
ZZ_MARK_TARGET(0x800163AC,0x800163C8,ZZ_15B58_854);
ZZ_MARK_TARGET(0x800163C8,0x800163E8,ZZ_15B58_870);
ZZ_MARK_TARGET(0x800163E8,0x800163F8,ZZ_15B58_890);
ZZ_MARK_TARGET(0x800163F8,0x80016420,ZZ_15B58_8A0);
