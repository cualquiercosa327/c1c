#ifdef ZZ_INCLUDE_CODE
ZZ_12DCC:
	SP -= 48;
	EMU_Write32(SP + 36,S3); //+ 0x24
	S3 = A0;
	EMU_Write32(SP + 40,S4); //+ 0x28
	S4 = A1;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V1 = EMU_ReadU32(S3 + 24); //+ 0x18
	S2 = R0;
	V0 = EMU_ReadU32(V1 + 1028); //+ 0x404
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(15,0x80012E3C);
		goto ZZ_12DCC_70;
	}
	S1 = R0;
	S0 = 0x520;
	ZZ_CLOCKCYCLES(16,0x80012E0C);
ZZ_12DCC_40:
	RA = 0x80012E14; //ZZ_12DCC_48
	A0 = S0 + V1;
	ZZ_CLOCKCYCLES(2,0x800126C0);
	goto ZZ_126C0;
ZZ_12DCC_48:
	if (V0 != S4)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(2,0x80012E20);
		goto ZZ_12DCC_54;
	}
	S0 += 8;
	S1 += 1;
	ZZ_CLOCKCYCLES(3,0x80012E20);
ZZ_12DCC_54:
	V1 = EMU_ReadU32(S3 + 24); //+ 0x18
	V0 = EMU_ReadU32(V1 + 1028); //+ 0x404
	S2 += 1;
	V0 = (int32_t)S2 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80012E0C);
		goto ZZ_12DCC_40;
	}
	ZZ_CLOCKCYCLES(7,0x80012E3C);
ZZ_12DCC_70:
	V0 = S1;
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8002EAE4,ZZ_2EABC_28);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80012DCC,0x80012E0C,ZZ_12DCC);
ZZ_MARK_TARGET(0x80012E0C,0x80012E14,ZZ_12DCC_40);
ZZ_MARK_TARGET(0x80012E14,0x80012E20,ZZ_12DCC_48);
ZZ_MARK_TARGET(0x80012E20,0x80012E3C,ZZ_12DCC_54);
ZZ_MARK_TARGET(0x80012E3C,0x80012E64,ZZ_12DCC_70);
