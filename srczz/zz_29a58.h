#ifdef ZZ_INCLUDE_CODE
ZZ_29A58:
	SP -= 24;
	V1 = EMU_ReadU32(GP + 788); //+ 0x314
	V0 = 0x19;
	EMU_Write32(SP + 20,RA); //+ 0x14
	if (V1 == V0)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(6,0x80029A7C);
		goto ZZ_29A58_24;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = 0x38;
	if (V1 != V0)
	{
		V0 = 0x5B4;
		ZZ_CLOCKCYCLES(9,0x80029A80);
		goto ZZ_29A58_28;
	}
	V0 = 0x5B4;
	ZZ_CLOCKCYCLES(9,0x80029A7C);
ZZ_29A58_24:
	V0 = 0xA32;
	ZZ_CLOCKCYCLES(1,0x80029A80);
ZZ_29A58_28:
	V0 <<= 1;
	S0 = V0 + 4;
	RA = 0x80029A90; //ZZ_29A58_38
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80011A58);
	goto ZZ_11A58;
ZZ_29A58_38:
	EMU_Write32(GP + 700,V0); //+ 0x2BC
	EMU_Write32(GP + 772,V0); //+ 0x304
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x80029AC0);
		goto ZZ_29A58_68;
	}
	A0 = S0;
	RA = 0x80029AA8; //ZZ_29A58_50
	EMU_Write16(V0 + 2,R0); //+ 0x2
	ZZ_CLOCKCYCLES(6,0x80011A58);
	goto ZZ_11A58;
ZZ_29A58_50:
	EMU_Write32(GP + 704,V0); //+ 0x2C0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80029AC0);
		goto ZZ_29A58_68;
	}
	EMU_Write16(V0 + 2,R0); //+ 0x2
	V0 = -255;
	ZZ_CLOCKCYCLES(6,0x80029AC4);
	goto ZZ_29A58_6C;
ZZ_29A58_68:
	V0 = -15;
	ZZ_CLOCKCYCLES(1,0x80029AC4);
ZZ_29A58_6C:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80015E48,ZZ_15B58_2F0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80029A58,0x80029A7C,ZZ_29A58);
ZZ_MARK_TARGET(0x80029A7C,0x80029A80,ZZ_29A58_24);
ZZ_MARK_TARGET(0x80029A80,0x80029A90,ZZ_29A58_28);
ZZ_MARK_TARGET(0x80029A90,0x80029AA8,ZZ_29A58_38);
ZZ_MARK_TARGET(0x80029AA8,0x80029AC0,ZZ_29A58_50);
ZZ_MARK_TARGET(0x80029AC0,0x80029AC4,ZZ_29A58_68);
ZZ_MARK_TARGET(0x80029AC4,0x80029AD8,ZZ_29A58_6C);
