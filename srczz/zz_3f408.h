#ifdef ZZ_INCLUDE_CODE
ZZ_3F408:
	SP -= 40;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A1;
	EMU_Write32(SP + 32,S4); //+ 0x20
	S4 = A2;
	EMU_Write32(SP + 16,S0); //+ 0x10
	EMU_Write32(SP + 36,RA); //+ 0x24
	RA = 0x8003F43C; //ZZ_3F408_34
	S0 = A3;
	ZZ_CLOCKCYCLES(13,0x8003F23C);
	goto ZZ_3F23C;
ZZ_3F408_34:
	V1 = 0x1;
	EMU_Write16(S1,S3);
	EMU_Write16(S1 + 2,S4); //+ 0x2
	EMU_Write16(S1 + 4,S0); //+ 0x4
	EMU_Write16(S1 + 12,R0); //+ 0xC
	EMU_Write16(S1 + 14,R0); //+ 0xE
	EMU_Write16(S1 + 16,R0); //+ 0x10
	EMU_Write16(S1 + 18,R0); //+ 0x12
	EMU_Write8(S1 + 25,R0); //+ 0x19
	EMU_Write8(S1 + 26,R0); //+ 0x1A
	EMU_Write8(S1 + 27,R0); //+ 0x1B
	EMU_Write8(S1 + 22,V1); //+ 0x16
	if (!V0)
	{
		EMU_Write16(S1 + 6,S2); //+ 0x6
		ZZ_CLOCKCYCLES(14,0x8003F47C);
		goto ZZ_3F408_74;
	}
	EMU_Write16(S1 + 6,S2); //+ 0x6
	V0 = (int32_t)S2 < 289;
	ZZ_CLOCKCYCLES(16,0x8003F480);
	goto ZZ_3F408_78;
ZZ_3F408_74:
	V0 = (int32_t)S2 < 257;
	ZZ_CLOCKCYCLES(1,0x8003F480);
ZZ_3F408_78:
	EMU_Write8(S1 + 23,V0); //+ 0x17
	EMU_Write16(S1 + 8,S3); //+ 0x8
	RA = 0x8003F490; //ZZ_3F408_88
	EMU_Write16(S1 + 10,S4); //+ 0xA
	ZZ_CLOCKCYCLES(4,0x80040144);
	goto ZZ_40144;
ZZ_3F408_88:
	V1 = 0x1;
	if (V0 == V1)
	{
		V0 = S1;
		ZZ_CLOCKCYCLES(3,0x8003F4A8);
		goto ZZ_3F408_A0;
	}
	V0 = S1;
	RA = 0x8003F4A4; //ZZ_3F408_9C
	ZZ_CLOCKCYCLES(5,0x80040144);
	goto ZZ_40144;
ZZ_3F408_9C:
	V0 = S1;
	ZZ_CLOCKCYCLES(1,0x8003F4A8);
ZZ_3F408_A0:
	V1 = 0xA;
	EMU_Write16(V0 + 20,V1); //+ 0x14
	EMU_Write8(V0 + 24,R0); //+ 0x18
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80016AC0,ZZ_16A6C_54);
	ZZ_JUMPREGISTER(0x80016B74,ZZ_16A6C_108);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003F408,0x8003F43C,ZZ_3F408);
ZZ_MARK_TARGET(0x8003F43C,0x8003F47C,ZZ_3F408_34);
ZZ_MARK_TARGET(0x8003F47C,0x8003F480,ZZ_3F408_74);
ZZ_MARK_TARGET(0x8003F480,0x8003F490,ZZ_3F408_78);
ZZ_MARK_TARGET(0x8003F490,0x8003F4A4,ZZ_3F408_88);
ZZ_MARK_TARGET(0x8003F4A4,0x8003F4A8,ZZ_3F408_9C);
ZZ_MARK_TARGET(0x8003F4A8,0x8003F4D8,ZZ_3F408_A0);
