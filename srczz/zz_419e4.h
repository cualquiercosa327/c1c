#ifdef ZZ_INCLUDE_CODE
ZZ_419E4:
	SP -= 64;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = A0;
	EMU_Write32(SP + 40,S2); //+ 0x28
	S2 = A1;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S5); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	RA = 0x80041A10; //ZZ_419E4_2C
	EMU_Write32(SP + 32,S0); //+ 0x20
	ZZ_CLOCKCYCLES(11,0x80042864);
	goto ZZ_42864;
ZZ_419E4_2C:
	A0 = EMU_ReadS16(S1 + 4); //+ 0x4
	S5 = R0;
	if ((int32_t)A0 < 0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(4,0x80041A50);
		goto ZZ_419E4_6C;
	}
	V1 = A0;
	A1 = 0x80050000;
	A1 += 19056;
	V0 = EMU_ReadU16(A1);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x80041A54);
		goto ZZ_419E4_70;
	}
	V1 = EMU_ReadU16(A1);
	ZZ_CLOCKCYCLES(16,0x80041A54);
	goto ZZ_419E4_70;
ZZ_419E4_6C:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x80041A54);
ZZ_419E4_70:
	A1 = EMU_ReadS16(S1 + 6); //+ 0x6
	EMU_Write16(S1 + 4,V1); //+ 0x4
	if ((int32_t)A1 < 0)
	{
		V1 = A1;
		ZZ_CLOCKCYCLES(4,0x80041A94);
		goto ZZ_419E4_B0;
	}
	V1 = A1;
	A2 = 0x80050000;
	A2 += 19058;
	V0 = EMU_ReadU16(A2);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(13,0x80041A98);
		goto ZZ_419E4_B4;
	}
	A0 = V1;
	A0 = EMU_ReadU16(A2);
	V0 = A0 << 16;
	ZZ_CLOCKCYCLES(16,0x80041A9C);
	goto ZZ_419E4_B8;
ZZ_419E4_B0:
	A0 = R0;
	ZZ_CLOCKCYCLES(1,0x80041A98);
ZZ_419E4_B4:
	V0 = A0 << 16;
	ZZ_CLOCKCYCLES(1,0x80041A9C);
ZZ_419E4_B8:
	V1 = EMU_ReadS16(S1 + 4); //+ 0x4
	V0 = (int32_t)V0 >> 16;
	EMU_SMultiply(V1,V0);
	EMU_Write16(S1 + 6,A0); //+ 0x6
	V0 = LO;
	V0 += 1;
	V1 = V0 >> 31;
	V0 += V1;
	A0 = (int32_t)V0 >> 1;
	if ((int32_t)A0 > 0)
	{
		S0 = (int32_t)V0 >> 5;
		ZZ_CLOCKCYCLES(11,0x80041AD0);
		goto ZZ_419E4_EC;
	}
	S0 = (int32_t)V0 >> 5;
	V0 = -1;
	ZZ_CLOCKCYCLES(13,0x80041C10);
	goto ZZ_419E4_22C;
ZZ_419E4_EC:
	V1 = S0;
	V0 = V1 << 4;
	S0 = A0 - V0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	S4 = V1;
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		A0 = 0xA0000000;
		ZZ_CLOCKCYCLES(11,0x80041B30);
		goto ZZ_419E4_14C;
	}
	A0 = 0xA0000000;
	S3 = 0x4000000;
	ZZ_CLOCKCYCLES(12,0x80041B00);
ZZ_419E4_11C:
	RA = 0x80041B08; //ZZ_419E4_124
	ZZ_CLOCKCYCLES(2,0x80042898);
	goto ZZ_42898;
ZZ_419E4_124:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80041C10);
		goto ZZ_419E4_22C;
	}
	V0 = -1;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V0 &= S3;
	if (!V0)
	{
		A0 = 0xA0000000;
		ZZ_CLOCKCYCLES(10,0x80041B00);
		goto ZZ_419E4_11C;
	}
	A0 = 0xA0000000;
	ZZ_CLOCKCYCLES(10,0x80041B30);
ZZ_419E4_14C:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19264); //+ 0x4B40
	V0 = 0x4000000;
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = 0x1000000;
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19260); //+ 0x4B3C
	if (!S5)
	{
		ZZ_CLOCKCYCLES(12,0x80041B64);
		goto ZZ_419E4_180;
	}
	A0 = 0xB0000000;
	ZZ_CLOCKCYCLES(13,0x80041B64);
ZZ_419E4_180:
	EMU_Write32(V0,A0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = EMU_ReadU32(S1);
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19260); //+ 0x4B3C
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	S0 -= 1;
	EMU_Write32(V1,V0);
	V0 = -1;
	if (S0 == V0)
	{
		ZZ_CLOCKCYCLES(14,0x80041BC0);
		goto ZZ_419E4_1DC;
	}
	A0 = -1;
	ZZ_CLOCKCYCLES(15,0x80041BA0);
ZZ_419E4_1BC:
	V1 = EMU_ReadU32(S2);
	S2 += 4;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19260); //+ 0x4B3C
	S0 -= 1;
	EMU_Write32(V0,V1);
	if (S0 != A0)
	{
		ZZ_CLOCKCYCLES(8,0x80041BA0);
		goto ZZ_419E4_1BC;
	}
	ZZ_CLOCKCYCLES(8,0x80041BC0);
ZZ_419E4_1DC:
	if (!S4)
	{
		V1 = 0x4000000;
		ZZ_CLOCKCYCLES(2,0x80041C0C);
		goto ZZ_419E4_228;
	}
	V1 = 0x4000000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V1 |= 0x2;
	EMU_Write32(V0,V1);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19268); //+ 0x4B44
	A0 = 0x1000000;
	EMU_Write32(V0,S2);
	V0 = S4 << 16;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19272); //+ 0x4B48
	V0 |= 0x10;
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	A0 |= 0x201;
	EMU_Write32(V0,A0);
	ZZ_CLOCKCYCLES(19,0x80041C0C);
ZZ_419E4_228:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80041C10);
ZZ_419E4_22C:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800419E4,0x80041A10,ZZ_419E4);
ZZ_MARK_TARGET(0x80041A10,0x80041A50,ZZ_419E4_2C);
ZZ_MARK_TARGET(0x80041A50,0x80041A54,ZZ_419E4_6C);
ZZ_MARK_TARGET(0x80041A54,0x80041A94,ZZ_419E4_70);
ZZ_MARK_TARGET(0x80041A94,0x80041A98,ZZ_419E4_B0);
ZZ_MARK_TARGET(0x80041A98,0x80041A9C,ZZ_419E4_B4);
ZZ_MARK_TARGET(0x80041A9C,0x80041AD0,ZZ_419E4_B8);
ZZ_MARK_TARGET(0x80041AD0,0x80041B00,ZZ_419E4_EC);
ZZ_MARK_TARGET(0x80041B00,0x80041B08,ZZ_419E4_11C);
ZZ_MARK_TARGET(0x80041B08,0x80041B30,ZZ_419E4_124);
ZZ_MARK_TARGET(0x80041B30,0x80041B64,ZZ_419E4_14C);
ZZ_MARK_TARGET(0x80041B64,0x80041BA0,ZZ_419E4_180);
ZZ_MARK_TARGET(0x80041BA0,0x80041BC0,ZZ_419E4_1BC);
ZZ_MARK_TARGET(0x80041BC0,0x80041C0C,ZZ_419E4_1DC);
ZZ_MARK_TARGET(0x80041C0C,0x80041C10,ZZ_419E4_228);
ZZ_MARK_TARGET(0x80041C10,0x80041C38,ZZ_419E4_22C);
