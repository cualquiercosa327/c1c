#ifdef ZZ_INCLUDE_CODE
ZZ_16420:
	SP -= 40;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A0;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V1 = EMU_ReadU32(S2);
	V0 = 0x1;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(10,0x800164DC);
		goto ZZ_16420_BC;
	}
	V0 = -255;
	S0 = R0;
	S1 = R0;
	ZZ_CLOCKCYCLES(12,0x80016450);
ZZ_16420_30:
	AT = 0x80050000;
	AT += S1;
	V0 = EMU_ReadU32(AT + 5364); //+ 0x14F4
	if (!V0)
	{
		S1 += 28;
		ZZ_CLOCKCYCLES(6,0x80016470);
		goto ZZ_16420_50;
	}
	S1 += 28;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80016470; //ZZ_16420_50
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80016D14,ZZ_16D14);
	ZZ_JUMPREGISTER(0x80029AD8,ZZ_29AD8);
	ZZ_JUMPREGISTER(0x8002D694,ZZ_2D694);
	ZZ_JUMPREGISTER(0x8001AC28,ZZ_1AC28);
	ZZ_JUMPREGISTER(0x8002FFC0,ZZ_2FFC0);
	ZZ_JUMPREGISTER(0x80031938,ZZ_31938);
	ZZ_JUMPREGISTER(0x80032298,ZZ_32298);
	ZZ_JUMPREGISTER(0x8002E8BC,ZZ_2E8BC);
	ZZ_JUMPREGISTER_END();
ZZ_16420_50:
	S0 += 1;
	V0 = (int32_t)S0 < 21;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80016450);
		goto ZZ_16420_30;
	}
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(8,0x800164B0);
		goto ZZ_16420_90;
	}
	S0 = R0;
	A0 = S2;
	ZZ_CLOCKCYCLES(9,0x80016494);
ZZ_16420_74:
	RA = 0x8001649C; //ZZ_16420_7C
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x800164F8);
	goto ZZ_164F8;
ZZ_16420_7C:
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(5,0x80016494);
		goto ZZ_16420_74;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(5,0x800164B0);
ZZ_16420_90:
	A0 = EMU_ReadU32(S2 + 44); //+ 0x2C
	RA = 0x800164BC; //ZZ_16420_9C
	ZZ_CLOCKCYCLES(3,0x80011C8C);
	goto ZZ_11C8C;
ZZ_16420_9C:
	A0 = EMU_ReadU32(S2 + 2708); //+ 0xA94
	RA = 0x800164C8; //ZZ_16420_A8
	ZZ_CLOCKCYCLES(3,0x80011C8C);
	goto ZZ_11C8C;
ZZ_16420_A8:
	A0 = EMU_ReadU32(S2 + 24); //+ 0x18
	RA = 0x800164D4; //ZZ_16420_B4
	ZZ_CLOCKCYCLES(3,0x80011C8C);
	goto ZZ_11C8C;
ZZ_16420_B4:
	V0 = -255;
	EMU_Write32(S2,R0);
	ZZ_CLOCKCYCLES(2,0x800164DC);
ZZ_16420_BC:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80016420,0x80016450,ZZ_16420);
ZZ_MARK_TARGET(0x80016450,0x80016470,ZZ_16420_30);
ZZ_MARK_TARGET(0x80016470,0x80016494,ZZ_16420_50);
ZZ_MARK_TARGET(0x80016494,0x8001649C,ZZ_16420_74);
ZZ_MARK_TARGET(0x8001649C,0x800164B0,ZZ_16420_7C);
ZZ_MARK_TARGET(0x800164B0,0x800164BC,ZZ_16420_90);
ZZ_MARK_TARGET(0x800164BC,0x800164C8,ZZ_16420_9C);
ZZ_MARK_TARGET(0x800164C8,0x800164D4,ZZ_16420_A8);
ZZ_MARK_TARGET(0x800164D4,0x800164DC,ZZ_16420_B4);
ZZ_MARK_TARGET(0x800164DC,0x800164F8,ZZ_16420_BC);
