#ifdef ZZ_INCLUDE_CODE
ZZ_243A0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31740); //+ 0xFFFF8404
	V1 = EMU_ReadU32(V0 + 132); //+ 0x84
	V0 = V1 < 103;
	if (V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(8,0x800243C8);
		goto ZZ_243A0_28;
	}
	EMU_SMultiply(A2,V1);
	V1 = 0x66;
	EMU_SMultiply(A2,V1);
	ZZ_CLOCKCYCLES(10,0x800243C8);
ZZ_243A0_28:
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		A0 &= 0xFFF;
		ZZ_CLOCKCYCLES(3,0x800243D8);
		goto ZZ_243A0_38;
	}
	A0 &= 0xFFF;
	V0 += 1023;
	ZZ_CLOCKCYCLES(4,0x800243D8);
ZZ_243A0_38:
	A2 = (int32_t)V0 >> 10;
	A1 &= 0xFFF;
	T0 = A1 - A0;
	if ((int32_t)T0 >= 0)
	{
		V0 = T0;
		ZZ_CLOCKCYCLES(5,0x800243F0);
		goto ZZ_243A0_50;
	}
	V0 = T0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x800243F0);
ZZ_243A0_50:
	V0 = (int32_t)V0 < 2049;
	if (V0)
	{
		T1 = T0;
		ZZ_CLOCKCYCLES(3,0x80024408);
		goto ZZ_243A0_68;
	}
	T1 = T0;
	if ((int32_t)T0 > 0)
	{
		T1 = T0 - 4096;
		ZZ_CLOCKCYCLES(5,0x80024408);
		goto ZZ_243A0_68;
	}
	T1 = T0 - 4096;
	T1 = T0 + 4096;
	ZZ_CLOCKCYCLES(6,0x80024408);
ZZ_243A0_68:
	if ((int32_t)T1 >= 0)
	{
		T0 = T1;
		ZZ_CLOCKCYCLES(2,0x80024414);
		goto ZZ_243A0_74;
	}
	T0 = T1;
	T0 = -T0;
	ZZ_CLOCKCYCLES(3,0x80024414);
ZZ_243A0_74:
	if (!A3)
	{
		V1 = 0x20000000;
		ZZ_CLOCKCYCLES(2,0x800244A4);
		goto ZZ_243A0_104;
	}
	V1 = 0x20000000;
	V0 = EMU_ReadU32(A3 + 204); //+ 0xCC
	V0 &= V1;
	if (!V0)
	{
		V0 = A2 << 2;
		ZZ_CLOCKCYCLES(7,0x800244A4);
		goto ZZ_243A0_104;
	}
	V0 = A2 << 2;
	V0 = (int32_t)T0 < (int32_t)V0;
	if (!V0)
	{
		V1 = A2 << 1;
		ZZ_CLOCKCYCLES(10,0x800244A4);
		goto ZZ_243A0_104;
	}
	V1 = A2 << 1;
	V0 = (int32_t)T0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)T0 < (int32_t)A2;
		ZZ_CLOCKCYCLES(13,0x80024474);
		goto ZZ_243A0_D4;
	}
	V0 = (int32_t)T0 < (int32_t)A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(15,0x80024464);
		goto ZZ_243A0_C4;
	}
	if ((int32_t)A2 >= 0)
	{
		V0 = A2;
		ZZ_CLOCKCYCLES(17,0x8002445C);
		goto ZZ_243A0_BC;
	}
	V0 = A2;
	V0 = A2 + 7;
	ZZ_CLOCKCYCLES(18,0x8002445C);
ZZ_243A0_BC:
	A2 = (int32_t)V0 >> 3;
	ZZ_CLOCKCYCLES(2,0x800244A4);
	goto ZZ_243A0_104;
ZZ_243A0_C4:
	if ((int32_t)A2 >= 0)
	{
		V0 = A2;
		ZZ_CLOCKCYCLES(2,0x800244A0);
		goto ZZ_243A0_100;
	}
	V0 = A2;
	V0 = A2 + 3;
	ZZ_CLOCKCYCLES(4,0x800244A0);
	goto ZZ_243A0_100;
ZZ_243A0_D4:
	V1 += A2;
	V0 = (int32_t)T0 < (int32_t)V1;
	if (!V0)
	{
		V0 = A2 >> 31;
		ZZ_CLOCKCYCLES(4,0x80024490);
		goto ZZ_243A0_F0;
	}
	V0 = A2 >> 31;
	V0 += A2;
	A2 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(7,0x800244A4);
	goto ZZ_243A0_104;
ZZ_243A0_F0:
	V0 = V1;
	if ((int32_t)V0 >= 0)
	{
		A2 = (int32_t)V0 >> 2;
		ZZ_CLOCKCYCLES(3,0x800244A4);
		goto ZZ_243A0_104;
	}
	A2 = (int32_t)V0 >> 2;
	V0 += 3;
	ZZ_CLOCKCYCLES(4,0x800244A0);
ZZ_243A0_100:
	A2 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(1,0x800244A4);
ZZ_243A0_104:
	V0 = (int32_t)T0 < (int32_t)A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x800244C4);
		goto ZZ_243A0_124;
	}
	if (!A3)
	{
		A0 = A1;
		ZZ_CLOCKCYCLES(5,0x80024520);
		goto ZZ_243A0_180;
	}
	A0 = A1;
	V0 = EMU_ReadU32(A3 + 200); //+ 0xC8
	V0 |= 0x800;
	ZZ_CLOCKCYCLES(8,0x8002451C);
	goto ZZ_243A0_17C;
ZZ_243A0_124:
	if ((int32_t)T0 >= 0)
	{
		V1 = T0;
		ZZ_CLOCKCYCLES(2,0x800244D0);
		goto ZZ_243A0_130;
	}
	V1 = T0;
	V1 = -V1;
	ZZ_CLOCKCYCLES(3,0x800244D0);
ZZ_243A0_130:
	V0 = 0x800;
	if (V1 != V0)
	{
		V0 = (int32_t)A1 < 2048;
		ZZ_CLOCKCYCLES(3,0x800244E8);
		goto ZZ_243A0_148;
	}
	V0 = (int32_t)A1 < 2048;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x800244E8);
		goto ZZ_243A0_148;
	}
	T1 = -T1;
	ZZ_CLOCKCYCLES(6,0x800244E8);
ZZ_243A0_148:
	if ((int32_t)T1 >= 0)
	{
		V0 = A0 + A2;
		ZZ_CLOCKCYCLES(2,0x80024508);
		goto ZZ_243A0_168;
	}
	V0 = A0 + A2;
	V0 = A0 - A2;
	if (!A3)
	{
		A0 = V0 & 0xFFF;
		ZZ_CLOCKCYCLES(5,0x80024520);
		goto ZZ_243A0_180;
	}
	A0 = V0 & 0xFFF;
	V0 = EMU_ReadU32(A3 + 200); //+ 0xC8
	V0 |= 0x8;
	ZZ_CLOCKCYCLES(8,0x8002451C);
	goto ZZ_243A0_17C;
ZZ_243A0_168:
	if (!A3)
	{
		A0 = V0 & 0xFFF;
		ZZ_CLOCKCYCLES(2,0x80024520);
		goto ZZ_243A0_180;
	}
	A0 = V0 & 0xFFF;
	V0 = EMU_ReadU32(A3 + 200); //+ 0xC8
	V1 = -9;
	V0 &= V1;
	ZZ_CLOCKCYCLES(5,0x8002451C);
ZZ_243A0_17C:
	EMU_Write32(A3 + 200,V0); //+ 0xC8
	ZZ_CLOCKCYCLES(1,0x80024520);
ZZ_243A0_180:
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = A0;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8001F70C,ZZ_1F30C_400);
	ZZ_JUMPREGISTER(0x8001F764,ZZ_1F30C_458);
  //ZZ_JUMPREGISTER(0x80020AB4,ZZ_201DC_8D8);
	ZZ_JUMPREGISTER(0x8001F510,ZZ_1F30C_204);
	ZZ_JUMPREGISTER(0x8002BD7C,ZZ_2BAB4_2C8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800243A0,0x800243C8,ZZ_243A0);
ZZ_MARK_TARGET(0x800243C8,0x800243D8,ZZ_243A0_28);
ZZ_MARK_TARGET(0x800243D8,0x800243F0,ZZ_243A0_38);
ZZ_MARK_TARGET(0x800243F0,0x80024408,ZZ_243A0_50);
ZZ_MARK_TARGET(0x80024408,0x80024414,ZZ_243A0_68);
ZZ_MARK_TARGET(0x80024414,0x8002445C,ZZ_243A0_74);
ZZ_MARK_TARGET(0x8002445C,0x80024464,ZZ_243A0_BC);
ZZ_MARK_TARGET(0x80024464,0x80024474,ZZ_243A0_C4);
ZZ_MARK_TARGET(0x80024474,0x80024490,ZZ_243A0_D4);
ZZ_MARK_TARGET(0x80024490,0x800244A0,ZZ_243A0_F0);
ZZ_MARK_TARGET(0x800244A0,0x800244A4,ZZ_243A0_100);
ZZ_MARK_TARGET(0x800244A4,0x800244C4,ZZ_243A0_104);
ZZ_MARK_TARGET(0x800244C4,0x800244D0,ZZ_243A0_124);
ZZ_MARK_TARGET(0x800244D0,0x800244E8,ZZ_243A0_130);
ZZ_MARK_TARGET(0x800244E8,0x80024508,ZZ_243A0_148);
ZZ_MARK_TARGET(0x80024508,0x8002451C,ZZ_243A0_168);
ZZ_MARK_TARGET(0x8002451C,0x80024520,ZZ_243A0_17C);
ZZ_MARK_TARGET(0x80024520,0x80024528,ZZ_243A0_180);
