#ifdef ZZ_INCLUDE_CODE
ZZ_317F8:
	V1 = EMU_ReadU32(GP + 708); //+ 0x2C4
	SP -= 32;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	if (!V1)
	{
		EMU_Write32(SP + 28,RA); //+ 0x1C
		ZZ_CLOCKCYCLES(6,0x80031924);
		goto ZZ_317F8_12C;
	}
	EMU_Write32(SP + 28,RA); //+ 0x1C
	V0 = 0x4;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(9,0x80031848);
		goto ZZ_317F8_50;
	}
	V0 = EMU_ReadS16(GP + 252); //+ 0xFC
	if (!V0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(13,0x80031840);
		goto ZZ_317F8_48;
	}
	V1 = V0;
	V0 = V1 - 1;
	EMU_Write16(GP + 252,V0); //+ 0xFC
	V0 <<= 16;
	if (V0)
	{
		ZZ_CLOCKCYCLES(18,0x80031848);
		goto ZZ_317F8_50;
	}
	ZZ_CLOCKCYCLES(18,0x80031840);
ZZ_317F8_48:
	V0 = 0x1;
	EMU_Write32(GP + 708,V0); //+ 0x2C4
	ZZ_CLOCKCYCLES(2,0x80031848);
ZZ_317F8_50:
	V1 = EMU_ReadU32(GP + 708); //+ 0x2C4
	V0 = 0x3;
	if (V1 != V0)
	{
		V0 = (int32_t)V1 < 3;
		ZZ_CLOCKCYCLES(4,0x8003190C);
		goto ZZ_317F8_114;
	}
	V0 = (int32_t)V1 < 3;
	A0 = EMU_ReadU32(S0);
	V0 = A0 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80031884);
		goto ZZ_317F8_8C;
	}
	V0 = EMU_ReadU32(GP + 596); //+ 0x254
	if (V0 != A0)
	{
		V0 = (int32_t)V1 < 3;
		ZZ_CLOCKCYCLES(13,0x80031898);
		goto ZZ_317F8_A0;
	}
	V0 = (int32_t)V1 < 3;
	ZZ_CLOCKCYCLES(15,0x8003190C);
	goto ZZ_317F8_114;
ZZ_317F8_8C:
	V1 = EMU_ReadU32(GP + 596); //+ 0x254
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x80031900);
		goto ZZ_317F8_108;
	}
	ZZ_CLOCKCYCLES(5,0x80031898);
ZZ_317F8_A0:
	V0 = EMU_ReadU32(GP + 624); //+ 0x270
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(4,0x80031900);
		goto ZZ_317F8_108;
	}
	V0 = -1;
	V1 = EMU_ReadS16(GP + 604); //+ 0x25C
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x80031900);
		goto ZZ_317F8_108;
	}
	V0 = EMU_ReadU32(GP + 256); //+ 0x100
	if (V0)
	{
		A3 = 0x1E;
		ZZ_CLOCKCYCLES(12,0x80031900);
		goto ZZ_317F8_108;
	}
	A3 = 0x1E;
	A2 = EMU_ReadU16(GP + 588); //+ 0x24C
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = 0x80050000;
	A1 = EMU_ReadS16(A1 + 28348); //+ 0x6EBC
	A2 <<= 16;
	RA = 0x800318E4; //ZZ_317F8_EC
	A2 = (int32_t)A2 >> 23;
	ZZ_CLOCKCYCLES(19,0x80049614);
	goto ZZ_49614;
ZZ_317F8_EC:
	V0 = 0x1E;
	EMU_Write16(GP + 252,V0); //+ 0xFC
	V0 = 0x4;
	EMU_Write32(GP + 256,S0); //+ 0x100
	EMU_Write32(GP + 708,V0); //+ 0x2C4
	ZZ_CLOCKCYCLES(7,0x80031924);
	goto ZZ_317F8_12C;
ZZ_317F8_108:
	V1 = EMU_ReadU32(GP + 708); //+ 0x2C4
	V0 = (int32_t)V1 < 3;
	ZZ_CLOCKCYCLES(3,0x8003190C);
ZZ_317F8_114:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80031924);
		goto ZZ_317F8_12C;
	}
	if ((int32_t)V1 <= 0)
	{
		ZZ_CLOCKCYCLES(4,0x80031924);
		goto ZZ_317F8_12C;
	}
	RA = 0x80031924; //ZZ_317F8_12C
	A0 = S0;
	ZZ_CLOCKCYCLES(6,0x800314C4);
	goto ZZ_314C4;
ZZ_317F8_12C:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80030D4C,ZZ_30CC0_8C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800317F8,0x80031840,ZZ_317F8);
ZZ_MARK_TARGET(0x80031840,0x80031848,ZZ_317F8_48);
ZZ_MARK_TARGET(0x80031848,0x80031884,ZZ_317F8_50);
ZZ_MARK_TARGET(0x80031884,0x80031898,ZZ_317F8_8C);
ZZ_MARK_TARGET(0x80031898,0x800318E4,ZZ_317F8_A0);
ZZ_MARK_TARGET(0x800318E4,0x80031900,ZZ_317F8_EC);
ZZ_MARK_TARGET(0x80031900,0x8003190C,ZZ_317F8_108);
ZZ_MARK_TARGET(0x8003190C,0x80031924,ZZ_317F8_114);
ZZ_MARK_TARGET(0x80031924,0x80031938,ZZ_317F8_12C);
