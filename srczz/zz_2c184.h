#ifdef ZZ_INCLUDE_CODE
ZZ_2C184:
	SP -= 80;
	EMU_Write32(SP + 64,S2); //+ 0x40
	S2 = A1;
	EMU_Write32(SP + 56,S0); //+ 0x38
	S0 = A3;
	A3 = 0x51EB0000;
	EMU_Write32(SP + 72,RA); //+ 0x48
	EMU_Write32(SP + 68,S3); //+ 0x44
	EMU_Write32(SP + 60,S1); //+ 0x3C
	EMU_Write32(S2 + 4172,R0); //+ 0x104C
	A1 = EMU_ReadU32(S0);
	A3 |= 0x851F;
	if ((int32_t)A1 >= 0)
	{
		ZZ_CLOCKCYCLES(14,0x8002C1C0);
		goto ZZ_2C184_3C;
	}
	A1 = -A1;
	ZZ_CLOCKCYCLES(15,0x8002C1C0);
ZZ_2C184_3C:
	EMU_SMultiply(A1,A3);
	S1 = A2;
	V1 = 0x1B4E0000;
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	A2 = HI;
	V1 |= 0x81B5;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(8,0x8002C1E4);
		goto ZZ_2C184_60;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(9,0x8002C1E4);
ZZ_2C184_60:
	EMU_SMultiply(V0,V1);
	S3 = A0;
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	A0 = HI;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8002C200);
		goto ZZ_2C184_7C;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(7,0x8002C200);
ZZ_2C184_7C:
	EMU_SMultiply(V1,A3);
	A1 = (int32_t)A1 >> 31;
	A2 = (int32_t)A2 >> 13;
	A2 = A2 - A1;
	V0 = (int32_t)V0 >> 31;
	A0 = (int32_t)A0 >> 14;
	A0 = A0 - V0;
	V1 = (int32_t)V1 >> 31;
	V0 = HI;
	V0 = (int32_t)V0 >> 13;
	V1 = V0 - V1;
	V0 = (int32_t)A0 < (int32_t)A2;
	if (!V0)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(14,0x8002C24C);
		goto ZZ_2C184_C8;
	}
	A1 = V1;
	V0 = (int32_t)A1 < (int32_t)A2;
	if (!V0)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(17,0x8002C260);
		goto ZZ_2C184_DC;
	}
	A1 += 1;
	A1 = A2;
	ZZ_CLOCKCYCLES(19,0x8002C25C);
	goto ZZ_2C184_D8;
ZZ_2C184_C8:
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(3,0x8002C260);
		goto ZZ_2C184_DC;
	}
	A1 += 1;
	A1 = A0;
	ZZ_CLOCKCYCLES(4,0x8002C25C);
ZZ_2C184_D8:
	A1 += 1;
	ZZ_CLOCKCYCLES(1,0x8002C260);
ZZ_2C184_DC:
	A2 = R0;
	A3 = SP + 24;
	A0 = S0;
	ZZ_CLOCKCYCLES(3,0x8002C26C);
ZZ_2C184_E8:
	V0 = EMU_ReadU32(A0);
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(5,0x8002C284);
		goto ZZ_2C184_100;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(6,0x8002C284);
ZZ_2C184_100:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002C29C);
		goto ZZ_2C184_118;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002C29C);
		goto ZZ_2C184_118;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002C29C);
ZZ_2C184_118:
	V0 = LO;
	A0 += 4;
	A2 += 1;
	EMU_Write32(A3,V0);
	V0 = (int32_t)A2 < 3;
	if (V0)
	{
		A3 += 4;
		ZZ_CLOCKCYCLES(7,0x8002C26C);
		goto ZZ_2C184_E8;
	}
	A3 += 4;
	ZZ_CLOCKCYCLES(9,0x8002C368);
	goto ZZ_2C184_1E4;
ZZ_2C184_13C:
	A2 = R0;
	ZZ_CLOCKCYCLES(1,0x8002C2C4);
ZZ_2C184_140:
	A1 = SP + 24;
	A3 = S0;
	ZZ_CLOCKCYCLES(2,0x8002C2CC);
ZZ_2C184_148:
	V1 = EMU_ReadU32(A1);
	A0 = EMU_ReadU32(A3);
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(4,0x8002C2E0);
		goto ZZ_2C184_15C;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(5,0x8002C2E0);
ZZ_2C184_15C:
	if ((int32_t)A0 >= 0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(2,0x8002C2EC);
		goto ZZ_2C184_168;
	}
	V0 = A0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x8002C2EC);
ZZ_2C184_168:
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		A3 += 4;
		ZZ_CLOCKCYCLES(3,0x8002C2FC);
		goto ZZ_2C184_178;
	}
	A3 += 4;
	EMU_Write32(A1,A0);
	ZZ_CLOCKCYCLES(4,0x8002C2FC);
ZZ_2C184_178:
	A2 += 1;
	V0 = (int32_t)A2 < 3;
	if (V0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(4,0x8002C2CC);
		goto ZZ_2C184_148;
	}
	A1 += 4;
	V0 = SP + 40;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S3;
	A1 = S2;
	A2 = S1;
	RA = 0x8002C328; //ZZ_2C184_1A4
	A3 = SP + 24;
	ZZ_CLOCKCYCLES(11,0x8002D384);
	goto ZZ_2D384;
ZZ_2C184_1A4:
	A2 = R0;
	A1 = S0;
	A0 = SP + 24;
	A3 = S1;
	ZZ_CLOCKCYCLES(4,0x8002C338);
ZZ_2C184_1B4:
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	A2 += 1;
	EMU_Write32(A3,V0);
	V1 = EMU_ReadU32(A0);
	A0 += 4;
	V0 = EMU_ReadU32(A1);
	A3 += 4;
	V0 = V0 - V1;
	EMU_Write32(A1,V0);
	V0 = (int32_t)A2 < 3;
	if (V0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(12,0x8002C338);
		goto ZZ_2C184_1B4;
	}
	A1 += 4;
	ZZ_CLOCKCYCLES(12,0x8002C368);
ZZ_2C184_1E4:
	V0 = EMU_ReadU32(S0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002C2C0);
		goto ZZ_2C184_13C;
	}
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002C2C0);
		goto ZZ_2C184_13C;
	}
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	if (V0)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(12,0x8002C2C4);
		goto ZZ_2C184_140;
	}
	A2 = R0;
	RA = EMU_ReadU32(SP + 72); //+ 0x48
	S3 = EMU_ReadU32(SP + 68); //+ 0x44
	S2 = EMU_ReadU32(SP + 64); //+ 0x40
	S1 = EMU_ReadU32(SP + 60); //+ 0x3C
	S0 = EMU_ReadU32(SP + 56); //+ 0x38
	SP += 80;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(20);
	ZZ_JUMPREGISTER(0x8002BFE0,ZZ_2BE8C_154);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002C184,0x8002C1C0,ZZ_2C184);
ZZ_MARK_TARGET(0x8002C1C0,0x8002C1E4,ZZ_2C184_3C);
ZZ_MARK_TARGET(0x8002C1E4,0x8002C200,ZZ_2C184_60);
ZZ_MARK_TARGET(0x8002C200,0x8002C24C,ZZ_2C184_7C);
ZZ_MARK_TARGET(0x8002C24C,0x8002C25C,ZZ_2C184_C8);
ZZ_MARK_TARGET(0x8002C25C,0x8002C260,ZZ_2C184_D8);
ZZ_MARK_TARGET(0x8002C260,0x8002C26C,ZZ_2C184_DC);
ZZ_MARK_TARGET(0x8002C26C,0x8002C284,ZZ_2C184_E8);
ZZ_MARK_TARGET(0x8002C284,0x8002C29C,ZZ_2C184_100);
ZZ_MARK_TARGET(0x8002C29C,0x8002C2C0,ZZ_2C184_118);
ZZ_MARK_TARGET(0x8002C2C0,0x8002C2C4,ZZ_2C184_13C);
ZZ_MARK_TARGET(0x8002C2C4,0x8002C2CC,ZZ_2C184_140);
ZZ_MARK_TARGET(0x8002C2CC,0x8002C2E0,ZZ_2C184_148);
ZZ_MARK_TARGET(0x8002C2E0,0x8002C2EC,ZZ_2C184_15C);
ZZ_MARK_TARGET(0x8002C2EC,0x8002C2FC,ZZ_2C184_168);
ZZ_MARK_TARGET(0x8002C2FC,0x8002C328,ZZ_2C184_178);
ZZ_MARK_TARGET(0x8002C328,0x8002C338,ZZ_2C184_1A4);
ZZ_MARK_TARGET(0x8002C338,0x8002C368,ZZ_2C184_1B4);
ZZ_MARK_TARGET(0x8002C368,0x8002C3B8,ZZ_2C184_1E4);
