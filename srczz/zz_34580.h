#ifdef ZZ_INCLUDE_CODE
ZZ_34580:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003458C);
		goto ZZ_34580_C;
	}
	A0 = -A0;
	ZZ_CLOCKCYCLES(3,0x8003458C);
ZZ_34580_C:
	if ((int32_t)A1 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x80034598);
		goto ZZ_34580_18;
	}
	A1 = -A1;
	ZZ_CLOCKCYCLES(3,0x80034598);
ZZ_34580_18:
	if ((int32_t)A2 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x800345A4);
		goto ZZ_34580_24;
	}
	A2 = -A2;
	ZZ_CLOCKCYCLES(3,0x800345A4);
ZZ_34580_24:
	EMU_SMultiply(A0,A0);
	A3 = LO;
	T0 = HI;
	EMU_SMultiply(A1,A1);
	T1 = LO;
	T2 = HI;
	EMU_SMultiply(A2,A2);
	A0 = LO;
	A1 = HI;
	V0 = A3 + T1;
	V1 = V0 < A3;
	V1 += T0;
	V1 += T2;
	A2 = V0 + A0;
	A3 = A2 < V0;
	A3 += V1;
	A3 += A1;
	A2 >>= 20;
	A3 <<= 12;
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = A3 | A2;
	ZZ_CLOCKCYCLES_JR(25);
	ZZ_JUMPREGISTER(0x80030114,ZZ_30078_9C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034580,0x8003458C,ZZ_34580);
ZZ_MARK_TARGET(0x8003458C,0x80034598,ZZ_34580_C);
ZZ_MARK_TARGET(0x80034598,0x800345A4,ZZ_34580_18);
ZZ_MARK_TARGET(0x800345A4,0x80034608,ZZ_34580_24);
