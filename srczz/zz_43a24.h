#ifdef ZZ_INCLUDE_CODE
ZZ_43A24:
	V1 = 0x1B4E0000;
	V1 |= 0x81B5;
	A0 += 150;
	EMU_SMultiply(A0,V1);
	V0 = A1;
	A3 = 0x66660000;
	A3 |= 0x6667;
	V1 = (int32_t)A0 >> 31;
	A2 = HI;
	A2 = (int32_t)A2 >> 3;
	A2 = A2 - V1;
	A1 = A2 << 2;
	A1 += A2;
	V1 = A1 << 4;
	V1 = V1 - A1;
	A0 = A0 - V1;
	EMU_SMultiply(A0,A3);
	T0 = HI;
	V1 = 0x88880000;
	V1 |= 0x8889;
	EMU_SMultiply(A2,V1);
	V1 = (int32_t)A2 >> 31;
	T1 = HI;
	T1 += A2;
	T1 = (int32_t)T1 >> 5;
	T1 = T1 - V1;
	V1 = T1 << 4;
	V1 = V1 - T1;
	V1 <<= 2;
	A2 = A2 - V1;
	EMU_SMultiply(A2,A3);
	T0 = (int32_t)T0 >> 2;
	V1 = (int32_t)A0 >> 31;
	T0 = T0 - V1;
	V1 = T0 << 2;
	V1 += T0;
	V1 <<= 1;
	A1 = HI;
	A0 = A0 - V1;
	V1 = (int32_t)A2 >> 31;
	EMU_SMultiply(T1,A3);
	A3 = T0 << 4;
	A3 += A0;
	A1 = (int32_t)A1 >> 2;
	A1 = A1 - V1;
	A0 = A1 << 4;
	V1 = A1 << 2;
	V1 += A1;
	V1 <<= 1;
	A2 = A2 - V1;
	A0 += A2;
	EMU_Write8(V0 + 1,A0); //+ 0x1
	A0 = (int32_t)T1 >> 31;
	EMU_Write8(V0 + 2,A3); //+ 0x2
	V1 = HI;
	V1 = (int32_t)V1 >> 2;
	V1 = V1 - A0;
	A1 = V1 << 4;
	A0 = V1 << 2;
	A0 += V1;
	A0 <<= 1;
	T1 = T1 - A0;
	A1 += T1;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write8(V0,A1);
	ZZ_CLOCKCYCLES_JR(65);
	ZZ_JUMPREGISTER(0x80015C54,ZZ_15B58_FC);
	ZZ_JUMPREGISTER(0x8002F900,ZZ_2F8C4_3C);
	ZZ_JUMPREGISTER(0x800137FC,ZZ_13798_64);
	ZZ_JUMPREGISTER(0x8002F980,ZZ_2F8C4_BC);
	ZZ_JUMPREGISTER(0x80013F3C,ZZ_13D48_1F4);
	ZZ_JUMPREGISTER(0x8002FAC8,ZZ_2F8C4_204);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80043A24,0x80043B28,ZZ_43A24);
