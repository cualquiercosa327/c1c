#ifdef ZZ_INCLUDE_CODE
ZZ_3EFCC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 18936); //+ 0x49F8
	SP -= 48;
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 36,S5); //+ 0x24
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(V0);
	V0 >>= 24;
	S1 = V0 & 0x7F;
	if (!S1)
	{
		ZZ_CLOCKCYCLES(16,0x8003F0A8);
		goto ZZ_3EFCC_DC;
	}
	S4 = 0x1;
	S3 = 0xFF0000;
	S3 |= 0xFFFF;
	S5 = 0x80050000;
	S5 += 18940;
	ZZ_CLOCKCYCLES(21,0x8003F020);
ZZ_3EFCC_54:
	if (!S1)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x8003F084);
		goto ZZ_3EFCC_B8;
	}
	S0 = R0;
	S2 = S5;
	ZZ_CLOCKCYCLES(3,0x8003F02C);
ZZ_3EFCC_60:
	V0 = (int32_t)S0 < 7;
	if (!V0)
	{
		V0 = S1 & 0x1;
		ZZ_CLOCKCYCLES(3,0x8003F084);
		goto ZZ_3EFCC_B8;
	}
	V0 = S1 & 0x1;
	if (!V0)
	{
		V0 = S0 + 24;
		ZZ_CLOCKCYCLES(5,0x8003F074);
		goto ZZ_3EFCC_A8;
	}
	V0 = S0 + 24;
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 18936); //+ 0x49F8
	V0 = S4 << V0;
	V1 = EMU_ReadU32(A0);
	V0 |= S3;
	V0 &= V1;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(S2);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x8003F074);
		goto ZZ_3EFCC_A8;
	}
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8003F074; //ZZ_3EFCC_A8
	ZZ_CLOCKCYCLES_JR(18);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8003F06C)
	ZZ_JUMPREGISTER_END();
ZZ_3EFCC_A8:
	S2 += 4;
	S1 >>= 1;
	if (S1)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(4,0x8003F02C);
		goto ZZ_3EFCC_60;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(4,0x8003F084);
ZZ_3EFCC_B8:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 18936); //+ 0x49F8
	V0 = EMU_ReadU32(V0);
	V0 >>= 24;
	S1 = V0 & 0x7F;
	if (S1)
	{
		ZZ_CLOCKCYCLES(9,0x8003F020);
		goto ZZ_3EFCC_54;
	}
	ZZ_CLOCKCYCLES(9,0x8003F0A8);
ZZ_3EFCC_DC:
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 18936); //+ 0x49F8
	V0 = EMU_ReadU32(A1);
	V1 = 0xFF000000;
	V0 &= V1;
	V1 = 0x80000000;
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(9,0x8003F0E0);
		goto ZZ_3EFCC_114;
	}
	V0 = EMU_ReadU32(A1);
	V0 &= 0x8000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x8003F128);
		goto ZZ_3EFCC_15C;
	}
	ZZ_CLOCKCYCLES(14,0x8003F0E0);
ZZ_3EFCC_114:
	A0 = 0x80010000;
	A0 += 4204;
	A1 = EMU_ReadU32(A1);
	RA = 0x8003F0F4; //ZZ_3EFCC_128
	S0 = R0;
	ZZ_CLOCKCYCLES(5,0x8003D730);
	goto ZZ_3D730;
ZZ_3EFCC_128:
	A0 = 0x80010000;
	A0 += 4232;
	A1 = S0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 18972); //+ 0x4A1C
	V1 = S0 << 4;
	V1 += V0;
	A2 = EMU_ReadU32(V1);
	RA = 0x8003F11C; //ZZ_3EFCC_150
	S0 += 1;
	ZZ_CLOCKCYCLES(10,0x8003D730);
	goto ZZ_3D730;
ZZ_3EFCC_150:
	V0 = (int32_t)S0 < 7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8003F0F4);
		goto ZZ_3EFCC_128;
	}
	ZZ_CLOCKCYCLES(3,0x8003F128);
ZZ_3EFCC_15C:
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003EFCC,0x8003F020,ZZ_3EFCC);
ZZ_MARK_TARGET(0x8003F020,0x8003F02C,ZZ_3EFCC_54);
ZZ_MARK_TARGET(0x8003F02C,0x8003F074,ZZ_3EFCC_60);
ZZ_MARK_TARGET(0x8003F074,0x8003F084,ZZ_3EFCC_A8);
ZZ_MARK_TARGET(0x8003F084,0x8003F0A8,ZZ_3EFCC_B8);
ZZ_MARK_TARGET(0x8003F0A8,0x8003F0E0,ZZ_3EFCC_DC);
ZZ_MARK_TARGET(0x8003F0E0,0x8003F0F4,ZZ_3EFCC_114);
ZZ_MARK_TARGET(0x8003F0F4,0x8003F11C,ZZ_3EFCC_128);
ZZ_MARK_TARGET(0x8003F11C,0x8003F128,ZZ_3EFCC_150);
ZZ_MARK_TARGET(0x8003F128,0x8003F150,ZZ_3EFCC_15C);
