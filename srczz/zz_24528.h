#ifdef ZZ_INCLUDE_CODE
ZZ_24528:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 31740); //+ 0xFFFF8404
	V1 = EMU_ReadU32(V0 + 132); //+ 0x84
	V0 = V1 < 103;
	if (V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(8,0x80024550);
		goto ZZ_24528_28;
	}
	EMU_SMultiply(A2,V1);
	V1 = 0x66;
	EMU_SMultiply(A2,V1);
	ZZ_CLOCKCYCLES(10,0x80024550);
ZZ_24528_28:
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		A0 &= 0xFFF;
		ZZ_CLOCKCYCLES(3,0x80024560);
		goto ZZ_24528_38;
	}
	A0 &= 0xFFF;
	V0 += 1023;
	ZZ_CLOCKCYCLES(4,0x80024560);
ZZ_24528_38:
	A1 &= 0xFFF;
	V1 = A1 - A0;
	T0 = (int32_t)V0 >> 10;
	if ((int32_t)V1 >= 0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(5,0x80024578);
		goto ZZ_24528_50;
	}
	V0 = V1;
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x80024578);
ZZ_24528_50:
	V0 = (int32_t)V0 < 2049;
	if (V0)
	{
		A2 = V1;
		ZZ_CLOCKCYCLES(3,0x80024590);
		goto ZZ_24528_68;
	}
	A2 = V1;
	if ((int32_t)V1 > 0)
	{
		A2 = V1 - 4096;
		ZZ_CLOCKCYCLES(5,0x80024590);
		goto ZZ_24528_68;
	}
	A2 = V1 - 4096;
	A2 = V1 + 4096;
	ZZ_CLOCKCYCLES(6,0x80024590);
ZZ_24528_68:
	if (!A2)
	{
		ZZ_CLOCKCYCLES(2,0x800245C8);
		goto ZZ_24528_A0;
	}
	if ((int32_t)A2 >= 0)
	{
		V1 = A2;
		ZZ_CLOCKCYCLES(4,0x800245A4);
		goto ZZ_24528_7C;
	}
	V1 = A2;
	V1 = -V1;
	ZZ_CLOCKCYCLES(5,0x800245A4);
ZZ_24528_7C:
	if ((int32_t)T0 >= 0)
	{
		V0 = T0;
		ZZ_CLOCKCYCLES(2,0x800245B0);
		goto ZZ_24528_88;
	}
	V0 = T0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x800245B0);
ZZ_24528_88:
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		V0 = A0 + T0;
		ZZ_CLOCKCYCLES(3,0x800245E4);
		goto ZZ_24528_BC;
	}
	V0 = A0 + T0;
	V0 = T0 ^ A2;
	if ((int32_t)V0 < 0)
	{
		V0 = A0 + T0;
		ZZ_CLOCKCYCLES(6,0x800245E4);
		goto ZZ_24528_BC;
	}
	V0 = A0 + T0;
	ZZ_CLOCKCYCLES(6,0x800245C8);
ZZ_24528_A0:
	if (!A3)
	{
		A0 = A1;
		ZZ_CLOCKCYCLES(2,0x800245E8);
		goto ZZ_24528_C0;
	}
	A0 = A1;
	V0 = EMU_ReadU32(A3 + 200); //+ 0xC8
	V0 |= 0x800;
	EMU_Write32(A3 + 200,V0); //+ 0xC8
	ZZ_CLOCKCYCLES(7,0x800245E8);
	goto ZZ_24528_C0;
ZZ_24528_BC:
	A0 = V0 & 0xFFF;
	ZZ_CLOCKCYCLES(1,0x800245E8);
ZZ_24528_C0:
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = A0;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8001F738,ZZ_1F30C_42C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80024528,0x80024550,ZZ_24528);
ZZ_MARK_TARGET(0x80024550,0x80024560,ZZ_24528_28);
ZZ_MARK_TARGET(0x80024560,0x80024578,ZZ_24528_38);
ZZ_MARK_TARGET(0x80024578,0x80024590,ZZ_24528_50);
ZZ_MARK_TARGET(0x80024590,0x800245A4,ZZ_24528_68);
ZZ_MARK_TARGET(0x800245A4,0x800245B0,ZZ_24528_7C);
ZZ_MARK_TARGET(0x800245B0,0x800245C8,ZZ_24528_88);
ZZ_MARK_TARGET(0x800245C8,0x800245E4,ZZ_24528_A0);
ZZ_MARK_TARGET(0x800245E4,0x800245E8,ZZ_24528_BC);
ZZ_MARK_TARGET(0x800245E8,0x800245F0,ZZ_24528_C0);
