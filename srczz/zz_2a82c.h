#ifdef ZZ_INCLUDE_CODE
ZZ_2A82C:
	SP -= 328;
	EMU_Write32(SP + 308,S5); //+ 0x134
	S5 = A0;
	EMU_Write32(SP + 304,S4); //+ 0x130
	S4 = R0;
	T1 = 0x7FFF0000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31008); //+ 0x7920
	T1 |= 0xFFFF;
	EMU_Write32(SP + 316,S7); //+ 0x13C
	S7 = R0;
	EMU_Write32(SP + 324,RA); //+ 0x144
	EMU_Write32(SP + 320,FP); //+ 0x140
	EMU_Write32(SP + 312,S6); //+ 0x138
	EMU_Write32(SP + 300,S3); //+ 0x12C
	EMU_Write32(SP + 296,S2); //+ 0x128
	EMU_Write32(SP + 292,S1); //+ 0x124
	EMU_Write32(SP + 288,S0); //+ 0x120
	EMU_Write32(SP + 248,T1); //+ 0xF8
	T1 = EMU_ReadU32(S5 + 132); //+ 0x84
	V0 = EMU_ReadU16(V0 + 30); //+ 0x1E
	V1 = (int32_t)V1 >> 8;
	V0 >>= 1;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		EMU_Write32(SP + 256,T1); //+ 0x100
		ZZ_CLOCKCYCLES(28,0x8002A8A8);
		goto ZZ_2A82C_7C;
	}
	EMU_Write32(SP + 256,T1); //+ 0x100
	V0 = (int32_t)V1 < 50;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(31,0x8002A8AC);
		goto ZZ_2A82C_80;
	}
	ZZ_CLOCKCYCLES(31,0x8002A8A8);
ZZ_2A82C_7C:
	S7 = 0x1;
	ZZ_CLOCKCYCLES(1,0x8002A8AC);
ZZ_2A82C_80:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31008); //+ 0x7920
	A0 = EMU_ReadU16(V0 + 30); //+ 0x1E
	V1 = (int32_t)V1 >> 8;
	V0 = A0 >> 1;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		V0 = A0 - V1;
		ZZ_CLOCKCYCLES(10,0x8002A8E0);
		goto ZZ_2A82C_B4;
	}
	V0 = A0 - V1;
	V0 = (int32_t)V0 < 50;
	if (!V0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(13,0x8002A8E8);
		goto ZZ_2A82C_BC;
	}
	S1 = R0;
	ZZ_CLOCKCYCLES(13,0x8002A8E0);
ZZ_2A82C_B4:
	S7 |= 0x2;
	S1 = R0;
	ZZ_CLOCKCYCLES(2,0x8002A8E8);
ZZ_2A82C_BC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	S2 = R0;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	S6 = 0x1;
	A0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 = A0 & 0x80;
	if (V0)
	{
		FP = 0x1;
		ZZ_CLOCKCYCLES(10,0x8002A928);
		goto ZZ_2A82C_FC;
	}
	FP = 0x1;
	V0 = 0x30000;
	V1 = EMU_ReadU32(GP + 172); //+ 0xAC
	V0 |= 0x1FFF;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x8002A93C);
		goto ZZ_2A82C_110;
	}
	ZZ_CLOCKCYCLES(16,0x8002A928);
ZZ_2A82C_FC:
	V0 = A0 & 0x8000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002A954);
		goto ZZ_2A82C_128;
	}
	ZZ_CLOCKCYCLES(5,0x8002A968);
	goto ZZ_2A82C_13C;
ZZ_2A82C_110:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 6368); //+ 0xFFFFE720
	V0 = V1 & 0x1000;
	if (!V0)
	{
		V0 = V1 & 0x4000;
		ZZ_CLOCKCYCLES(6,0x8002A960);
		goto ZZ_2A82C_134;
	}
	V0 = V1 & 0x4000;
	ZZ_CLOCKCYCLES(6,0x8002A954);
ZZ_2A82C_128:
	EMU_Write32(GP + 176,R0); //+ 0xB0
	ZZ_CLOCKCYCLES(3,0x8002A96C);
	goto ZZ_2A82C_140;
ZZ_2A82C_134:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002A96C);
		goto ZZ_2A82C_140;
	}
	ZZ_CLOCKCYCLES(2,0x8002A968);
ZZ_2A82C_13C:
	EMU_Write32(GP + 176,FP); //+ 0xB0
	ZZ_CLOCKCYCLES(1,0x8002A96C);
ZZ_2A82C_140:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 6368); //+ 0xFFFFE720
	V0 = V1 & 0x8000;
	if (!V0)
	{
		V0 = V1 & 0x2000;
		ZZ_CLOCKCYCLES(6,0x8002A990);
		goto ZZ_2A82C_164;
	}
	V0 = V1 & 0x2000;
	EMU_Write32(GP + 180,R0); //+ 0xB4
	ZZ_CLOCKCYCLES(9,0x8002A99C);
	goto ZZ_2A82C_170;
ZZ_2A82C_164:
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8002A99C);
		goto ZZ_2A82C_170;
	}
	V0 = 0x1;
	EMU_Write32(GP + 180,V0); //+ 0xB4
	ZZ_CLOCKCYCLES(3,0x8002A99C);
ZZ_2A82C_170:
	V0 = EMU_ReadU32(GP + 176); //+ 0xB0
	if (!V0)
	{
		V1 = 0xFFFE0000;
		ZZ_CLOCKCYCLES(4,0x8002A9FC);
		goto ZZ_2A82C_1D0;
	}
	V1 = 0xFFFE0000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x3;
	if (V1 != V0)
	{
		V1 = 0x10000;
		ZZ_CLOCKCYCLES(11,0x8002A9E4);
		goto ZZ_2A82C_1B8;
	}
	V1 = 0x10000;
	V1 = 0x40000;
	V0 = EMU_ReadU32(GP + 168); //+ 0xA8
	V1 |= 0xB000;
	V0 += 12800;
	EMU_Write32(GP + 168,V0); //+ 0xA8
	V0 = (int32_t)V1 < (int32_t)V0;
	ZZ_CLOCKCYCLES(18,0x8002AA10);
	goto ZZ_2A82C_1E4;
ZZ_2A82C_1B8:
	V0 = EMU_ReadU32(GP + 168); //+ 0xA8
	V1 |= 0x2C00;
	V0 += 12800;
	EMU_Write32(GP + 168,V0); //+ 0xA8
	V0 = (int32_t)V1 < (int32_t)V0;
	ZZ_CLOCKCYCLES(6,0x8002AA10);
	goto ZZ_2A82C_1E4;
ZZ_2A82C_1D0:
	V0 = EMU_ReadU32(GP + 168); //+ 0xA8
	V1 |= 0xD400;
	V0 -= 12800;
	EMU_Write32(GP + 168,V0); //+ 0xA8
	V0 = (int32_t)V0 < (int32_t)V1;
	ZZ_CLOCKCYCLES(5,0x8002AA10);
ZZ_2A82C_1E4:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AA1C);
		goto ZZ_2A82C_1F0;
	}
	EMU_Write32(GP + 168,V1); //+ 0xA8
	ZZ_CLOCKCYCLES(3,0x8002AA1C);
ZZ_2A82C_1F0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 &= 0x4000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002AB3C);
		goto ZZ_2A82C_310;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V1 = EMU_ReadS16(V0 + 44); //+ 0x2C
	if (!V1)
	{
		ZZ_CLOCKCYCLES(17,0x8002AB40);
		goto ZZ_2A82C_314;
	}
	V0 = EMU_ReadU32(GP + 180); //+ 0xB4
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x8002AAD0);
		goto ZZ_2A82C_2A4;
	}
	V0 = EMU_ReadU32(GP + 188); //+ 0xBC
	if ((int32_t)V1 <= 0)
	{
		A0 = V0 + 25600;
		ZZ_CLOCKCYCLES(24,0x8002AA98);
		goto ZZ_2A82C_26C;
	}
	A0 = V0 + 25600;
	V0 = 0x40000;
	V0 |= 0xB000;
	V0 = (int32_t)V0 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(29,0x8002AAC4);
		goto ZZ_2A82C_298;
	}
	ZZ_CLOCKCYCLES(31,0x8002AAA0);
	goto ZZ_2A82C_274;
ZZ_2A82C_26C:
	if ((int32_t)A0 <= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AAC4);
		goto ZZ_2A82C_298;
	}
	ZZ_CLOCKCYCLES(2,0x8002AAA0);
ZZ_2A82C_274:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V1 = 0x40000;
	V0 = EMU_ReadS16(V0 + 44); //+ 0x2C
	V1 |= 0xB000;
	V0 = (int32_t)R0 < (int32_t)V0;
	V0 = -V0;
	V0 &= V1;
	ZZ_CLOCKCYCLES(9,0x8002AB30);
	goto ZZ_2A82C_304;
ZZ_2A82C_298:
	V0 = EMU_ReadU32(GP + 188); //+ 0xBC
	V0 += 25600;
	ZZ_CLOCKCYCLES(3,0x8002AB30);
	goto ZZ_2A82C_304;
ZZ_2A82C_2A4:
	V0 = EMU_ReadU32(GP + 188); //+ 0xBC
	if ((int32_t)V1 >= 0)
	{
		A0 = V0 - 25600;
		ZZ_CLOCKCYCLES(3,0x8002AAF8);
		goto ZZ_2A82C_2CC;
	}
	A0 = V0 - 25600;
	V0 = 0xFFFB0000;
	V0 |= 0x5000;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002AB24);
		goto ZZ_2A82C_2F8;
	}
	ZZ_CLOCKCYCLES(10,0x8002AB00);
	goto ZZ_2A82C_2D4;
ZZ_2A82C_2CC:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AB24);
		goto ZZ_2A82C_2F8;
	}
	ZZ_CLOCKCYCLES(2,0x8002AB00);
ZZ_2A82C_2D4:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V1 = 0xFFFB0000;
	V0 = EMU_ReadU16(V0 + 44); //+ 0x2C
	V1 |= 0x5000;
	V0 <<= 16;
	V0 = (int32_t)V0 >> 31;
	V0 &= V1;
	ZZ_CLOCKCYCLES(9,0x8002AB30);
	goto ZZ_2A82C_304;
ZZ_2A82C_2F8:
	V0 = EMU_ReadU32(GP + 188); //+ 0xBC
	V0 -= 25600;
	ZZ_CLOCKCYCLES(3,0x8002AB30);
ZZ_2A82C_304:
	EMU_Write32(GP + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(3,0x8002AB40);
	goto ZZ_2A82C_314;
ZZ_2A82C_310:
	EMU_Write32(GP + 188,R0); //+ 0xBC
	ZZ_CLOCKCYCLES(1,0x8002AB40);
ZZ_2A82C_314:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	if (!V0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(7,0x8002AC28);
		goto ZZ_2A82C_3FC;
	}
	S3 = R0;
	S0 = S3 << 2;
	ZZ_CLOCKCYCLES(8,0x8002AB60);
ZZ_2A82C_334:
	V1 += S0;
	V0 = EMU_ReadU8(V1 + 12); //+ 0xC
	V0 &= S7;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002AC00);
		goto ZZ_2A82C_3D4;
	}
	A0 = EMU_ReadU8(V1 + 13); //+ 0xD
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A0 <<= 2;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 += 532;
	RA = 0x8002AB98; //ZZ_2A82C_36C
	A0 += V0;
	ZZ_CLOCKCYCLES(14,0x80015A98);
	goto ZZ_15A98;
ZZ_2A82C_36C:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 += S0;
	V1 = EMU_ReadU8(V1 + 14); //+ 0xE
	A0 = EMU_ReadU32(A0 + 516); //+ 0x204
	V1 += A0;
	V1 <<= 2;
	V1 += V0;
	V1 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 = EMU_ReadS16(V1 + 46); //+ 0x2E
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x8002ABE4);
		goto ZZ_2A82C_3B8;
	}
	V0 = EMU_ReadS16(V1 + 36); //+ 0x24
	S2 = V0 << 8;
	ZZ_CLOCKCYCLES(19,0x8002ABE4);
ZZ_2A82C_3B8:
	V0 = EMU_ReadS16(V1 + 48); //+ 0x30
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002AC00);
		goto ZZ_2A82C_3D4;
	}
	V0 = EMU_ReadS16(V1 + 36); //+ 0x24
	S1 = V0 << 8;
	ZZ_CLOCKCYCLES(7,0x8002AC00);
ZZ_2A82C_3D4:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	S3 += 1;
	V0 = S3 < V0;
	if (V0)
	{
		S0 = S3 << 2;
		ZZ_CLOCKCYCLES(8,0x8002AB60);
		goto ZZ_2A82C_334;
	}
	S0 = S3 << 2;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	ZZ_CLOCKCYCLES(10,0x8002AC28);
ZZ_2A82C_3FC:
	V0 = EMU_ReadS16(V1 + 46); //+ 0x2E
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002AC48);
		goto ZZ_2A82C_41C;
	}
	V0 = EMU_ReadS16(V1 + 36); //+ 0x24
	FP = R0;
	S2 = V0 << 8;
	ZZ_CLOCKCYCLES(8,0x8002AC48);
ZZ_2A82C_41C:
	V0 = EMU_ReadS16(V1 + 48); //+ 0x30
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002AC64);
		goto ZZ_2A82C_438;
	}
	V0 = EMU_ReadS16(V1 + 36); //+ 0x24
	S6 = R0;
	S1 = V0 << 8;
	ZZ_CLOCKCYCLES(7,0x8002AC64);
ZZ_2A82C_438:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x8002ACC4);
		goto ZZ_2A82C_498;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31008); //+ 0x7920
	A0 = (int32_t)V0 >> 8;
	V0 = (int32_t)A0 < 11;
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x8002ACC4);
		goto ZZ_2A82C_498;
	}
	V0 = EMU_ReadU16(V1 + 30); //+ 0x1E
	V0 -= 10;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(15,0x8002ACC4);
		goto ZZ_2A82C_498;
	}
	if (!S6)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(17,0x8002ACB4);
		goto ZZ_2A82C_488;
	}
	A1 = S1;
	EMU_Write32(GP + 172,S1); //+ 0xAC
	ZZ_CLOCKCYCLES(20,0x8002ACC4);
	goto ZZ_2A82C_498;
ZZ_2A82C_488:
	A0 = EMU_ReadU32(GP + 172); //+ 0xAC
	RA = 0x8002ACC0; //ZZ_2A82C_494
	A2 = 0x1900;
	ZZ_CLOCKCYCLES(3,0x80024628);
	goto ZZ_24628;
ZZ_2A82C_494:
	EMU_Write32(GP + 172,V0); //+ 0xAC
	ZZ_CLOCKCYCLES(1,0x8002ACC4);
ZZ_2A82C_498:
	V0 = EMU_ReadU32(GP + 172); //+ 0xAC
	V1 = EMU_ReadU32(GP + 168); //+ 0xA8
	A0 = EMU_ReadU32(S5 + 320); //+ 0x140
	V0 += V1;
	if (!S2)
	{
		S6 = V0 + A0;
		ZZ_CLOCKCYCLES(6,0x8002AD00);
		goto ZZ_2A82C_4D4;
	}
	S6 = V0 + A0;
	if (!FP)
	{
		A1 = S2;
		ZZ_CLOCKCYCLES(8,0x8002ACF0);
		goto ZZ_2A82C_4C4;
	}
	A1 = S2;
	EMU_Write32(GP + 184,S2); //+ 0xB8
	V1 = SP + 24;
	ZZ_CLOCKCYCLES(11,0x8002AD04);
	goto ZZ_2A82C_4D8;
ZZ_2A82C_4C4:
	A0 = EMU_ReadU32(GP + 184); //+ 0xB8
	RA = 0x8002ACFC; //ZZ_2A82C_4D0
	A2 = 0x6400;
	ZZ_CLOCKCYCLES(3,0x80024628);
	goto ZZ_24628;
ZZ_2A82C_4D0:
	EMU_Write32(GP + 184,V0); //+ 0xB8
	ZZ_CLOCKCYCLES(1,0x8002AD00);
ZZ_2A82C_4D4:
	V1 = SP + 24;
	ZZ_CLOCKCYCLES(1,0x8002AD04);
ZZ_2A82C_4D8:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	A1 = EMU_ReadU32(GP + 188); //+ 0xBC
	T0 = EMU_ReadU32(GP + 184); //+ 0xB8
	A0 = EMU_ReadS16(V0 + 48); //+ 0x30
	V0 = S4 << 1;
	V0 += S4;
	V0 <<= 2;
	V0 += S4;
	V0 <<= 2;
	A2 = V1 + V0;
	EMU_Write32(A2 + 36,A1); //+ 0x24
	EMU_Write32(A2 + 44,T0); //+ 0x2C
	if (!A0)
	{
		EMU_Write32(A2 + 40,S6); //+ 0x28
		ZZ_CLOCKCYCLES(15,0x8002AD78);
		goto ZZ_2A82C_54C;
	}
	EMU_Write32(A2 + 40,S6); //+ 0x28
	V0 = EMU_ReadU32(S5 + 128); //+ 0x80
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31004); //+ 0x791C
	EMU_Write32(SP + 232,V0); //+ 0xE8
	V0 = EMU_ReadU32(S5 + 132); //+ 0x84
	A0 = SP + 232;
	EMU_Write32(SP + 236,V0); //+ 0xEC
	V0 = EMU_ReadU32(S5 + 136); //+ 0x88
	A3 = R0;
	EMU_Write32(SP + 240,V0); //+ 0xF0
	RA = 0x8002AD70; //ZZ_2A82C_544
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(27,0x8002A3EC);
	goto ZZ_2A3EC;
ZZ_2A82C_544:
	ZZ_CLOCKCYCLES(2,0x8002ADB4);
	goto ZZ_2A82C_588;
ZZ_2A82C_54C:
	V0 = EMU_ReadU32(S5 + 128); //+ 0x80
	A0 = SP + 232;
	V0 += A1;
	EMU_Write32(SP + 232,V0); //+ 0xE8
	V0 = EMU_ReadU32(S5 + 132); //+ 0x84
	A3 = R0;
	V0 += T0;
	EMU_Write32(SP + 236,V0); //+ 0xEC
	V0 = EMU_ReadU32(S5 + 136); //+ 0x88
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31004); //+ 0x791C
	V0 += S6;
	EMU_Write32(SP + 240,V0); //+ 0xF0
	RA = 0x8002ADB4; //ZZ_2A82C_588
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(15,0x8002A0C4);
	goto ZZ_2A0C4;
ZZ_2A82C_588:
	if (!V0)
	{
		V0 = S4 << 1;
		ZZ_CLOCKCYCLES(2,0x8002AE30);
		goto ZZ_2A82C_604;
	}
	V0 = S4 << 1;
	V0 += S4;
	V0 <<= 2;
	V0 += S4;
	V0 <<= 2;
	V1 = SP + 24;
	A0 = V1 + V0;
	V1 = 0x80050000;
	V1 += 31008;
	A2 = EMU_ReadU32(V1);
	A1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = A2 - A1;
	if ((int32_t)V0 >= 0)
	{
		A3 = A0;
		ZZ_CLOCKCYCLES(16,0x8002ADF8);
		goto ZZ_2A82C_5CC;
	}
	A3 = A0;
	V0 = A1 - A2;
	ZZ_CLOCKCYCLES(17,0x8002ADF8);
ZZ_2A82C_5CC:
	EMU_Write32(A0 + 20,V0); //+ 0x14
	V1 = EMU_ReadU32(V1);
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x8002AE24);
		goto ZZ_2A82C_5F8;
	}
	V0 = 0x1;
	EMU_Write32(A0 + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(9,0x8002AE2C);
	goto ZZ_2A82C_600;
ZZ_2A82C_5F0:
	S0 = V1;
	ZZ_CLOCKCYCLES(2,0x8002B1C4);
	goto ZZ_2A82C_998;
ZZ_2A82C_5F8:
	V0 = 0x2;
	EMU_Write32(A3 + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(2,0x8002AE2C);
ZZ_2A82C_600:
	S4 += 1;
	ZZ_CLOCKCYCLES(1,0x8002AE30);
ZZ_2A82C_604:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31004); //+ 0x791C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	if (!V0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(7,0x8002B13C);
		goto ZZ_2A82C_910;
	}
	S3 = R0;
	S2 = R0;
	V1 = SP + 24;
	V0 = S4 << 1;
	V0 += S4;
	V0 <<= 2;
	V0 += S4;
	V0 <<= 2;
	S0 = V0 + V1;
	ZZ_CLOCKCYCLES(15,0x8002AE6C);
ZZ_2A82C_640:
	A0 += S2;
	V0 = EMU_ReadU8(A0 + 15); //+ 0xF
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002AEA8);
		goto ZZ_2A82C_67C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3588); //+ 0xE04
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6544); //+ 0x1990
	V0 = V0 - V1;
	V0 = V0 < 16;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(15,0x8002B11C);
		goto ZZ_2A82C_8F0;
	}
	ZZ_CLOCKCYCLES(15,0x8002AEA8);
ZZ_2A82C_67C:
	V0 = EMU_ReadU8(A0 + 12); //+ 0xC
	V0 &= S7;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002B11C);
		goto ZZ_2A82C_8F0;
	}
	A0 = EMU_ReadU8(A0 + 13); //+ 0xD
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A0 <<= 2;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 += 532;
	RA = 0x8002AEDC; //ZZ_2A82C_6B0
	A0 += V0;
	ZZ_CLOCKCYCLES(13,0x80015A98);
	goto ZZ_15A98;
ZZ_2A82C_6B0:
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31004); //+ 0x791C
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = A1 + S2;
	V1 = EMU_ReadU8(V1 + 14); //+ 0xE
	A0 = EMU_ReadU32(A0 + 516); //+ 0x204
	V1 += A0;
	V1 <<= 2;
	V1 += V0;
	S1 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 = EMU_ReadS16(A1 + 44); //+ 0x2C
	V1 = EMU_ReadS16(S1 + 44); //+ 0x2C
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(15,0x8002AF1C);
		goto ZZ_2A82C_6F0;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(16,0x8002AF1C);
ZZ_2A82C_6F0:
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AF28);
		goto ZZ_2A82C_6FC;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(3,0x8002AF28);
ZZ_2A82C_6FC:
	if (V1 != V0)
	{
		T0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8002AF80);
		goto ZZ_2A82C_754;
	}
	T0 = 0x1;
	V1 = EMU_ReadS16(S1 + 46); //+ 0x2E
	V0 = EMU_ReadS16(A1 + 46); //+ 0x2E
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8002AF44);
		goto ZZ_2A82C_718;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(7,0x8002AF44);
ZZ_2A82C_718:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AF50);
		goto ZZ_2A82C_724;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x8002AF50);
ZZ_2A82C_724:
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AF80);
		goto ZZ_2A82C_754;
	}
	V1 = EMU_ReadS16(S1 + 48); //+ 0x30
	V0 = EMU_ReadS16(A1 + 48); //+ 0x30
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8002AF6C);
		goto ZZ_2A82C_740;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(7,0x8002AF6C);
ZZ_2A82C_740:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002AF78);
		goto ZZ_2A82C_74C;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(3,0x8002AF78);
ZZ_2A82C_74C:
	V1 ^= V0;
	T0 = R0 < V1;
	ZZ_CLOCKCYCLES(2,0x8002AF80);
ZZ_2A82C_754:
	A2 = EMU_ReadU32(GP + 188); //+ 0xBC
	V0 = EMU_ReadU32(GP + 184); //+ 0xB8
	EMU_Write32(S0 + 40,S6); //+ 0x28
	EMU_Write32(S0 + 36,A2); //+ 0x24
	EMU_Write32(S0 + 44,V0); //+ 0x2C
	A0 = EMU_ReadS16(S1 + 48); //+ 0x30
	if (!A0)
	{
		A0 = SP + 232;
		ZZ_CLOCKCYCLES(9,0x8002AFE4);
		goto ZZ_2A82C_7B8;
	}
	A0 = SP + 232;
	V0 = EMU_ReadU32(S5 + 128); //+ 0x80
	T1 = EMU_ReadU32(SP + 256); //+ 0x100
	EMU_Write32(SP + 232,V0); //+ 0xE8
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	A1 = S1;
	EMU_Write32(SP + 236,T1); //+ 0xEC
	V1 = EMU_ReadU32(S5 + 136); //+ 0x88
	V0 += S2;
	EMU_Write32(SP + 240,V1); //+ 0xF0
	A3 = EMU_ReadU8(V0 + 15); //+ 0xF
	A2 = S0;
	RA = 0x8002AFDC; //ZZ_2A82C_7B0
	EMU_Write32(SP + 16,T0); //+ 0x10
	ZZ_CLOCKCYCLES(23,0x8002A3EC);
	goto ZZ_2A3EC;
ZZ_2A82C_7B0:
	ZZ_CLOCKCYCLES(2,0x8002B028);
	goto ZZ_2A82C_7FC;
ZZ_2A82C_7B8:
	A1 = S1;
	T1 = EMU_ReadU32(SP + 256); //+ 0x100
	V1 = EMU_ReadU32(S5 + 128); //+ 0x80
	V0 += T1;
	V1 += A2;
	EMU_Write32(SP + 236,V0); //+ 0xEC
	EMU_Write32(SP + 232,V1); //+ 0xE8
	V0 = EMU_ReadU32(S5 + 136); //+ 0x88
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	V0 += S6;
	V1 += S2;
	EMU_Write32(SP + 240,V0); //+ 0xF0
	A3 = EMU_ReadU8(V1 + 15); //+ 0xF
	A2 = S0;
	RA = 0x8002B028; //ZZ_2A82C_7FC
	EMU_Write32(SP + 16,T0); //+ 0x10
	ZZ_CLOCKCYCLES(17,0x8002A0C4);
	goto ZZ_2A0C4;
ZZ_2A82C_7FC:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002B11C);
		goto ZZ_2A82C_8F0;
	}
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	V0 = V1 + S2;
	V0 = EMU_ReadU8(V0 + 12); //+ 0xC
	V0 &= 0x1;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(11,0x8002B064);
		goto ZZ_2A82C_838;
	}
	V0 = R0;
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31008); //+ 0x7920
	EMU_Write32(S0 + 12,V0); //+ 0xC
	ZZ_CLOCKCYCLES(15,0x8002B080);
	goto ZZ_2A82C_854;
ZZ_2A82C_838:
	V0 = EMU_ReadU16(V1 + 30); //+ 0x1E
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31008); //+ 0x7920
	V0 <<= 8;
	V0 -= 1;
	A0 = V0 - V1;
	EMU_Write32(S0 + 12,V0); //+ 0xC
	ZZ_CLOCKCYCLES(7,0x8002B080);
ZZ_2A82C_854:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V0 += S2;
	V0 = EMU_ReadU8(V0 + 15); //+ 0xF
	V0 &= 0x1;
	if (!V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(9,0x8002B0C0);
		goto ZZ_2A82C_894;
	}
	V0 = 0x2;
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	EMU_Write32(S0 + 16,R0); //+ 0x10
	EMU_Write32(S0 + 32,V0); //+ 0x20
	V1 += 256;
	V1 += A0;
	EMU_Write32(S0 + 20,V1); //+ 0x14
	ZZ_CLOCKCYCLES(16,0x8002B0FC);
	goto ZZ_2A82C_8D0;
ZZ_2A82C_894:
	V0 = EMU_ReadU16(S1 + 30); //+ 0x1E
	V0 <<= 8;
	V0 -= 1;
	EMU_Write32(S0 + 16,V0); //+ 0x10
	V0 = EMU_ReadU16(S1 + 30); //+ 0x1E
	V1 = 0x1;
	EMU_Write32(S0 + 32,V1); //+ 0x20
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 <<= 8;
	V1 += 1;
	V0 = V0 - V1;
	V0 += A0;
	V0 += 256;
	EMU_Write32(S0 + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(15,0x8002B0FC);
ZZ_2A82C_8D0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V0 += S2;
	V0 = EMU_ReadU8(V0 + 12); //+ 0xC
	S4 += 1;
	EMU_Write32(S0 + 28,V0); //+ 0x1C
	S0 += 52;
	ZZ_CLOCKCYCLES(8,0x8002B11C);
ZZ_2A82C_8F0:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31004); //+ 0x791C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	S3 += 1;
	V0 = S3 < V0;
	if (V0)
	{
		S2 += 4;
		ZZ_CLOCKCYCLES(8,0x8002AE6C);
		goto ZZ_2A82C_640;
	}
	S2 += 4;
	ZZ_CLOCKCYCLES(8,0x8002B13C);
ZZ_2A82C_910:
	if (!S4)
	{
		S0 = SP + 24;
		ZZ_CLOCKCYCLES(2,0x8002B288);
		goto ZZ_2A82C_A5C;
	}
	S0 = SP + 24;
	if ((int32_t)S4 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(4,0x8002B1C4);
		goto ZZ_2A82C_998;
	}
	S3 = R0;
	A2 = 0x1;
	V1 = S0;
	ZZ_CLOCKCYCLES(6,0x8002B154);
ZZ_2A82C_928:
	V0 = EMU_ReadU32(V1);
	V0 = EMU_ReadS16(V0 + 32); //+ 0x20
	if (V0 == A2)
	{
		ZZ_CLOCKCYCLES(6,0x8002AE1C);
		goto ZZ_2A82C_5F0;
	}
	A1 = EMU_ReadU32(V1 + 48); //+ 0x30
	A0 = EMU_ReadU32(S0 + 48); //+ 0x30
	V0 = (int32_t)A0 < (int32_t)A1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002B1A4);
		goto ZZ_2A82C_978;
	}
	V0 = EMU_ReadU32(V1 + 24); //+ 0x18
	T1 = EMU_ReadU32(SP + 248); //+ 0xF8
	V0 = (int32_t)V0 < (int32_t)T1;
	if (!V0)
	{
		V0 = (int32_t)A1 < (int32_t)A0;
		ZZ_CLOCKCYCLES(18,0x8002B1B4);
		goto ZZ_2A82C_988;
	}
	V0 = (int32_t)A1 < (int32_t)A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(20,0x8002B1B4);
		goto ZZ_2A82C_988;
	}
	ZZ_CLOCKCYCLES(20,0x8002B1A4);
ZZ_2A82C_978:
	S0 = V1;
	T1 = EMU_ReadU32(V1 + 24); //+ 0x18
	EMU_Write32(SP + 248,T1); //+ 0xF8
	ZZ_CLOCKCYCLES(4,0x8002B1B4);
ZZ_2A82C_988:
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)S4;
	if (V0)
	{
		V1 += 52;
		ZZ_CLOCKCYCLES(4,0x8002B154);
		goto ZZ_2A82C_928;
	}
	V1 += 52;
	ZZ_CLOCKCYCLES(4,0x8002B1C4);
ZZ_2A82C_998:
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8002B288);
		goto ZZ_2A82C_A5C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31004); //+ 0x791C
	V0 = EMU_ReadS16(V0 + 34); //+ 0x22
	EMU_SMultiply(V0,A0);
	V0 = LO;
	V0 = (int32_t)V0 < 30001;
	if (!V0)
	{
		V0 = (int32_t)A0 < 513;
		ZZ_CLOCKCYCLES(14,0x8002B224);
		goto ZZ_2A82C_9F8;
	}
	V0 = (int32_t)A0 < 513;
	A1 = EMU_ReadU32(S0);
	A2 = EMU_ReadU32(S0 + 8); //+ 0x8
	A0 = EMU_ReadU32(A1 + 4); //+ 0x4
	RA = 0x8002B210; //ZZ_2A82C_9E4
	A3 = R0;
	ZZ_CLOCKCYCLES(19,0x80025A60);
	goto ZZ_25A60;
ZZ_2A82C_9E4:
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	EMU_Write32(GP + 452,V0); //+ 0x1C4
	ZZ_CLOCKCYCLES(5,0x8002B288);
	goto ZZ_2A82C_A5C;
ZZ_2A82C_9F8:
	if (!V0)
	{
		V0 = A0 >> 31;
		ZZ_CLOCKCYCLES(2,0x8002B238);
		goto ZZ_2A82C_A0C;
	}
	V0 = A0 >> 31;
	V0 += A0;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(5,0x8002B278);
	goto ZZ_2A82C_A4C;
ZZ_2A82C_A0C:
	V0 = (int32_t)A0 < 1280;
	if (V0)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(3,0x8002B278);
		goto ZZ_2A82C_A4C;
	}
	V0 = 0x200;
	V0 = EMU_ReadU32(GP + 452); //+ 0x1C4
	V1 = A0 >> 31;
	V1 += A0;
	V1 = (int32_t)V1 >> 1;
	V1 += 256;
	A0 = V0 + 256;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002B26C);
		goto ZZ_2A82C_A40;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(13,0x8002B26C);
ZZ_2A82C_A40:
	EMU_Write32(GP + 452,V1); //+ 0x1C4
	ZZ_CLOCKCYCLES(3,0x8002B27C);
	goto ZZ_2A82C_A50;
ZZ_2A82C_A4C:
	EMU_Write32(GP + 452,V0); //+ 0x1C4
	ZZ_CLOCKCYCLES(1,0x8002B27C);
ZZ_2A82C_A50:
	A0 = EMU_ReadU32(GP + 452); //+ 0x1C4
	RA = 0x8002B288; //ZZ_2A82C_A5C
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x80029F6C);
	goto ZZ_29F6C;
ZZ_2A82C_A5C:
	RA = EMU_ReadU32(SP + 324); //+ 0x144
	FP = EMU_ReadU32(SP + 320); //+ 0x140
	S7 = EMU_ReadU32(SP + 316); //+ 0x13C
	S6 = EMU_ReadU32(SP + 312); //+ 0x138
	S5 = EMU_ReadU32(SP + 308); //+ 0x134
	S4 = EMU_ReadU32(SP + 304); //+ 0x130
	S3 = EMU_ReadU32(SP + 300); //+ 0x12C
	S2 = EMU_ReadU32(SP + 296); //+ 0x128
	S1 = EMU_ReadU32(SP + 292); //+ 0x124
	S0 = EMU_ReadU32(SP + 288); //+ 0x120
	SP += 328;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002B37C,ZZ_2B2BC_C0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002A82C,0x8002A8A8,ZZ_2A82C);
ZZ_MARK_TARGET(0x8002A8A8,0x8002A8AC,ZZ_2A82C_7C);
ZZ_MARK_TARGET(0x8002A8AC,0x8002A8E0,ZZ_2A82C_80);
ZZ_MARK_TARGET(0x8002A8E0,0x8002A8E8,ZZ_2A82C_B4);
ZZ_MARK_TARGET(0x8002A8E8,0x8002A928,ZZ_2A82C_BC);
ZZ_MARK_TARGET(0x8002A928,0x8002A93C,ZZ_2A82C_FC);
ZZ_MARK_TARGET(0x8002A93C,0x8002A954,ZZ_2A82C_110);
ZZ_MARK_TARGET(0x8002A954,0x8002A960,ZZ_2A82C_128);
ZZ_MARK_TARGET(0x8002A960,0x8002A968,ZZ_2A82C_134);
ZZ_MARK_TARGET(0x8002A968,0x8002A96C,ZZ_2A82C_13C);
ZZ_MARK_TARGET(0x8002A96C,0x8002A990,ZZ_2A82C_140);
ZZ_MARK_TARGET(0x8002A990,0x8002A99C,ZZ_2A82C_164);
ZZ_MARK_TARGET(0x8002A99C,0x8002A9E4,ZZ_2A82C_170);
ZZ_MARK_TARGET(0x8002A9E4,0x8002A9FC,ZZ_2A82C_1B8);
ZZ_MARK_TARGET(0x8002A9FC,0x8002AA10,ZZ_2A82C_1D0);
ZZ_MARK_TARGET(0x8002AA10,0x8002AA1C,ZZ_2A82C_1E4);
ZZ_MARK_TARGET(0x8002AA1C,0x8002AA98,ZZ_2A82C_1F0);
ZZ_MARK_TARGET(0x8002AA98,0x8002AAA0,ZZ_2A82C_26C);
ZZ_MARK_TARGET(0x8002AAA0,0x8002AAC4,ZZ_2A82C_274);
ZZ_MARK_TARGET(0x8002AAC4,0x8002AAD0,ZZ_2A82C_298);
ZZ_MARK_TARGET(0x8002AAD0,0x8002AAF8,ZZ_2A82C_2A4);
ZZ_MARK_TARGET(0x8002AAF8,0x8002AB00,ZZ_2A82C_2CC);
ZZ_MARK_TARGET(0x8002AB00,0x8002AB24,ZZ_2A82C_2D4);
ZZ_MARK_TARGET(0x8002AB24,0x8002AB30,ZZ_2A82C_2F8);
ZZ_MARK_TARGET(0x8002AB30,0x8002AB3C,ZZ_2A82C_304);
ZZ_MARK_TARGET(0x8002AB3C,0x8002AB40,ZZ_2A82C_310);
ZZ_MARK_TARGET(0x8002AB40,0x8002AB60,ZZ_2A82C_314);
ZZ_MARK_TARGET(0x8002AB60,0x8002AB98,ZZ_2A82C_334);
ZZ_MARK_TARGET(0x8002AB98,0x8002ABE4,ZZ_2A82C_36C);
ZZ_MARK_TARGET(0x8002ABE4,0x8002AC00,ZZ_2A82C_3B8);
ZZ_MARK_TARGET(0x8002AC00,0x8002AC28,ZZ_2A82C_3D4);
ZZ_MARK_TARGET(0x8002AC28,0x8002AC48,ZZ_2A82C_3FC);
ZZ_MARK_TARGET(0x8002AC48,0x8002AC64,ZZ_2A82C_41C);
ZZ_MARK_TARGET(0x8002AC64,0x8002ACB4,ZZ_2A82C_438);
ZZ_MARK_TARGET(0x8002ACB4,0x8002ACC0,ZZ_2A82C_488);
ZZ_MARK_TARGET(0x8002ACC0,0x8002ACC4,ZZ_2A82C_494);
ZZ_MARK_TARGET(0x8002ACC4,0x8002ACF0,ZZ_2A82C_498);
ZZ_MARK_TARGET(0x8002ACF0,0x8002ACFC,ZZ_2A82C_4C4);
ZZ_MARK_TARGET(0x8002ACFC,0x8002AD00,ZZ_2A82C_4D0);
ZZ_MARK_TARGET(0x8002AD00,0x8002AD04,ZZ_2A82C_4D4);
ZZ_MARK_TARGET(0x8002AD04,0x8002AD70,ZZ_2A82C_4D8);
ZZ_MARK_TARGET(0x8002AD70,0x8002AD78,ZZ_2A82C_544);
ZZ_MARK_TARGET(0x8002AD78,0x8002ADB4,ZZ_2A82C_54C);
ZZ_MARK_TARGET(0x8002ADB4,0x8002ADF8,ZZ_2A82C_588);
ZZ_MARK_TARGET(0x8002ADF8,0x8002AE1C,ZZ_2A82C_5CC);
ZZ_MARK_TARGET(0x8002AE1C,0x8002AE24,ZZ_2A82C_5F0);
ZZ_MARK_TARGET(0x8002AE24,0x8002AE2C,ZZ_2A82C_5F8);
ZZ_MARK_TARGET(0x8002AE2C,0x8002AE30,ZZ_2A82C_600);
ZZ_MARK_TARGET(0x8002AE30,0x8002AE6C,ZZ_2A82C_604);
ZZ_MARK_TARGET(0x8002AE6C,0x8002AEA8,ZZ_2A82C_640);
ZZ_MARK_TARGET(0x8002AEA8,0x8002AEDC,ZZ_2A82C_67C);
ZZ_MARK_TARGET(0x8002AEDC,0x8002AF1C,ZZ_2A82C_6B0);
ZZ_MARK_TARGET(0x8002AF1C,0x8002AF28,ZZ_2A82C_6F0);
ZZ_MARK_TARGET(0x8002AF28,0x8002AF44,ZZ_2A82C_6FC);
ZZ_MARK_TARGET(0x8002AF44,0x8002AF50,ZZ_2A82C_718);
ZZ_MARK_TARGET(0x8002AF50,0x8002AF6C,ZZ_2A82C_724);
ZZ_MARK_TARGET(0x8002AF6C,0x8002AF78,ZZ_2A82C_740);
ZZ_MARK_TARGET(0x8002AF78,0x8002AF80,ZZ_2A82C_74C);
ZZ_MARK_TARGET(0x8002AF80,0x8002AFDC,ZZ_2A82C_754);
ZZ_MARK_TARGET(0x8002AFDC,0x8002AFE4,ZZ_2A82C_7B0);
ZZ_MARK_TARGET(0x8002AFE4,0x8002B028,ZZ_2A82C_7B8);
ZZ_MARK_TARGET(0x8002B028,0x8002B064,ZZ_2A82C_7FC);
ZZ_MARK_TARGET(0x8002B064,0x8002B080,ZZ_2A82C_838);
ZZ_MARK_TARGET(0x8002B080,0x8002B0C0,ZZ_2A82C_854);
ZZ_MARK_TARGET(0x8002B0C0,0x8002B0FC,ZZ_2A82C_894);
ZZ_MARK_TARGET(0x8002B0FC,0x8002B11C,ZZ_2A82C_8D0);
ZZ_MARK_TARGET(0x8002B11C,0x8002B13C,ZZ_2A82C_8F0);
ZZ_MARK_TARGET(0x8002B13C,0x8002B154,ZZ_2A82C_910);
ZZ_MARK_TARGET(0x8002B154,0x8002B1A4,ZZ_2A82C_928);
ZZ_MARK_TARGET(0x8002B1A4,0x8002B1B4,ZZ_2A82C_978);
ZZ_MARK_TARGET(0x8002B1B4,0x8002B1C4,ZZ_2A82C_988);
ZZ_MARK_TARGET(0x8002B1C4,0x8002B210,ZZ_2A82C_998);
ZZ_MARK_TARGET(0x8002B210,0x8002B224,ZZ_2A82C_9E4);
ZZ_MARK_TARGET(0x8002B224,0x8002B238,ZZ_2A82C_9F8);
ZZ_MARK_TARGET(0x8002B238,0x8002B26C,ZZ_2A82C_A0C);
ZZ_MARK_TARGET(0x8002B26C,0x8002B278,ZZ_2A82C_A40);
ZZ_MARK_TARGET(0x8002B278,0x8002B27C,ZZ_2A82C_A4C);
ZZ_MARK_TARGET(0x8002B27C,0x8002B288,ZZ_2A82C_A50);
ZZ_MARK_TARGET(0x8002B288,0x8002B2BC,ZZ_2A82C_A5C);
