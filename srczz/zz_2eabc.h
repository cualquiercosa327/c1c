#ifdef ZZ_INCLUDE_CODE
ZZ_2EABC:
	SP -= 40;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A0;
	A0 = 0x80060000;
	A0 -= 15064;
	A1 = 0x13;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	RA = 0x8002EAE4; //ZZ_2EABC_28
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(10,0x80012DCC);
	goto ZZ_12DCC;
ZZ_2EABC_28:
	A2 = 0x80050000;
	A2 += 25792;
	EMU_ReadLeft(A2 + 3,&V1); //+ 0x3
	EMU_ReadRight(A2,&V1);
	A0 = EMU_ReadS8(A2 + 4); //+ 0x4
	A1 = EMU_ReadS8(A2 + 5); //+ 0x5
	EMU_WriteLeft(SP + 19,V1); //+ 0x13
	EMU_WriteRight(SP + 16,V1); //+ 0x10
	EMU_Write8(SP + 20,A0); //+ 0x14
	EMU_Write8(SP + 21,A1); //+ 0x15
	A0 = SP + 22;
	A1 = R0;
	S0 = V0;
	S1 = SP + 16;
	RA = 0x8002EB24; //ZZ_2EABC_68
	A2 = 0x2;
	ZZ_CLOCKCYCLES(16,0x8003D720);
	goto ZZ_3D720;
ZZ_2EABC_68:
	if (S0)
	{
		V0 = 0x63960000;
		ZZ_CLOCKCYCLES(2,0x8002EB54);
		goto ZZ_2EABC_98;
	}
	V0 = 0x63960000;
	V1 = EMU_ReadU32(GP + 788); //+ 0x314
	V0 |= 0x347F;
	EMU_Write32(S2,V0);
	V0 = 0x19;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002EB98);
		goto ZZ_2EABC_DC;
	}
	AT = 0x80060000;
	EMU_Write32(AT + 6352,R0); //+ 0x18D0
	ZZ_CLOCKCYCLES(12,0x8002EB98);
	goto ZZ_2EABC_DC;
ZZ_2EABC_98:
	RA = 0x8002EB5C; //ZZ_2EABC_A0
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x8002F778);
	goto ZZ_2F778;
ZZ_2EABC_A0:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 15060); //+ 0xFFFFC52C
	V0 += 48;
	RA = 0x8002EB70; //ZZ_2EABC_B4
	EMU_Write8(SP + 18,V0); //+ 0x12
	ZZ_CLOCKCYCLES(5,0x80012820);
	goto ZZ_12820;
ZZ_2EABC_B4:
	A0 = S1;
	RA = 0x8002EB7C; //ZZ_2EABC_C0
	EMU_Write8(SP + 19,V0); //+ 0x13
	ZZ_CLOCKCYCLES(3,0x80012660);
	goto ZZ_12660;
ZZ_2EABC_C0:
	EMU_Write32(S2,V0);
	V0 = -1;
	AT = 0x80060000;
	EMU_Write32(AT - 15028,V0); //+ 0xFFFFC54C
	V0 = 0x3;
	AT = 0x80060000;
	EMU_Write32(AT + 6704,V0); //+ 0x1A30
	ZZ_CLOCKCYCLES(7,0x8002EB98);
ZZ_2EABC_DC:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80025584,ZZ_253A0_1E4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002EABC,0x8002EAE4,ZZ_2EABC);
ZZ_MARK_TARGET(0x8002EAE4,0x8002EB24,ZZ_2EABC_28);
ZZ_MARK_TARGET(0x8002EB24,0x8002EB54,ZZ_2EABC_68);
ZZ_MARK_TARGET(0x8002EB54,0x8002EB5C,ZZ_2EABC_98);
ZZ_MARK_TARGET(0x8002EB5C,0x8002EB70,ZZ_2EABC_A0);
ZZ_MARK_TARGET(0x8002EB70,0x8002EB7C,ZZ_2EABC_B4);
ZZ_MARK_TARGET(0x8002EB7C,0x8002EB98,ZZ_2EABC_C0);
ZZ_MARK_TARGET(0x8002EB98,0x8002EBB4,ZZ_2EABC_DC);
