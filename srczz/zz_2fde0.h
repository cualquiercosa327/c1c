#ifdef ZZ_INCLUDE_CODE
ZZ_2FDE0:
	SP -= 72;
	A0 = R0;
	A1 = -9;
	V1 = 0x80050000;
	V1 += 26632;
	EMU_Write32(SP + 68,RA); //+ 0x44
	EMU_Write32(SP + 64,S0); //+ 0x40
	ZZ_CLOCKCYCLES(7,0x8002FDFC);
ZZ_2FDE0_1C:
	V0 = EMU_ReadU32(V1);
	A0 += 1;
	V0 &= A1;
	EMU_Write32(V1,V0);
	V0 = (int32_t)A0 < 24;
	if (V0)
	{
		V1 += 68;
		ZZ_CLOCKCYCLES(7,0x8002FDFC);
		goto ZZ_2FDE0_1C;
	}
	V1 += 68;
	RA = 0x8002FE20; //ZZ_2FDE0_40
	S0 = 0x3FFF;
	ZZ_CLOCKCYCLES(9,0x800497F4);
	goto ZZ_497F4;
ZZ_2FDE0_40:
	A0 = 0x80050000;
	A0 += 28388;
	A1 = 0x1;
	RA = 0x8002FE34; //ZZ_2FDE0_54
	A2 = 0x2;
	ZZ_CLOCKCYCLES(5,0x8004C990);
	goto ZZ_4C990;
ZZ_2FDE0_54:
	A1 = 0x80050000;
	A1 += 26224;
	RA = 0x8002FE44; //ZZ_2FDE0_64
	A0 = R0;
	ZZ_CLOCKCYCLES(4,0x80045D70);
	goto ZZ_45D70;
ZZ_2FDE0_64:
	A0 = SP + 24;
	V0 = 0x3;
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write16(SP + 28,S0); //+ 0x1C
	RA = 0x8002FE5C; //ZZ_2FDE0_7C
	EMU_Write16(SP + 30,S0); //+ 0x1E
	ZZ_CLOCKCYCLES(6,0x80048B30);
	goto ZZ_48B30;
ZZ_2FDE0_7C:
	RA = 0x8002FE64; //ZZ_2FDE0_84
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80048A54);
	goto ZZ_48A54;
ZZ_2FDE0_84:
	V0 = 0x1;
	AT = 0x80050000;
	EMU_Write8(AT + 28296,V0); //+ 0x6E88
	V0 = 0x80;
	AT = 0x80050000;
	EMU_Write8(AT + 28297,V0); //+ 0x6E89
	V0 = 0x1000;
	AT = 0x80050000;
	EMU_Write16(AT + 28302,V0); //+ 0x6E8E
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 28284); //+ 0x6E7C
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 26384); //+ 0x6710
	V1 = -3;
	AT = 0x80050000;
	EMU_Write32(AT + 28292,R0); //+ 0x6E84
	AT = 0x80050000;
	EMU_Write16(AT + 28298,S0); //+ 0x6E8A
	AT = 0x80050000;
	EMU_Write16(AT + 28300,R0); //+ 0x6E8C
	AT = 0x80050000;
	EMU_Write32(AT + 28304,R0); //+ 0x6E90
	AT = 0x80050000;
	EMU_Write32(AT + 28308,R0); //+ 0x6E94
	AT = 0x80050000;
	EMU_Write32(AT + 28312,R0); //+ 0x6E98
	V0 &= V1;
	V1 = -2;
	V0 &= V1;
	V1 = -5;
	V0 &= V1;
	V1 = -9;
	V0 &= V1;
	V1 = -17;
	V0 &= V1;
	V1 = -33;
	V0 &= V1;
	V1 = -65;
	V0 &= V1;
	V1 = -129;
	V0 &= V1;
	V1 = -257;
	V0 &= V1;
	V0 |= 0x600;
	V1 = -2049;
	V0 &= V1;
	A0 -= 5;
	AT = 0x80050000;
	EMU_Write32(AT + 28284,V0); //+ 0x6E7C
	V0 = A0 < 48;
	if (!V0)
	{
		V0 = A0 << 2;
		ZZ_CLOCKCYCLES(52,0x8002FF70);
		goto ZZ_2FDE0_190;
	}
	V0 = A0 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3032); //+ 0xBD8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(58);
	ZZ_JUMPREGISTER(0x8002FF4C,ZZ_2FDE0_16C);
	ZZ_JUMPREGISTER(0x8002FF70,ZZ_2FDE0_190);
	ZZ_JUMPREGISTER(0x8002FF58,ZZ_2FDE0_178);
	ZZ_JUMPREGISTER_END();
ZZ_2FDE0_16C:
	EMU_Write32(SP + 16,R0); //+ 0x10
	A0 = 0x5;
	ZZ_CLOCKCYCLES(3,0x8002FF60);
	goto ZZ_2FDE0_180;
ZZ_2FDE0_178:
	EMU_Write32(SP + 16,R0); //+ 0x10
	A0 = 0x3;
	ZZ_CLOCKCYCLES(2,0x8002FF60);
ZZ_2FDE0_180:
	A1 = 0x2000;
	A2 = 0x2000;
	RA = 0x8002FF70; //ZZ_2FDE0_190
	A3 = R0;
	ZZ_CLOCKCYCLES(4,0x80030008);
	goto ZZ_30008;
ZZ_2FDE0_190:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6420); //+ 0x1914
	A0 = V0 << 14;
	A0 = A0 - V0;
	A0 <<= 8;
	RA = 0x8002FF90; //ZZ_2FDE0_1B0
	A0 = (int32_t)A0 >> 16;
	ZZ_CLOCKCYCLES(8,0x8002FFFC);
	goto ZZ_2FFFC;
ZZ_2FDE0_1B0:
	A0 = 0x7F;
	V0 = 0x3FFF;
	EMU_Write16(GP + 612,V0); //+ 0x264
	EMU_Write16(GP + 616,R0); //+ 0x268
	RA = 0x8002FFA8; //ZZ_2FDE0_1C8
	A1 = 0x7F;
	ZZ_CLOCKCYCLES(6,0x8004B7D8);
	goto ZZ_4B7D8;
ZZ_2FDE0_1C8:
	EMU_Write32(GP + 624,R0); //+ 0x270
	RA = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80015E48,ZZ_15B58_2F0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002FDE0,0x8002FDFC,ZZ_2FDE0);
ZZ_MARK_TARGET(0x8002FDFC,0x8002FE20,ZZ_2FDE0_1C);
ZZ_MARK_TARGET(0x8002FE20,0x8002FE34,ZZ_2FDE0_40);
ZZ_MARK_TARGET(0x8002FE34,0x8002FE44,ZZ_2FDE0_54);
ZZ_MARK_TARGET(0x8002FE44,0x8002FE5C,ZZ_2FDE0_64);
ZZ_MARK_TARGET(0x8002FE5C,0x8002FE64,ZZ_2FDE0_7C);
ZZ_MARK_TARGET(0x8002FE64,0x8002FF4C,ZZ_2FDE0_84);
ZZ_MARK_TARGET(0x8002FF4C,0x8002FF58,ZZ_2FDE0_16C);
ZZ_MARK_TARGET(0x8002FF58,0x8002FF60,ZZ_2FDE0_178);
ZZ_MARK_TARGET(0x8002FF60,0x8002FF70,ZZ_2FDE0_180);
ZZ_MARK_TARGET(0x8002FF70,0x8002FF90,ZZ_2FDE0_190);
ZZ_MARK_TARGET(0x8002FF90,0x8002FFA8,ZZ_2FDE0_1B0);
ZZ_MARK_TARGET(0x8002FFA8,0x8002FFC0,ZZ_2FDE0_1C8);
