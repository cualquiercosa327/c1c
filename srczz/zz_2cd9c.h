#ifdef ZZ_INCLUDE_CODE
ZZ_2CD9C:
	SP -= 96;
	EMU_Write32(SP + 84,S5); //+ 0x54
	S5 = A0;
	EMU_Write32(SP + 68,S1); //+ 0x44
	S1 = A1;
	A1 = A2;
	EMU_Write32(SP + 76,S3); //+ 0x4C
	S3 = 0xC4650000;
	S3 |= 0x3601;
	A0 = 0x10000;
	EMU_Write32(SP + 88,RA); //+ 0x58
	EMU_Write32(SP + 80,S4); //+ 0x50
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 64,S0); //+ 0x40
	V0 = EMU_ReadU32(S1);
	A0 |= 0xF2C0;
	V0 -= 19200;
	EMU_Write32(A1 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S1);
	V1 = 0x20000;
	V0 += 19200;
	EMU_Write32(A1 + 4140,V0); //+ 0x102C
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 |= 0x9900;
	V0 += A0;
	EMU_Write32(A1 + 4132,V0); //+ 0x1024
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	A2 = R0;
	V0 += V1;
	EMU_Write32(A1 + 4144,V0); //+ 0x1030
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	T0 = 0x80060000;
	T0 += 3592;
	V0 -= 19200;
	EMU_Write32(A1 + 4136,V0); //+ 0x1028
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	S4 = R0;
	V0 += 19200;
	EMU_Write32(A1 + 4148,V0); //+ 0x1034
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6280); //+ 0x1888
	if ((int32_t)V0 <= 0)
	{
		S0 = A1 + 4128;
		ZZ_CLOCKCYCLES(44,0x8002CF54);
		goto ZZ_2CD9C_1B8;
	}
	S0 = A1 + 4128;
	T4 = 0x8000000;
	T3 = 0xC4650000;
	T3 |= 0x3601;
	T2 = EMU_ReadU32(T0 + 2688); //+ 0xA80
	A0 = T0 + 4;
	ZZ_CLOCKCYCLES(49,0x8002CE60);
ZZ_2CD9C_C4:
	T1 = EMU_ReadU32(A0 + 20); //+ 0x14
	V0 = EMU_ReadU32(T1 + 204); //+ 0xCC
	V0 &= T4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002CF40);
		goto ZZ_2CD9C_1A4;
	}
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	V0 = EMU_ReadU32(A0 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(13,0x8002CF08);
		goto ZZ_2CD9C_16C;
	}
	A3 = R0;
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = EMU_ReadU32(A0);
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(19,0x8002CF08);
		goto ZZ_2CD9C_16C;
	}
	V1 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(T0);
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(25,0x8002CF08);
		goto ZZ_2CD9C_16C;
	}
	V1 = EMU_ReadU32(S0 + 20); //+ 0x14
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(31,0x8002CF08);
		goto ZZ_2CD9C_16C;
	}
	V1 = EMU_ReadU32(S0);
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(37,0x8002CF08);
		goto ZZ_2CD9C_16C;
	}
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = (int32_t)V0 < (int32_t)V1;
	A3 = V0 ^ 0x1;
	ZZ_CLOCKCYCLES(42,0x8002CF08);
ZZ_2CD9C_16C:
	if (!A3)
	{
		ZZ_CLOCKCYCLES(2,0x8002CF40);
		goto ZZ_2CD9C_1A4;
	}
	if (S3 != T3)
	{
		S4 = T1;
		ZZ_CLOCKCYCLES(4,0x8002CF24);
		goto ZZ_2CD9C_188;
	}
	S4 = T1;
	S3 = EMU_ReadU32(A0);
	A2 += 1;
	ZZ_CLOCKCYCLES(7,0x8002CF44);
	goto ZZ_2CD9C_1A8;
ZZ_2CD9C_188:
	V1 = EMU_ReadU32(A0);
	V0 = (int32_t)S3 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002CF3C);
		goto ZZ_2CD9C_1A0;
	}
	V1 = S3;
	ZZ_CLOCKCYCLES(6,0x8002CF3C);
ZZ_2CD9C_1A0:
	S3 = V1;
	ZZ_CLOCKCYCLES(1,0x8002CF40);
ZZ_2CD9C_1A4:
	A2 += 1;
	ZZ_CLOCKCYCLES(1,0x8002CF44);
ZZ_2CD9C_1A8:
	A0 += 28;
	V0 = (int32_t)A2 < (int32_t)T2;
	if (V0)
	{
		T0 += 28;
		ZZ_CLOCKCYCLES(4,0x8002CE60);
		goto ZZ_2CD9C_C4;
	}
	T0 += 28;
	ZZ_CLOCKCYCLES(4,0x8002CF54);
ZZ_2CD9C_1B8:
	V1 = 0xC4650000;
	V0 = EMU_ReadU32(S1);
	V1 |= 0x3601;
	V0 -= 9600;
	EMU_Write32(S0,V0);
	V0 = EMU_ReadU32(S1);
	A0 = S5;
	V0 += 9600;
	EMU_Write32(S0 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	A2 = A1 + 4104;
	V0 -= 9600;
	EMU_Write32(S0 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	A3 = S0;
	V0 += 9600;
	EMU_Write32(S0 + 20,V0); //+ 0x14
	V0 = 0x2;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x1;
	EMU_Write32(SP + 20,V0); //+ 0x14
	RA = 0x8002CFB0; //ZZ_2CD9C_214
	EMU_Write32(SP + 24,V1); //+ 0x18
	ZZ_CLOCKCYCLES(23,0x80038DF8);
	goto ZZ_38DF8;
ZZ_2CD9C_214:
	V1 = EMU_ReadU32(S5 + 40); //+ 0x28
	V1 = EMU_ReadU32(V1 + 16); //+ 0x10
	S2 = V0;
	V0 = EMU_ReadU32(V1 + 764); //+ 0x2FC
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		A1 = SP + 32;
		ZZ_CLOCKCYCLES(9,0x8002D034);
		goto ZZ_2CD9C_298;
	}
	A1 = SP + 32;
	V0 = EMU_ReadU32(S1);
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	EMU_Write32(SP + 36,V0); //+ 0x24
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	RA = 0x8002CFFC; //ZZ_2CD9C_260
	EMU_Write32(SP + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(19,0x80026DD4);
	goto ZZ_26DD4;
ZZ_2CD9C_260:
	V0 = (int32_t)V0 < -254;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(3,0x8002D038);
		goto ZZ_2CD9C_29C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S5 + 40); //+ 0x28
	V0 = EMU_ReadU32(V0 + 20); //+ 0x14
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = EMU_ReadU32(SP + 36); //+ 0x24
	V1 <<= 8;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(13,0x8002D038);
		goto ZZ_2CD9C_29C;
	}
	V0 = 0xC4650000;
	S2 = V1;
	ZZ_CLOCKCYCLES(14,0x8002D034);
ZZ_2CD9C_298:
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(1,0x8002D038);
ZZ_2CD9C_29C:
	V0 |= 0x3601;
	if (S3 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D08C);
		goto ZZ_2CD9C_2F0;
	}
	if (S2 == V0)
	{
		A0 = S5;
		ZZ_CLOCKCYCLES(5,0x8002D058);
		goto ZZ_2CD9C_2BC;
	}
	A0 = S5;
	V0 = (int32_t)S3 < (int32_t)S2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D08C);
		goto ZZ_2CD9C_2F0;
	}
	ZZ_CLOCKCYCLES(8,0x8002D058);
ZZ_2CD9C_2BC:
	A1 = S4;
	A2 = 0x1700;
	A3 = 0x1;
	V0 = EMU_ReadU32(A1 + 200); //+ 0xC8
	V1 = 0x6400;
	EMU_Write32(SP + 48,V1); //+ 0x30
	V0 |= 0x80;
	EMU_Write32(A1 + 200,V0); //+ 0xC8
	V0 = SP + 48;
	RA = 0x8002D084; //ZZ_2CD9C_2E8
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(11,0x80024040);
	goto ZZ_24040;
ZZ_2CD9C_2E8:
	V0 = S3;
	ZZ_CLOCKCYCLES(2,0x8002D090);
	goto ZZ_2CD9C_2F4;
ZZ_2CD9C_2F0:
	V0 = S2;
	ZZ_CLOCKCYCLES(1,0x8002D090);
ZZ_2CD9C_2F4:
	RA = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8002D560,ZZ_2D384_1DC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002CD9C,0x8002CE60,ZZ_2CD9C);
ZZ_MARK_TARGET(0x8002CE60,0x8002CF08,ZZ_2CD9C_C4);
ZZ_MARK_TARGET(0x8002CF08,0x8002CF24,ZZ_2CD9C_16C);
ZZ_MARK_TARGET(0x8002CF24,0x8002CF3C,ZZ_2CD9C_188);
ZZ_MARK_TARGET(0x8002CF3C,0x8002CF40,ZZ_2CD9C_1A0);
ZZ_MARK_TARGET(0x8002CF40,0x8002CF44,ZZ_2CD9C_1A4);
ZZ_MARK_TARGET(0x8002CF44,0x8002CF54,ZZ_2CD9C_1A8);
ZZ_MARK_TARGET(0x8002CF54,0x8002CFB0,ZZ_2CD9C_1B8);
ZZ_MARK_TARGET(0x8002CFB0,0x8002CFFC,ZZ_2CD9C_214);
ZZ_MARK_TARGET(0x8002CFFC,0x8002D034,ZZ_2CD9C_260);
ZZ_MARK_TARGET(0x8002D034,0x8002D038,ZZ_2CD9C_298);
ZZ_MARK_TARGET(0x8002D038,0x8002D058,ZZ_2CD9C_29C);
ZZ_MARK_TARGET(0x8002D058,0x8002D084,ZZ_2CD9C_2BC);
ZZ_MARK_TARGET(0x8002D084,0x8002D08C,ZZ_2CD9C_2E8);
ZZ_MARK_TARGET(0x8002D08C,0x8002D090,ZZ_2CD9C_2F0);
ZZ_MARK_TARGET(0x8002D090,0x8002D0B8,ZZ_2CD9C_2F4);
