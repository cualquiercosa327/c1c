#ifdef ZZ_INCLUDE_CODE
ZZ_30328:
	SP -= 112;
	EMU_Write32(SP + 96,S4); //+ 0x60
	S4 = 0x3FFF;
	EMU_Write32(SP + 92,S3); //+ 0x5C
	S3 = 0xFF;
	EMU_Write32(SP + 88,S2); //+ 0x58
	S2 = EMU_ReadU32(GP + 620); //+ 0x26C
	V1 = 0x80050000;
	V1 += 26628;
	EMU_Write32(SP + 104,RA); //+ 0x68
	EMU_Write32(SP + 100,S5); //+ 0x64
	EMU_Write32(SP + 84,S1); //+ 0x54
	V0 = S2 << 4;
	V0 += S2;
	V0 <<= 2;
	S1 = V0 + V1;
	V0 = (int32_t)S2 < 24;
	if (!V0)
	{
		EMU_Write32(SP + 80,S0); //+ 0x50
		ZZ_CLOCKCYCLES(19,0x800303B4);
		goto ZZ_30328_8C;
	}
	EMU_Write32(SP + 80,S0); //+ 0x50
	A0 = S1 + 4;
	ZZ_CLOCKCYCLES(20,0x80030378);
ZZ_30328_50:
	V1 = EMU_ReadU8(A0 + 13); //+ 0xD
	V0 = (int32_t)V1 < (int32_t)S3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80030390);
		goto ZZ_30328_68;
	}
	S3 = V1;
	ZZ_CLOCKCYCLES(6,0x80030390);
ZZ_30328_68:
	V0 = EMU_ReadU32(A0);
	V0 &= 0x8;
	if (!V0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(5,0x800304A0);
		goto ZZ_30328_178;
	}
	V0 = S2;
	S2 += 1;
	V0 = (int32_t)S2 < 24;
	if (V0)
	{
		A0 += 68;
		ZZ_CLOCKCYCLES(9,0x80030378);
		goto ZZ_30328_50;
	}
	A0 += 68;
	ZZ_CLOCKCYCLES(9,0x800303B4);
ZZ_30328_8C:
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 28297); //+ 0x6E89
	V0 = (int32_t)V0 < (int32_t)S3;
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(6,0x800304A0);
		goto ZZ_30328_178;
	}
	V0 = -1;
	S0 = EMU_ReadU32(GP + 620); //+ 0x26C
	V1 = 0x80050000;
	V1 += 26628;
	V0 = S0 << 4;
	V0 += S0;
	V0 <<= 2;
	S1 = V0 + V1;
	V0 = (int32_t)S0 < 24;
	if (!V0)
	{
		S2 = -1;
		ZZ_CLOCKCYCLES(16,0x80030468);
		goto ZZ_30328_140;
	}
	S2 = -1;
	S5 = 0x1;
	ZZ_CLOCKCYCLES(17,0x800303F8);
ZZ_30328_D0:
	V0 = EMU_ReadU8(S1 + 17); //+ 0x11
	if (V0 != S3)
	{
		A0 = SP + 16;
		ZZ_CLOCKCYCLES(4,0x80030458);
		goto ZZ_30328_130;
	}
	A0 = SP + 16;
	V0 = S5 << S0;
	RA = 0x80030414; //ZZ_30328_EC
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x800485E0);
	goto ZZ_485E0;
ZZ_30328_EC:
	V0 = EMU_ReadS16(SP + 24); //+ 0x18
	V1 = EMU_ReadS16(SP + 26); //+ 0x1A
	if ((int32_t)V0 >= 0)
	{
		A0 = V0;
		ZZ_CLOCKCYCLES(4,0x80030428);
		goto ZZ_30328_100;
	}
	A0 = V0;
	A0 = -A0;
	ZZ_CLOCKCYCLES(5,0x80030428);
ZZ_30328_100:
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x80030434);
		goto ZZ_30328_10C;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(3,0x80030434);
ZZ_30328_10C:
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)A0 < (int32_t)S4;
		ZZ_CLOCKCYCLES(3,0x80030448);
		goto ZZ_30328_120;
	}
	V0 = (int32_t)A0 < (int32_t)S4;
	A0 = V1;
	V0 = (int32_t)A0 < (int32_t)S4;
	ZZ_CLOCKCYCLES(5,0x80030448);
ZZ_30328_120:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80030458);
		goto ZZ_30328_130;
	}
	S2 = S0;
	S4 = A0;
	ZZ_CLOCKCYCLES(4,0x80030458);
ZZ_30328_130:
	S0 += 1;
	V0 = (int32_t)S0 < 24;
	if (V0)
	{
		S1 += 68;
		ZZ_CLOCKCYCLES(4,0x800303F8);
		goto ZZ_30328_D0;
	}
	S1 += 68;
	ZZ_CLOCKCYCLES(4,0x80030468);
ZZ_30328_140:
	V0 = 0x80050000;
	V0 = EMU_ReadU8(V0 + 28297); //+ 0x6E89
	if (S3 != V0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(5,0x800304A0);
		goto ZZ_30328_178;
	}
	V0 = S2;
	V0 = (int32_t)S4 < 2048;
	if (V0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(8,0x800304A0);
		goto ZZ_30328_178;
	}
	V0 = S2;
	RA = 0x80030490; //ZZ_30328_168
	A0 = 0x64;
	ZZ_CLOCKCYCLES(10,0x8002F778);
	goto ZZ_2F778;
ZZ_30328_168:
	V0 = (int32_t)V0 < 50;
	if (V0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(3,0x800304A0);
		goto ZZ_30328_178;
	}
	V0 = S2;
	V0 = -1;
	ZZ_CLOCKCYCLES(4,0x800304A0);
ZZ_30328_178:
	RA = EMU_ReadU32(SP + 104); //+ 0x68
	S5 = EMU_ReadU32(SP + 100); //+ 0x64
	S4 = EMU_ReadU32(SP + 96); //+ 0x60
	S3 = EMU_ReadU32(SP + 92); //+ 0x5C
	S2 = EMU_ReadU32(SP + 88); //+ 0x58
	S1 = EMU_ReadU32(SP + 84); //+ 0x54
	S0 = EMU_ReadU32(SP + 80); //+ 0x50
	SP += 112;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80030504,ZZ_304C8_3C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80030328,0x80030378,ZZ_30328);
ZZ_MARK_TARGET(0x80030378,0x80030390,ZZ_30328_50);
ZZ_MARK_TARGET(0x80030390,0x800303B4,ZZ_30328_68);
ZZ_MARK_TARGET(0x800303B4,0x800303F8,ZZ_30328_8C);
ZZ_MARK_TARGET(0x800303F8,0x80030414,ZZ_30328_D0);
ZZ_MARK_TARGET(0x80030414,0x80030428,ZZ_30328_EC);
ZZ_MARK_TARGET(0x80030428,0x80030434,ZZ_30328_100);
ZZ_MARK_TARGET(0x80030434,0x80030448,ZZ_30328_10C);
ZZ_MARK_TARGET(0x80030448,0x80030458,ZZ_30328_120);
ZZ_MARK_TARGET(0x80030458,0x80030468,ZZ_30328_130);
ZZ_MARK_TARGET(0x80030468,0x80030490,ZZ_30328_140);
ZZ_MARK_TARGET(0x80030490,0x800304A0,ZZ_30328_168);
ZZ_MARK_TARGET(0x800304A0,0x800304C8,ZZ_30328_178);
