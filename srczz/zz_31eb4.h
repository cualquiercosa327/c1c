#ifdef ZZ_INCLUDE_CODE
ZZ_31EB4:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	SP -= 88;
	EMU_Write32(SP + 80,RA); //+ 0x50
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 68,S1); //+ 0x44
	EMU_Write32(SP + 64,S0); //+ 0x40
	AT = 0x80060000;
	EMU_Write32(AT + 6580,R0); //+ 0x19B4
	V0 = EMU_ReadU32(V0 + 13776); //+ 0x35D0
	V1 = V0 - 1;
	V0 = V1 < 15;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(15,0x80031F30);
		goto ZZ_31EB4_7C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3500); //+ 0xDAC
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(21);
	ZZ_JUMPREGISTER(0x80031F08,ZZ_31EB4_54);
	ZZ_JUMPREGISTER(0x80031F20,ZZ_31EB4_6C);
	ZZ_JUMPREGISTER(0x80031F10,ZZ_31EB4_5C);
	ZZ_JUMPREGISTER(0x80031F30,ZZ_31EB4_7C);
	ZZ_JUMPREGISTER_END();
ZZ_31EB4_54:
	RA = 0x80031F10; //ZZ_31EB4_5C
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003D680);
	goto ZZ_3D680;
ZZ_31EB4_5C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15044); //+ 0xFFFFC53C
	V0 = 0x25;
	ZZ_CLOCKCYCLES(4,0x80031F3C);
	goto ZZ_31EB4_88;
ZZ_31EB4_6C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15044); //+ 0xFFFFC53C
	V0 = 0x37;
	ZZ_CLOCKCYCLES(4,0x80031F3C);
	goto ZZ_31EB4_88;
ZZ_31EB4_7C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15044); //+ 0xFFFFC53C
	V0 = 0x5A;
	ZZ_CLOCKCYCLES(3,0x80031F3C);
ZZ_31EB4_88:
	RA = 0x80031F44; //ZZ_31EB4_90
	EMU_Write32(V1 + 276,V0); //+ 0x114
	ZZ_CLOCKCYCLES(2,0x80017790);
	goto ZZ_17790;
ZZ_31EB4_90:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = EMU_ReadU32(V0 + 13776); //+ 0x35D0
	V1 = V0 - 5;
	V0 = V1 < 11;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(8,0x80032048);
		goto ZZ_31EB4_194;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3564); //+ 0xDEC
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x80031F8C,ZZ_31EB4_D8);
	ZZ_JUMPREGISTER(0x80031FCC,ZZ_31EB4_118);
	ZZ_JUMPREGISTER(0x80032048,ZZ_31EB4_194);
	ZZ_JUMPREGISTER(0x80031FA4,ZZ_31EB4_F0);
	ZZ_JUMPREGISTER(0x80031F7C,ZZ_31EB4_C8);
	ZZ_JUMPREGISTER(0x80031FBC,ZZ_31EB4_108);
	ZZ_JUMPREGISTER(0x80031FDC,ZZ_31EB4_128);
	ZZ_JUMPREGISTER_END();
ZZ_31EB4_C8:
	A0 = 0x80050000;
	A0 += 25860;
	ZZ_CLOCKCYCLES(4,0x80032038);
	goto ZZ_31EB4_184;
ZZ_31EB4_D8:
	RA = 0x80031F94; //ZZ_31EB4_E0
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80026200);
	goto ZZ_26200;
ZZ_31EB4_E0:
	A0 = 0x80050000;
	A0 += 25868;
	ZZ_CLOCKCYCLES(4,0x80031FAC);
	goto ZZ_31EB4_F8;
ZZ_31EB4_F0:
	A0 = 0x80050000;
	A0 += 25876;
	ZZ_CLOCKCYCLES(2,0x80031FAC);
ZZ_31EB4_F8:
	RA = 0x80031FB4; //ZZ_31EB4_100
	S0 = 0x3;
	ZZ_CLOCKCYCLES(2,0x80012660);
	goto ZZ_12660;
ZZ_31EB4_100:
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(2,0x8003205C);
	goto ZZ_31EB4_1A8;
ZZ_31EB4_108:
	A0 = 0x80050000;
	A0 += 25884;
	ZZ_CLOCKCYCLES(4,0x80032038);
	goto ZZ_31EB4_184;
ZZ_31EB4_118:
	A0 = 0x80050000;
	A0 += 25892;
	ZZ_CLOCKCYCLES(4,0x80032038);
	goto ZZ_31EB4_184;
ZZ_31EB4_128:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6364); //+ 0x18DC
	V0 = 0x63;
	if (V1 == V0)
	{
		V0 = V1 < 10;
		ZZ_CLOCKCYCLES(5,0x80031FF8);
		goto ZZ_31EB4_144;
	}
	V0 = V1 < 10;
	if (!V0)
	{
		V0 = V1 - 18;
		ZZ_CLOCKCYCLES(7,0x8003201C);
		goto ZZ_31EB4_168;
	}
	V0 = V1 - 18;
	ZZ_CLOCKCYCLES(7,0x80031FF8);
ZZ_31EB4_144:
	V0 = 0x9;
	A0 = 0x80050000;
	A0 += 25908;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x80032038);
		goto ZZ_31EB4_184;
	}
	A0 = 0x80050000;
	A0 += 25900;
	ZZ_CLOCKCYCLES(9,0x80032038);
	goto ZZ_31EB4_184;
ZZ_31EB4_168:
	V0 = V0 < 32;
	A0 = 0x80050000;
	A0 += 25924;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80032038);
		goto ZZ_31EB4_184;
	}
	A0 = 0x80050000;
	A0 += 25916;
	ZZ_CLOCKCYCLES(7,0x80032038);
ZZ_31EB4_184:
	RA = 0x80032040; //ZZ_31EB4_18C
	S0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80012660);
	goto ZZ_12660;
ZZ_31EB4_18C:
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(2,0x8003205C);
	goto ZZ_31EB4_1A8;
ZZ_31EB4_194:
	A0 = 0x80050000;
	A0 += 25932;
	RA = 0x80032058; //ZZ_31EB4_1A4
	S0 = R0;
	ZZ_CLOCKCYCLES(4,0x80012660);
	goto ZZ_12660;
ZZ_31EB4_1A4:
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(1,0x8003205C);
ZZ_31EB4_1A8:
	if (S0)
	{
		A0 = SP + 48;
		ZZ_CLOCKCYCLES(2,0x8003206C);
		goto ZZ_31EB4_1B8;
	}
	A0 = SP + 48;
	RA = 0x8003206C; //ZZ_31EB4_1B8
	A1 = R0;
	ZZ_CLOCKCYCLES(4,0x80031D50);
	goto ZZ_31D50;
ZZ_31EB4_1B8:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	AT = 0x80060000;
	EMU_Write32(AT + 6460,R0); //+ 0x193C
	AT = 0x80060000;
	EMU_Write32(AT + 6464,R0); //+ 0x1940
	V0 = EMU_ReadU32(V0 + 13776); //+ 0x35D0
	V1 = V0 - 1;
	V0 = V1 < 15;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(11,0x800320E8);
		goto ZZ_31EB4_234;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3612); //+ 0xE1C
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(17);
	ZZ_JUMPREGISTER(0x800320B0,ZZ_31EB4_1FC);
	ZZ_JUMPREGISTER(0x800320D4,ZZ_31EB4_220);
	ZZ_JUMPREGISTER(0x800320E8,ZZ_31EB4_234);
	ZZ_JUMPREGISTER_END();
ZZ_31EB4_1FC:
	V0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = EMU_ReadU32(V0 + 13776); //+ 0x35D0
	V0 = ~V0;
	AT = 0x80060000;
	EMU_Write32(AT + 6328,V0); //+ 0x18B8
	ZZ_CLOCKCYCLES(9,0x800320FC);
	goto ZZ_31EB4_248;
ZZ_31EB4_220:
	A0 = SP + 48;
	RA = 0x800320E0; //ZZ_31EB4_22C
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x80031D50);
	goto ZZ_31D50;
ZZ_31EB4_22C:
	ZZ_CLOCKCYCLES(2,0x800320FC);
	goto ZZ_31EB4_248;
ZZ_31EB4_234:
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 6328,R0); //+ 0x18B8
	EMU_Write32(V1 + 13724,V0); //+ 0x359C
	ZZ_CLOCKCYCLES(5,0x800320FC);
ZZ_31EB4_248:
	S0 = 0x80060000;
	S0 += 6300;
	V1 = 0x200000;
	V0 = EMU_ReadU32(S0);
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 |= V1;
	EMU_Write32(S0,V0);
	A0 = EMU_ReadU32(A0 + 13776); //+ 0x35D0
	RA = 0x80032124; //ZZ_31EB4_270
	ZZ_CLOCKCYCLES(10,0x80012820);
	goto ZZ_12820;
ZZ_31EB4_270:
	A0 = SP + 16;
	A1 = 0x80050000;
	A1 += 25940;
	RA = 0x80032138; //ZZ_31EB4_284
	A2 = V0 & 0xFF;
	ZZ_CLOCKCYCLES(5,0x8003D740);
	goto ZZ_3D740;
ZZ_31EB4_284:
	RA = 0x80032140; //ZZ_31EB4_28C
	A0 = SP + 16;
	ZZ_CLOCKCYCLES(2,0x80012660);
	goto ZZ_12660;
ZZ_31EB4_28C:
	A0 = EMU_ReadU32(GP + 740); //+ 0x2E4
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(S0);
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(8,0x80032224);
		goto ZZ_31EB4_370;
	}
	V0 = R0;
	V0 = EMU_ReadU32(A0 + 13724); //+ 0x359C
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(12,0x80032224);
		goto ZZ_31EB4_370;
	}
	V0 = R0;
	RA = 0x80032178; //ZZ_31EB4_2C4
	S0 = R0;
	ZZ_CLOCKCYCLES(14,0x80015A98);
	goto ZZ_15A98;
ZZ_31EB4_2C4:
	A1 = 0x1;
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	S3 = V0;
	A0 = EMU_ReadU32(V1 + 13776); //+ 0x35D0
	S2 = EMU_ReadU32(S3 + 16); //+ 0x10
	RA = 0x80032194; //ZZ_31EB4_2E0
	A2 = 0x1;
	ZZ_CLOCKCYCLES(7,0x80032FDC);
	goto ZZ_32FDC;
ZZ_31EB4_2E0:
	V1 = EMU_ReadU32(GP + 740); //+ 0x2E4
	V0 = EMU_ReadU32(S2);
	EMU_Write32(V1 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	EMU_Write32(V1 + 20,R0); //+ 0x14
	EMU_Write32(V1 + 24,R0); //+ 0x18
	EMU_Write32(V1 + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(V1 + 12); //+ 0xC
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 <<= 4;
	A0 <<= 4;
	EMU_Write32(V1 + 4,V0); //+ 0x4
	EMU_Write32(V1 + 8,A0); //+ 0x8
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	if ((int32_t)V0 <= 0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(18,0x80032224);
		goto ZZ_31EB4_370;
	}
	V0 = R0;
	S1 = S3;
	ZZ_CLOCKCYCLES(19,0x800321E0);
ZZ_31EB4_32C:
	V0 = EMU_ReadU32(S1 + 24); //+ 0x18
	V1 = EMU_ReadS16(V0 + 24); //+ 0x18
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6472); //+ 0x1948
	V0 = V0 < V1;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(9,0x80032210);
		goto ZZ_31EB4_35C;
	}
	S1 += 4;
	A0 = S3;
	RA = 0x80032210; //ZZ_31EB4_35C
	A1 = S0;
	ZZ_CLOCKCYCLES(12,0x8001BCC8);
	goto ZZ_1BCC8;
ZZ_31EB4_35C:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(5,0x800321E0);
		goto ZZ_31EB4_32C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(5,0x80032224);
ZZ_31EB4_370:
	RA = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 88;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80031D3C,ZZ_31BF8_144);
	ZZ_JUMPREGISTER(0x80032A24,ZZ_326D8_34C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80031EB4,0x80031F08,ZZ_31EB4);
ZZ_MARK_TARGET(0x80031F08,0x80031F10,ZZ_31EB4_54);
ZZ_MARK_TARGET(0x80031F10,0x80031F20,ZZ_31EB4_5C);
ZZ_MARK_TARGET(0x80031F20,0x80031F30,ZZ_31EB4_6C);
ZZ_MARK_TARGET(0x80031F30,0x80031F3C,ZZ_31EB4_7C);
ZZ_MARK_TARGET(0x80031F3C,0x80031F44,ZZ_31EB4_88);
ZZ_MARK_TARGET(0x80031F44,0x80031F7C,ZZ_31EB4_90);
ZZ_MARK_TARGET(0x80031F7C,0x80031F8C,ZZ_31EB4_C8);
ZZ_MARK_TARGET(0x80031F8C,0x80031F94,ZZ_31EB4_D8);
ZZ_MARK_TARGET(0x80031F94,0x80031FA4,ZZ_31EB4_E0);
ZZ_MARK_TARGET(0x80031FA4,0x80031FAC,ZZ_31EB4_F0);
ZZ_MARK_TARGET(0x80031FAC,0x80031FB4,ZZ_31EB4_F8);
ZZ_MARK_TARGET(0x80031FB4,0x80031FBC,ZZ_31EB4_100);
ZZ_MARK_TARGET(0x80031FBC,0x80031FCC,ZZ_31EB4_108);
ZZ_MARK_TARGET(0x80031FCC,0x80031FDC,ZZ_31EB4_118);
ZZ_MARK_TARGET(0x80031FDC,0x80031FF8,ZZ_31EB4_128);
ZZ_MARK_TARGET(0x80031FF8,0x8003201C,ZZ_31EB4_144);
ZZ_MARK_TARGET(0x8003201C,0x80032038,ZZ_31EB4_168);
ZZ_MARK_TARGET(0x80032038,0x80032040,ZZ_31EB4_184);
ZZ_MARK_TARGET(0x80032040,0x80032048,ZZ_31EB4_18C);
ZZ_MARK_TARGET(0x80032048,0x80032058,ZZ_31EB4_194);
ZZ_MARK_TARGET(0x80032058,0x8003205C,ZZ_31EB4_1A4);
ZZ_MARK_TARGET(0x8003205C,0x8003206C,ZZ_31EB4_1A8);
ZZ_MARK_TARGET(0x8003206C,0x800320B0,ZZ_31EB4_1B8);
ZZ_MARK_TARGET(0x800320B0,0x800320D4,ZZ_31EB4_1FC);
ZZ_MARK_TARGET(0x800320D4,0x800320E0,ZZ_31EB4_220);
ZZ_MARK_TARGET(0x800320E0,0x800320E8,ZZ_31EB4_22C);
ZZ_MARK_TARGET(0x800320E8,0x800320FC,ZZ_31EB4_234);
ZZ_MARK_TARGET(0x800320FC,0x80032124,ZZ_31EB4_248);
ZZ_MARK_TARGET(0x80032124,0x80032138,ZZ_31EB4_270);
ZZ_MARK_TARGET(0x80032138,0x80032140,ZZ_31EB4_284);
ZZ_MARK_TARGET(0x80032140,0x80032178,ZZ_31EB4_28C);
ZZ_MARK_TARGET(0x80032178,0x80032194,ZZ_31EB4_2C4);
ZZ_MARK_TARGET(0x80032194,0x800321E0,ZZ_31EB4_2E0);
ZZ_MARK_TARGET(0x800321E0,0x80032210,ZZ_31EB4_32C);
ZZ_MARK_TARGET(0x80032210,0x80032224,ZZ_31EB4_35C);
ZZ_MARK_TARGET(0x80032224,0x80032244,ZZ_31EB4_370);
