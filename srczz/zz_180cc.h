#ifdef ZZ_INCLUDE_CODE
ZZ_180CC:
	SP -= 200;
	EMU_Write32(SP + 160,S0); //+ 0xA0
	S0 = EMU_ReadU32(SP + 216); //+ 0xD8
	EMU_Write32(SP + 176,S4); //+ 0xB0
	S4 = A2;
	EMU_Write32(SP + 164,S1); //+ 0xA4
	S1 = A0;
	EMU_Write32(SP + 168,S2); //+ 0xA8
	S2 = S1;
	EMU_Write32(SP + 192,FP); //+ 0xC0
	FP = S4 + 128;
	EMU_Write32(SP + 196,RA); //+ 0xC4
	EMU_Write32(SP + 188,S7); //+ 0xBC
	EMU_Write32(SP + 184,S6); //+ 0xB8
	EMU_Write32(SP + 180,S5); //+ 0xB4
	EMU_Write32(SP + 172,S3); //+ 0xAC
	EMU_Write32(SP + 144,A1); //+ 0x90
	if (!S0)
	{
		EMU_Write32(SP + 152,A3); //+ 0x98
		ZZ_CLOCKCYCLES(19,0x8001811C);
		goto ZZ_180CC_50;
	}
	EMU_Write32(SP + 152,A3); //+ 0x98
	EMU_Write32(S0,R0);
	ZZ_CLOCKCYCLES(20,0x8001811C);
ZZ_180CC_50:
	A0 = 0x80050000;
	A0 += 30788;
	RA = 0x8001812C; //ZZ_180CC_60
	ZZ_CLOCKCYCLES(4,0x80042E9C);
	goto ZZ_42E9C;
ZZ_180CC_60:
	A0 = 0x80050000;
	A0 += 29292;
	RA = 0x8001813C; //ZZ_180CC_70
	ZZ_CLOCKCYCLES(4,0x80042F2C);
	goto ZZ_42F2C;
ZZ_180CC_70:
	V0 = EMU_ReadU32(S4 + 128); //+ 0x80
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30856); //+ 0x7888
	A0 = SP + 16;
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	EMU_Write16(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S4 + 132); //+ 0x84
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30860); //+ 0x788C
	A1 = SP + 44;
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	EMU_Write16(SP + 18,V0); //+ 0x12
	V0 = EMU_ReadU32(S4 + 136); //+ 0x88
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30864); //+ 0x7890
	A2 = SP + 136;
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	RA = 0x80018194; //ZZ_180CC_C8
	EMU_Write16(SP + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(22,0x80042FEC);
	goto ZZ_42FEC;
ZZ_180CC_C8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6320); //+ 0x18B0
	V1 = 0x10000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800188AC);
		goto ZZ_180CC_7E0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 744); //+ 0x2E8
	V1 = (int32_t)V0 >> 8;
	if (!V1)
	{
		EMU_Write32(SP + 136,V1); //+ 0x88
		ZZ_CLOCKCYCLES(16,0x800181F0);
		goto ZZ_180CC_124;
	}
	EMU_Write32(SP + 136,V1); //+ 0x88
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(21,0x80018434);
		goto ZZ_180CC_368;
	}
	if (V1)
	{
		ZZ_CLOCKCYCLES(23,0x80018204);
		goto ZZ_180CC_138;
	}
	ZZ_CLOCKCYCLES(23,0x800181F0);
ZZ_180CC_124:
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = (int32_t)V0 < 12001;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(5,0x800188F8);
		goto ZZ_180CC_82C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(5,0x80018204);
ZZ_180CC_138:
	V1 = EMU_ReadU32(S4 + 204); //+ 0xCC
	V0 = 0x40000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001838C);
		goto ZZ_180CC_2C0;
	}
	A3 = 0x80050000;
	A3 += 30928;
	A0 = EMU_ReadU32(SP + 52); //+ 0x34
	A1 = EMU_ReadU32(A3);
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x80018434);
		goto ZZ_180CC_368;
	}
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(15,0x800182E0);
		goto ZZ_180CC_214;
	}
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	if (!T3)
	{
		A0 = S4 + 8;
		ZZ_CLOCKCYCLES(19,0x80018258);
		goto ZZ_180CC_18C;
	}
	A0 = S4 + 8;
	A1 = S2 + 44;
	ZZ_CLOCKCYCLES(21,0x8001825C);
	goto ZZ_180CC_190;
ZZ_180CC_18C:
	A1 = S1 + 44;
	ZZ_CLOCKCYCLES(1,0x8001825C);
ZZ_180CC_190:
	A2 = FP;
	RA = 0x80018268; //ZZ_180CC_19C
	A3 -= 72;
	ZZ_CLOCKCYCLES(3,0x800351C8);
	goto ZZ_351C8;
ZZ_180CC_19C:
	A0 = 0x1F800000;
	A0 = EMU_ReadU32(A0 + 72); //+ 0x48
	A1 = 0x1F800000;
	A1 = EMU_ReadU32(A1 + 76); //+ 0x4C
	V1 = 0x1F800000;
	V1 = EMU_ReadU32(V1 + 80); //+ 0x50
	A2 = 0x1F800000;
	A2 = EMU_ReadU32(A2 + 84); //+ 0x54
	V0 = (int32_t)A0 < -256;
	if (!V0)
	{
		V0 = (int32_t)V1 < -256;
		ZZ_CLOCKCYCLES(11,0x8001829C);
		goto ZZ_180CC_1D0;
	}
	V0 = (int32_t)V1 < -256;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(13,0x800188F8);
		goto ZZ_180CC_82C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(13,0x8001829C);
ZZ_180CC_1D0:
	V0 = (int32_t)A0 < 257;
	if (V0)
	{
		V0 = (int32_t)A1 < -108;
		ZZ_CLOCKCYCLES(3,0x800182B4);
		goto ZZ_180CC_1E8;
	}
	V0 = (int32_t)A1 < -108;
	V0 = (int32_t)V1 < 257;
	if (!V0)
	{
		V0 = (int32_t)A1 < -108;
		ZZ_CLOCKCYCLES(6,0x80018434);
		goto ZZ_180CC_368;
	}
	V0 = (int32_t)A1 < -108;
	ZZ_CLOCKCYCLES(6,0x800182B4);
ZZ_180CC_1E8:
	if (!V0)
	{
		V0 = (int32_t)A2 < -108;
		ZZ_CLOCKCYCLES(2,0x800182C4);
		goto ZZ_180CC_1F8;
	}
	V0 = (int32_t)A2 < -108;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(4,0x800188F8);
		goto ZZ_180CC_82C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(4,0x800182C4);
ZZ_180CC_1F8:
	V0 = (int32_t)A1 < 109;
	if (V0)
	{
		V0 = (int32_t)A2 < 109;
		ZZ_CLOCKCYCLES(3,0x8001838C);
		goto ZZ_180CC_2C0;
	}
	V0 = (int32_t)A2 < 109;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(5,0x8001838C);
		goto ZZ_180CC_2C0;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(7,0x800188F8);
	goto ZZ_180CC_82C;
ZZ_180CC_214:
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	EMU_SMultiply(V0,A1);
	V0 = LO;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(9,0x80018308);
		goto ZZ_180CC_23C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x80018308);
ZZ_180CC_23C:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80018320);
		goto ZZ_180CC_254;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80018320);
		goto ZZ_180CC_254;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80018320);
ZZ_180CC_254:
	V0 = LO;
	V1 = EMU_ReadU32(SP + 48); //+ 0x30
	EMU_SMultiply(V1,A1);
	V1 = LO;
	EMU_SDivide(V1,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(10,0x8001834C);
		goto ZZ_180CC_280;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8001834C);
ZZ_180CC_280:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80018364);
		goto ZZ_180CC_298;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80018364);
		goto ZZ_180CC_298;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80018364);
ZZ_180CC_298:
	A0 = LO;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(3,0x80018374);
		goto ZZ_180CC_2A8;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(4,0x80018374);
ZZ_180CC_2A8:
	V0 = (int32_t)V0 < 317;
	if (!V0)
	{
		V0 = A0 + 138;
		ZZ_CLOCKCYCLES(3,0x80018434);
		goto ZZ_180CC_368;
	}
	V0 = A0 + 138;
	V0 = V0 < 327;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(6,0x800188F8);
		goto ZZ_180CC_82C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x8001838C);
ZZ_180CC_2C0:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 26292); //+ 0x66B4
	if (S4 == A0)
	{
		ZZ_CLOCKCYCLES(5,0x800188AC);
		goto ZZ_180CC_7E0;
	}
	V0 = EMU_ReadU32(S4 + 204); //+ 0xCC
	V0 &= 0x400;
	if (V0)
	{
		ZZ_CLOCKCYCLES(10,0x800188AC);
		goto ZZ_180CC_7E0;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(A1 + 740); //+ 0x2E4
	V0 = 0x3;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 4;
		ZZ_CLOCKCYCLES(19,0x800187D8);
		goto ZZ_180CC_70C;
	}
	V0 = (int32_t)V1 < 4;
	if (!V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(21,0x800183F0);
		goto ZZ_180CC_324;
	}
	V0 = 0x2;
	if (V1 == V0)
	{
		T0 = S4 + 48;
		ZZ_CLOCKCYCLES(23,0x80018404);
		goto ZZ_180CC_338;
	}
	T0 = S4 + 48;
	ZZ_CLOCKCYCLES(25,0x800188AC);
	goto ZZ_180CC_7E0;
ZZ_180CC_324:
	V0 = 0x4;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x800184C4);
		goto ZZ_180CC_3F8;
	}
	ZZ_CLOCKCYCLES(5,0x800188AC);
	goto ZZ_180CC_7E0;
ZZ_180CC_338:
	V1 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6328); //+ 0x18B8
	V1 = V1 - V0;
	if ((int32_t)V1 <= 0)
	{
		T1 = A1 + 792;
		ZZ_CLOCKCYCLES(7,0x8001843C);
		goto ZZ_180CC_370;
	}
	T1 = A1 + 792;
	V1 <<= 3;
	V0 = 0x7FFF;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(12,0x80018444);
		goto ZZ_180CC_378;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(12,0x80018434);
ZZ_180CC_368:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x800188F8);
	goto ZZ_180CC_82C;
ZZ_180CC_370:
	V1 = R0;
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80018444);
ZZ_180CC_378:
	T2 = 0x7FFF;
	A3 = T0;
	A2 = T1;
	ZZ_CLOCKCYCLES(3,0x80018450);
ZZ_180CC_384:
	V0 = EMU_ReadU16(A2);
	A0 = V0 + V1;
	V0 = (int32_t)T2 < (int32_t)A0;
	if (!V0)
	{
		A2 += 2;
		ZZ_CLOCKCYCLES(6,0x8001846C);
		goto ZZ_180CC_3A0;
	}
	A2 += 2;
	A0 = 0x7FFF;
	ZZ_CLOCKCYCLES(7,0x8001846C);
ZZ_180CC_3A0:
	EMU_Write16(A3,A0);
	A1 += 1;
	V0 = (int32_t)A1 < 12;
	if (V0)
	{
		A3 += 2;
		ZZ_CLOCKCYCLES(5,0x80018450);
		goto ZZ_180CC_384;
	}
	A3 += 2;
	A1 = 0xC;
	A3 = T0 + 24;
	A2 = T1 + 24;
	ZZ_CLOCKCYCLES(8,0x8001848C);
ZZ_180CC_3C0:
	V0 = EMU_ReadU16(A2);
	A0 = V0 + V1;
	V0 = (int32_t)A0 < 4097;
	if (V0)
	{
		A2 += 2;
		ZZ_CLOCKCYCLES(6,0x800184A8);
		goto ZZ_180CC_3DC;
	}
	A2 += 2;
	A0 = 0x1000;
	ZZ_CLOCKCYCLES(7,0x800184A8);
ZZ_180CC_3DC:
	EMU_Write16(A3,A0);
	A1 += 1;
	V0 = (int32_t)A1 < 24;
	if (V0)
	{
		A3 += 2;
		ZZ_CLOCKCYCLES(5,0x8001848C);
		goto ZZ_180CC_3C0;
	}
	A3 += 2;
	ZZ_CLOCKCYCLES(7,0x800188AC);
	goto ZZ_180CC_7E0;
ZZ_180CC_3F8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6348); //+ 0x18CC
	if (!V0)
	{
		S3 = S4 + 48;
		ZZ_CLOCKCYCLES(5,0x800184EC);
		goto ZZ_180CC_420;
	}
	S3 = S4 + 48;
	S5 = EMU_ReadU32(V0 + 128); //+ 0x80
	S6 = EMU_ReadU32(V0 + 132); //+ 0x84
	S7 = EMU_ReadU32(V0 + 136); //+ 0x88
	EMU_Write16(S3 + 18,R0); //+ 0x12
	ZZ_CLOCKCYCLES(10,0x800184FC);
	goto ZZ_180CC_430;
ZZ_180CC_420:
	S5 = EMU_ReadU32(A0 + 128); //+ 0x80
	S6 = EMU_ReadU32(A0 + 132); //+ 0x84
	S7 = EMU_ReadU32(A0 + 136); //+ 0x88
	EMU_Write16(S3 + 18,R0); //+ 0x12
	ZZ_CLOCKCYCLES(4,0x800184FC);
ZZ_180CC_430:
	EMU_Write16(S3 + 20,R0); //+ 0x14
	EMU_Write16(S3 + 22,R0); //+ 0x16
	EMU_Write16(S3,R0);
	EMU_Write16(S3 + 2,R0); //+ 0x2
	EMU_Write16(S3 + 4,R0); //+ 0x4
	EMU_Write16(S3 + 6,R0); //+ 0x6
	EMU_Write16(S3 + 8,R0); //+ 0x8
	EMU_Write16(S3 + 10,R0); //+ 0xA
	EMU_Write16(S3 + 12,R0); //+ 0xC
	EMU_Write16(S3 + 14,R0); //+ 0xE
	EMU_Write16(S3 + 16,R0); //+ 0x10
	S2 = EMU_ReadU32(S4 + 128); //+ 0x80
	V0 = S2 - S5;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	S0 = EMU_ReadU32(S4 + 132); //+ 0x84
	V0 = 0xFFFC0000;
	V0 |= 0xE000;
	S0 += V0;
	V1 = LO;
	V0 = S0 - S6;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	S1 = EMU_ReadU32(S4 + 136); //+ 0x88
	A0 = LO;
	V0 = S1 - S7;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	V1 += A0;
	A0 = LO;
	RA = 0x80018580; //ZZ_180CC_4B4
	A0 += V1;
	ZZ_CLOCKCYCLES(33,0x80042B9C);
	goto ZZ_42B9C;
ZZ_180CC_4B4:
	V1 = EMU_ReadU32(GP + 116); //+ 0x74
	if ((int32_t)V1 > 0)
	{
		A0 = V0;
		ZZ_CLOCKCYCLES(4,0x80018598);
		goto ZZ_180CC_4CC;
	}
	A0 = V0;
	V0 = 0x1;
	EMU_Write32(GP + 116,V0); //+ 0x74
	ZZ_CLOCKCYCLES(6,0x80018598);
ZZ_180CC_4CC:
	if ((int32_t)A0 > 0)
	{
		V0 = S5 - S2;
		ZZ_CLOCKCYCLES(2,0x800185A4);
		goto ZZ_180CC_4D8;
	}
	V0 = S5 - S2;
	A0 = 0x1;
	ZZ_CLOCKCYCLES(3,0x800185A4);
ZZ_180CC_4D8:
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(4,0x800185B8);
		goto ZZ_180CC_4EC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(5,0x800185B8);
ZZ_180CC_4EC:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800185D0);
		goto ZZ_180CC_504;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800185D0);
		goto ZZ_180CC_504;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800185D0);
ZZ_180CC_504:
	S2 = LO;
	V0 = S6 - S0;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(6,0x800185EC);
		goto ZZ_180CC_520;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x800185EC);
ZZ_180CC_520:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80018604);
		goto ZZ_180CC_538;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80018604);
		goto ZZ_180CC_538;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80018604);
ZZ_180CC_538:
	S0 = LO;
	V0 = 0x1770;
	A1 = V0 - A0;
	V0 = S7 - S1;
	V0 <<= 8;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(8,0x80018628);
		goto ZZ_180CC_55C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x80018628);
ZZ_180CC_55C:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80018640);
		goto ZZ_180CC_574;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80018640);
		goto ZZ_180CC_574;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80018640);
ZZ_180CC_574:
	S1 = LO;
	if ((int32_t)A1 >= 0)
	{
		EMU_SMultiply(S2,A1);
		ZZ_CLOCKCYCLES(4,0x80018658);
		goto ZZ_180CC_58C;
	}
	EMU_SMultiply(S2,A1);
	A1 = R0;
	EMU_SMultiply(S2,A1);
	ZZ_CLOCKCYCLES(6,0x80018658);
ZZ_180CC_58C:
	V1 = LO;
	EMU_SMultiply(S0,A1);
	A0 = LO;
	EMU_SMultiply(S1,A1);
	A1 = LO;
	V0 = EMU_ReadU32(GP + 116); //+ 0x74
	S2 = (int32_t)V1 >> 8;
	EMU_SDivide(S2,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(14,0x80018694);
		goto ZZ_180CC_5C8;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x80018694);
ZZ_180CC_5C8:
	AT = -1;
	if (V0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800186AC);
		goto ZZ_180CC_5E0;
	}
	AT = 0x80000000;
	if (S2 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800186AC);
		goto ZZ_180CC_5E0;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800186AC);
ZZ_180CC_5E0:
	S2 = LO;
	S0 = (int32_t)A0 >> 8;
	EMU_SDivide(S0,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800186C8);
		goto ZZ_180CC_5FC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x800186C8);
ZZ_180CC_5FC:
	AT = -1;
	if (V0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800186E0);
		goto ZZ_180CC_614;
	}
	AT = 0x80000000;
	if (S0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800186E0);
		goto ZZ_180CC_614;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800186E0);
ZZ_180CC_614:
	S0 = LO;
	S1 = (int32_t)A1 >> 8;
	EMU_SDivide(S1,V0);
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800186FC);
		goto ZZ_180CC_630;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x800186FC);
ZZ_180CC_630:
	AT = -1;
	if (V0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80018714);
		goto ZZ_180CC_648;
	}
	AT = 0x80000000;
	if (S1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80018714);
		goto ZZ_180CC_648;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80018714);
ZZ_180CC_648:
	S1 = LO;
	V0 = (int32_t)S2 < 6001;
	if (V0)
	{
		V0 = (int32_t)S2 < -6000;
		ZZ_CLOCKCYCLES(4,0x8001872C);
		goto ZZ_180CC_660;
	}
	V0 = (int32_t)S2 < -6000;
	S2 = 0x1770;
	V0 = (int32_t)S2 < -6000;
	ZZ_CLOCKCYCLES(6,0x8001872C);
ZZ_180CC_660:
	if (!V0)
	{
		V0 = (int32_t)S0 < 6001;
		ZZ_CLOCKCYCLES(2,0x80018738);
		goto ZZ_180CC_66C;
	}
	V0 = (int32_t)S0 < 6001;
	S2 = -6000;
	ZZ_CLOCKCYCLES(3,0x80018738);
ZZ_180CC_66C:
	if (V0)
	{
		V0 = (int32_t)S0 < -6000;
		ZZ_CLOCKCYCLES(2,0x80018748);
		goto ZZ_180CC_67C;
	}
	V0 = (int32_t)S0 < -6000;
	S0 = 0x1770;
	V0 = (int32_t)S0 < -6000;
	ZZ_CLOCKCYCLES(4,0x80018748);
ZZ_180CC_67C:
	if (!V0)
	{
		V0 = (int32_t)S1 < 6001;
		ZZ_CLOCKCYCLES(2,0x80018754);
		goto ZZ_180CC_688;
	}
	V0 = (int32_t)S1 < 6001;
	S0 = -6000;
	ZZ_CLOCKCYCLES(3,0x80018754);
ZZ_180CC_688:
	if (V0)
	{
		V0 = (int32_t)S1 < -6000;
		ZZ_CLOCKCYCLES(2,0x80018764);
		goto ZZ_180CC_698;
	}
	V0 = (int32_t)S1 < -6000;
	S1 = 0x1770;
	V0 = (int32_t)S1 < -6000;
	ZZ_CLOCKCYCLES(4,0x80018764);
ZZ_180CC_698:
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(2,0x80018770);
		goto ZZ_180CC_6A4;
	}
	A0 = R0;
	S1 = -6000;
	ZZ_CLOCKCYCLES(3,0x80018770);
ZZ_180CC_6A4:
	V1 = S3;
	ZZ_CLOCKCYCLES(1,0x80018774);
ZZ_180CC_6A8:
	EMU_Write16(V1,S2);
	EMU_Write16(V1 + 2,S0); //+ 0x2
	EMU_Write16(V1 + 4,S1); //+ 0x4
	A0 += 1;
	V0 = (int32_t)A0 < 3;
	if (V0)
	{
		V1 += 6;
		ZZ_CLOCKCYCLES(7,0x80018774);
		goto ZZ_180CC_6A8;
	}
	V1 += 6;
	EMU_SMultiply(S2,S2);
	V0 = LO;
	EMU_SMultiply(S0,S0);
	V1 = LO;
	EMU_SMultiply(S1,S1);
	V0 += V1;
	A0 = LO;
	RA = 0x800187C4; //ZZ_180CC_6F8
	A0 += V0;
	ZZ_CLOCKCYCLES(20,0x80042B9C);
	goto ZZ_42B9C;
ZZ_180CC_6F8:
	V0 = (int32_t)V0 >> 5;
	EMU_Write16(S3 + 18,V0); //+ 0x12
	EMU_Write16(S3 + 20,V0); //+ 0x14
	EMU_Write16(S3 + 22,V0); //+ 0x16
	ZZ_CLOCKCYCLES(5,0x800188AC);
	goto ZZ_180CC_7E0;
ZZ_180CC_70C:
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	if (!T3)
	{
		T0 = S4 + 48;
		ZZ_CLOCKCYCLES(4,0x8001885C);
		goto ZZ_180CC_790;
	}
	T0 = S4 + 48;
	V1 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6328); //+ 0x18B8
	V1 = V1 - V0;
	if ((int32_t)V1 <= 0)
	{
		A0 = A1 + 792;
		ZZ_CLOCKCYCLES(11,0x8001881C);
		goto ZZ_180CC_750;
	}
	A0 = A1 + 792;
	V1 = (int32_t)V1 >> 2;
	V0 = (int32_t)V1 < 28001;
	if (V0)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(15,0x80018824);
		goto ZZ_180CC_758;
	}
	A2 = R0;
	V0 = R0;
	ZZ_CLOCKCYCLES(17,0x800188F8);
	goto ZZ_180CC_82C;
ZZ_180CC_750:
	V1 = R0;
	A2 = R0;
	ZZ_CLOCKCYCLES(2,0x80018824);
ZZ_180CC_758:
	A1 = T0;
	ZZ_CLOCKCYCLES(1,0x80018828);
ZZ_180CC_75C:
	V0 = EMU_ReadU16(A0);
	V0 = V0 - V1;
	if ((int32_t)V0 >= 0)
	{
		A0 += 2;
		ZZ_CLOCKCYCLES(5,0x80018840);
		goto ZZ_180CC_774;
	}
	A0 += 2;
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x80018840);
ZZ_180CC_774:
	EMU_Write16(A1,V0);
	A2 += 1;
	V0 = (int32_t)A2 < 24;
	if (V0)
	{
		A1 += 2;
		ZZ_CLOCKCYCLES(5,0x80018828);
		goto ZZ_180CC_75C;
	}
	A1 += 2;
	ZZ_CLOCKCYCLES(7,0x800188AC);
	goto ZZ_180CC_7E0;
ZZ_180CC_790:
	A0 = 0x51EB0000;
	V1 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6328); //+ 0x18B8
	A0 |= 0x851F;
	V1 = V1 - V0;
	EMU_SMultiply(V1,A0);
	V1 = (int32_t)V1 >> 31;
	V0 = HI;
	V0 = (int32_t)V0 >> 6;
	V0 = V0 - V1;
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(S0,V0);
		ZZ_CLOCKCYCLES(13,0x80018894);
		goto ZZ_180CC_7C8;
	}
	EMU_Write32(S0,V0);
	EMU_Write32(S0,R0);
	ZZ_CLOCKCYCLES(14,0x80018894);
ZZ_180CC_7C8:
	V0 = EMU_ReadU32(S0);
	V0 = (int32_t)V0 < 9;
	if (V0)
	{
		V0 = 0x8;
		ZZ_CLOCKCYCLES(5,0x800188AC);
		goto ZZ_180CC_7E0;
	}
	V0 = 0x8;
	EMU_Write32(S0,V0);
	ZZ_CLOCKCYCLES(6,0x800188AC);
ZZ_180CC_7E0:
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	if (!T3)
	{
		A2 = FP;
		ZZ_CLOCKCYCLES(4,0x800188D8);
		goto ZZ_180CC_80C;
	}
	A2 = FP;
	A0 = 0x80050000;
	A0 += 30756;
	A1 = EMU_ReadU32(SP + 144); //+ 0x90
	RA = 0x800188D0; //ZZ_180CC_804
	A3 = S4 + 48;
	ZZ_CLOCKCYCLES(9,0x8003913C);
	goto ZZ_3913C;
ZZ_180CC_804:
	ZZ_CLOCKCYCLES(2,0x800188EC);
	goto ZZ_180CC_820;
ZZ_180CC_80C:
	A0 = 0x80050000;
	A0 += 30756;
	A1 = EMU_ReadU32(SP + 144); //+ 0x90
	RA = 0x800188EC; //ZZ_180CC_820
	A3 = S4 + 48;
	ZZ_CLOCKCYCLES(5,0x80039BD4);
	goto ZZ_39BD4;
ZZ_180CC_820:
	RA = 0x800188F4; //ZZ_180CC_828
	A0 = SP + 24;
	ZZ_CLOCKCYCLES(2,0x80042F2C);
	goto ZZ_42F2C;
ZZ_180CC_828:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x800188F8);
ZZ_180CC_82C:
	RA = EMU_ReadU32(SP + 196); //+ 0xC4
	FP = EMU_ReadU32(SP + 192); //+ 0xC0
	S7 = EMU_ReadU32(SP + 188); //+ 0xBC
	S6 = EMU_ReadU32(SP + 184); //+ 0xB8
	S5 = EMU_ReadU32(SP + 180); //+ 0xB4
	S4 = EMU_ReadU32(SP + 176); //+ 0xB0
	S3 = EMU_ReadU32(SP + 172); //+ 0xAC
	S2 = EMU_ReadU32(SP + 168); //+ 0xA8
	S1 = EMU_ReadU32(SP + 164); //+ 0xA4
	S0 = EMU_ReadU32(SP + 160); //+ 0xA0
	SP += 200;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x800189B4,ZZ_18964_50);
	ZZ_JUMPREGISTER(0x80018B08,ZZ_18A40_C8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800180CC,0x8001811C,ZZ_180CC);
ZZ_MARK_TARGET(0x8001811C,0x8001812C,ZZ_180CC_50);
ZZ_MARK_TARGET(0x8001812C,0x8001813C,ZZ_180CC_60);
ZZ_MARK_TARGET(0x8001813C,0x80018194,ZZ_180CC_70);
ZZ_MARK_TARGET(0x80018194,0x800181F0,ZZ_180CC_C8);
ZZ_MARK_TARGET(0x800181F0,0x80018204,ZZ_180CC_124);
ZZ_MARK_TARGET(0x80018204,0x80018258,ZZ_180CC_138);
ZZ_MARK_TARGET(0x80018258,0x8001825C,ZZ_180CC_18C);
ZZ_MARK_TARGET(0x8001825C,0x80018268,ZZ_180CC_190);
ZZ_MARK_TARGET(0x80018268,0x8001829C,ZZ_180CC_19C);
ZZ_MARK_TARGET(0x8001829C,0x800182B4,ZZ_180CC_1D0);
ZZ_MARK_TARGET(0x800182B4,0x800182C4,ZZ_180CC_1E8);
ZZ_MARK_TARGET(0x800182C4,0x800182E0,ZZ_180CC_1F8);
ZZ_MARK_TARGET(0x800182E0,0x80018308,ZZ_180CC_214);
ZZ_MARK_TARGET(0x80018308,0x80018320,ZZ_180CC_23C);
ZZ_MARK_TARGET(0x80018320,0x8001834C,ZZ_180CC_254);
ZZ_MARK_TARGET(0x8001834C,0x80018364,ZZ_180CC_280);
ZZ_MARK_TARGET(0x80018364,0x80018374,ZZ_180CC_298);
ZZ_MARK_TARGET(0x80018374,0x8001838C,ZZ_180CC_2A8);
ZZ_MARK_TARGET(0x8001838C,0x800183F0,ZZ_180CC_2C0);
ZZ_MARK_TARGET(0x800183F0,0x80018404,ZZ_180CC_324);
ZZ_MARK_TARGET(0x80018404,0x80018434,ZZ_180CC_338);
ZZ_MARK_TARGET(0x80018434,0x8001843C,ZZ_180CC_368);
ZZ_MARK_TARGET(0x8001843C,0x80018444,ZZ_180CC_370);
ZZ_MARK_TARGET(0x80018444,0x80018450,ZZ_180CC_378);
ZZ_MARK_TARGET(0x80018450,0x8001846C,ZZ_180CC_384);
ZZ_MARK_TARGET(0x8001846C,0x8001848C,ZZ_180CC_3A0);
ZZ_MARK_TARGET(0x8001848C,0x800184A8,ZZ_180CC_3C0);
ZZ_MARK_TARGET(0x800184A8,0x800184C4,ZZ_180CC_3DC);
ZZ_MARK_TARGET(0x800184C4,0x800184EC,ZZ_180CC_3F8);
ZZ_MARK_TARGET(0x800184EC,0x800184FC,ZZ_180CC_420);
ZZ_MARK_TARGET(0x800184FC,0x80018580,ZZ_180CC_430);
ZZ_MARK_TARGET(0x80018580,0x80018598,ZZ_180CC_4B4);
ZZ_MARK_TARGET(0x80018598,0x800185A4,ZZ_180CC_4CC);
ZZ_MARK_TARGET(0x800185A4,0x800185B8,ZZ_180CC_4D8);
ZZ_MARK_TARGET(0x800185B8,0x800185D0,ZZ_180CC_4EC);
ZZ_MARK_TARGET(0x800185D0,0x800185EC,ZZ_180CC_504);
ZZ_MARK_TARGET(0x800185EC,0x80018604,ZZ_180CC_520);
ZZ_MARK_TARGET(0x80018604,0x80018628,ZZ_180CC_538);
ZZ_MARK_TARGET(0x80018628,0x80018640,ZZ_180CC_55C);
ZZ_MARK_TARGET(0x80018640,0x80018658,ZZ_180CC_574);
ZZ_MARK_TARGET(0x80018658,0x80018694,ZZ_180CC_58C);
ZZ_MARK_TARGET(0x80018694,0x800186AC,ZZ_180CC_5C8);
ZZ_MARK_TARGET(0x800186AC,0x800186C8,ZZ_180CC_5E0);
ZZ_MARK_TARGET(0x800186C8,0x800186E0,ZZ_180CC_5FC);
ZZ_MARK_TARGET(0x800186E0,0x800186FC,ZZ_180CC_614);
ZZ_MARK_TARGET(0x800186FC,0x80018714,ZZ_180CC_630);
ZZ_MARK_TARGET(0x80018714,0x8001872C,ZZ_180CC_648);
ZZ_MARK_TARGET(0x8001872C,0x80018738,ZZ_180CC_660);
ZZ_MARK_TARGET(0x80018738,0x80018748,ZZ_180CC_66C);
ZZ_MARK_TARGET(0x80018748,0x80018754,ZZ_180CC_67C);
ZZ_MARK_TARGET(0x80018754,0x80018764,ZZ_180CC_688);
ZZ_MARK_TARGET(0x80018764,0x80018770,ZZ_180CC_698);
ZZ_MARK_TARGET(0x80018770,0x80018774,ZZ_180CC_6A4);
ZZ_MARK_TARGET(0x80018774,0x800187C4,ZZ_180CC_6A8);
ZZ_MARK_TARGET(0x800187C4,0x800187D8,ZZ_180CC_6F8);
ZZ_MARK_TARGET(0x800187D8,0x8001881C,ZZ_180CC_70C);
ZZ_MARK_TARGET(0x8001881C,0x80018824,ZZ_180CC_750);
ZZ_MARK_TARGET(0x80018824,0x80018828,ZZ_180CC_758);
ZZ_MARK_TARGET(0x80018828,0x80018840,ZZ_180CC_75C);
ZZ_MARK_TARGET(0x80018840,0x8001885C,ZZ_180CC_774);
ZZ_MARK_TARGET(0x8001885C,0x80018894,ZZ_180CC_790);
ZZ_MARK_TARGET(0x80018894,0x800188AC,ZZ_180CC_7C8);
ZZ_MARK_TARGET(0x800188AC,0x800188D0,ZZ_180CC_7E0);
ZZ_MARK_TARGET(0x800188D0,0x800188D8,ZZ_180CC_804);
ZZ_MARK_TARGET(0x800188D8,0x800188EC,ZZ_180CC_80C);
ZZ_MARK_TARGET(0x800188EC,0x800188F4,ZZ_180CC_820);
ZZ_MARK_TARGET(0x800188F4,0x800188F8,ZZ_180CC_828);
ZZ_MARK_TARGET(0x800188F8,0x8001892C,ZZ_180CC_82C);
