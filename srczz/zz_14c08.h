#ifdef ZZ_INCLUDE_CODE
ZZ_14C08:
	SP -= 40;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	V0 = (int32_t)S0 >> 1;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	EMU_Write32(SP + 36,RA); //+ 0x24
	V0 += V1;
	A0 = EMU_ReadU32(V0);
	V0 = (int32_t)A0 < -254;
	if (V0)
	{
		A2 = A1;
		ZZ_CLOCKCYCLES(14,0x80014C74);
		goto ZZ_14C08_6C;
	}
	A2 = A1;
	A0 = R0;
	A1 = S0;
	A3 = SP + 24;
	V0 = 0x1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(19,0x80014C54);
ZZ_14C08_4C:
	RA = 0x80014C5C; //ZZ_14C08_54
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(2,0x800146F0);
	goto ZZ_146F0;
ZZ_14C08_54:
	A0 = V0;
	V0 = (int32_t)A0 < -254;
	if (V0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(4,0x80014CC4);
		goto ZZ_14C08_BC;
	}
	V0 = A0;
	ZZ_CLOCKCYCLES(6,0x80014CEC);
	goto ZZ_14C08_E4;
ZZ_14C08_6C:
	V0 = -255;
	if (A0 == V0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(3,0x80014CEC);
		goto ZZ_14C08_E4;
	}
	V0 = A0;
	V1 = EMU_ReadU16(A0 + 6); //+ 0x6
	V0 = V1 - 2;
	V0 = V0 < 2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x80014CE4);
		goto ZZ_14C08_DC;
	}
	if (V1)
	{
		V0 = 0x14;
		ZZ_CLOCKCYCLES(11,0x80014CB4);
		goto ZZ_14C08_AC;
	}
	V0 = 0x14;
	A1 = S0;
	A3 = SP + 28;
	V0 = 0x1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(16,0x80014C54);
	goto ZZ_14C08_4C;
ZZ_14C08_AC:
	V1 = EMU_ReadS16(A0 + 4); //+ 0x4
	if (V1 == V0)
	{
		EMU_Write32(A0 + 24,A2); //+ 0x18
		ZZ_CLOCKCYCLES(4,0x80014CE4);
		goto ZZ_14C08_DC;
	}
	EMU_Write32(A0 + 24,A2); //+ 0x18
	ZZ_CLOCKCYCLES(4,0x80014CC4);
ZZ_14C08_BC:
	RA = 0x80014CCC; //ZZ_14C08_C4
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x800134C8);
	goto ZZ_134C8;
ZZ_14C08_C4:
	V0 = (int32_t)S0 >> 1;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12356); //+ 0xFFFFCFBC
	V0 <<= 2;
	V0 += V1;
	A0 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(6,0x80014CE4);
ZZ_14C08_DC:
	V0 = A0;
	ZZ_CLOCKCYCLES(2,0x80014CEC);
ZZ_14C08_E4:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80015330,ZZ_15118_218);
	ZZ_JUMPREGISTER(0x80015218,ZZ_15118_100);
	ZZ_JUMPREGISTER(0x80015B28,ZZ_15A98_90);
	ZZ_JUMPREGISTER(0x80014D1C,ZZ_14D00_1C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80014C08,0x80014C54,ZZ_14C08);
ZZ_MARK_TARGET(0x80014C54,0x80014C5C,ZZ_14C08_4C);
ZZ_MARK_TARGET(0x80014C5C,0x80014C74,ZZ_14C08_54);
ZZ_MARK_TARGET(0x80014C74,0x80014CB4,ZZ_14C08_6C);
ZZ_MARK_TARGET(0x80014CB4,0x80014CC4,ZZ_14C08_AC);
ZZ_MARK_TARGET(0x80014CC4,0x80014CCC,ZZ_14C08_BC);
ZZ_MARK_TARGET(0x80014CCC,0x80014CE4,ZZ_14C08_C4);
ZZ_MARK_TARGET(0x80014CE4,0x80014CEC,ZZ_14C08_DC);
ZZ_MARK_TARGET(0x80014CEC,0x80014D00,ZZ_14C08_E4);
