#ifdef ZZ_INCLUDE_CODE
ZZ_27BC4:
	SP -= 40;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A0;
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S1 = A1;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A2;
	V0 = (int32_t)S2 < 39;
	if (V0)
	{
		EMU_Write32(SP + 36,RA); //+ 0x24
		ZZ_CLOCKCYCLES(10,0x80027EC4);
		goto ZZ_27BC4_300;
	}
	EMU_Write32(SP + 36,RA); //+ 0x24
	A0 = S1;
	A1 = S0;
	A2 = R0;
	A3 = R0;
	RA = 0x80027C04; //ZZ_27BC4_40
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(16,0x80027A4C);
	goto ZZ_27A4C;
ZZ_27BC4_40:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x13;
	if (V1 != V0)
	{
		V0 = 0x7;
		ZZ_CLOCKCYCLES(7,0x80027C8C);
		goto ZZ_27BC4_C8;
	}
	V0 = 0x7;
	V0 = 0x28;
	if (S2 != V0)
	{
		V0 = (int32_t)S2 < 40;
		ZZ_CLOCKCYCLES(10,0x80027E8C);
		goto ZZ_27BC4_2C8;
	}
	V0 = (int32_t)S2 < 40;
	A0 = S1;
	A1 = S0;
	A2 = 0x64;
	A3 = 0x64;
	V0 = 0x64;
	RA = 0x80027C48; //ZZ_27BC4_84
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(17,0x80027A4C);
	goto ZZ_27A4C;
ZZ_27BC4_84:
	V1 = 0xFF;
	V0 = 0x3B0;
	EMU_Write16(S0 + 26,V0); //+ 0x1A
	EMU_Write16(S0 + 28,V0); //+ 0x1C
	V0 = 0xF9;
	EMU_Write16(S0 + 32,V0); //+ 0x20
	V0 = 0x64;
	EMU_Write16(S0 + 42,R0); //+ 0x2A
	EMU_Write16(S0 + 44,V1); //+ 0x2C
	EMU_Write16(S0 + 46,V1); //+ 0x2E
	EMU_Write16(S0 + 24,R0); //+ 0x18
	EMU_Write16(S0 + 30,R0); //+ 0x1E
	EMU_Write16(S0 + 34,V1); //+ 0x22
	EMU_Write16(S0 + 36,R0); //+ 0x24
	EMU_Write16(S0 + 38,V0); //+ 0x26
	EMU_Write16(S0 + 40,V1); //+ 0x28
	ZZ_CLOCKCYCLES(17,0x80027E88);
	goto ZZ_27BC4_2C4;
ZZ_27BC4_C8:
	if (V1 != V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(2,0x80027D30);
		goto ZZ_27BC4_16C;
	}
	V0 = 0x3;
	V0 = 0x28;
	if (S2 != V0)
	{
		V0 = (int32_t)S2 < 40;
		ZZ_CLOCKCYCLES(5,0x80027E8C);
		goto ZZ_27BC4_2C8;
	}
	V0 = (int32_t)S2 < 40;
	V1 = 0xFF;
	V0 = -8601;
	EMU_Write16(S0 + 2,V0); //+ 0x2
	V0 = -3809;
	EMU_Write16(S0 + 6,V0); //+ 0x6
	V0 = -1679;
	EMU_Write16(S0 + 8,V0); //+ 0x8
	V0 = 0xA3D;
	EMU_Write16(S0 + 10,V0); //+ 0xA
	V0 = 0xDEB;
	EMU_Write16(S0 + 12,V0); //+ 0xC
	V0 = 0x1333;
	EMU_Write16(S0 + 14,V0); //+ 0xE
	V0 = -286;
	EMU_Write16(S0 + 16,V0); //+ 0x10
	V0 = 0xC0;
	EMU_Write16(S0 + 20,V1); //+ 0x14
	EMU_Write16(S0 + 22,V1); //+ 0x16
	EMU_Write16(S0 + 42,V1); //+ 0x2A
	EMU_Write16(S0 + 44,V1); //+ 0x2C
	EMU_Write16(S0 + 46,V1); //+ 0x2E
	EMU_Write16(S0 + 26,V1); //+ 0x1A
	V1 = 0xE0;
	EMU_Write16(S0 + 24,V0); //+ 0x18
	EMU_Write16(S0 + 28,V0); //+ 0x1C
	V0 = 0x190;
	EMU_Write16(S0 + 32,V0); //+ 0x20
	V0 = 0x104;
	EMU_Write16(S0 + 36,V0); //+ 0x24
	V0 = 0xF0;
	EMU_Write16(S0 + 18,R0); //+ 0x12
	EMU_Write16(S0,R0);
	EMU_Write16(S0 + 4,R0); //+ 0x4
	EMU_Write16(S0 + 30,V1); //+ 0x1E
	EMU_Write16(S0 + 34,V1); //+ 0x22
	ZZ_CLOCKCYCLES(41,0x80027DD0);
	goto ZZ_27BC4_20C;
ZZ_27BC4_16C:
	if (V1 != V0)
	{
		V0 = V1 - 28;
		ZZ_CLOCKCYCLES(2,0x80027DDC);
		goto ZZ_27BC4_218;
	}
	V0 = V1 - 28;
	V0 = 0x28;
	if (S2 != V0)
	{
		V0 = (int32_t)S2 < 40;
		ZZ_CLOCKCYCLES(5,0x80027E8C);
		goto ZZ_27BC4_2C8;
	}
	V0 = (int32_t)S2 < 40;
	V1 = 0xFF;
	V0 = -8601;
	EMU_Write16(S0 + 2,V0); //+ 0x2
	V0 = -3809;
	EMU_Write16(S0 + 6,V0); //+ 0x6
	V0 = -1679;
	EMU_Write16(S0 + 8,V0); //+ 0x8
	V0 = 0xA3D;
	EMU_Write16(S0 + 10,V0); //+ 0xA
	V0 = 0x58;
	EMU_Write16(S0 + 30,V0); //+ 0x1E
	V0 = 0x27D;
	EMU_Write16(S0 + 32,V0); //+ 0x20
	V0 = 0x5A;
	EMU_Write16(S0 + 34,V0); //+ 0x22
	V0 = 0xDEB;
	EMU_Write16(S0 + 12,V0); //+ 0xC
	V0 = 0x1333;
	EMU_Write16(S0 + 14,V0); //+ 0xE
	V0 = -286;
	EMU_Write16(S0 + 16,V0); //+ 0x10
	V0 = 0x11C;
	EMU_Write16(S0 + 36,V0); //+ 0x24
	V0 = 0x80;
	EMU_Write16(S0 + 18,R0); //+ 0x12
	EMU_Write16(S0 + 20,V1); //+ 0x14
	EMU_Write16(S0 + 22,V1); //+ 0x16
	EMU_Write16(S0 + 42,V1); //+ 0x2A
	EMU_Write16(S0 + 44,V1); //+ 0x2C
	EMU_Write16(S0 + 46,V1); //+ 0x2E
	EMU_Write16(S0,R0);
	EMU_Write16(S0 + 4,R0); //+ 0x4
	EMU_Write16(S0 + 24,R0); //+ 0x18
	EMU_Write16(S0 + 26,V1); //+ 0x1A
	EMU_Write16(S0 + 28,R0); //+ 0x1C
	ZZ_CLOCKCYCLES(40,0x80027DD0);
ZZ_27BC4_20C:
	EMU_Write16(S0 + 38,V0); //+ 0x26
	EMU_Write16(S0 + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(3,0x80027E88);
	goto ZZ_27BC4_2C4;
ZZ_27BC4_218:
	V0 = V0 < 2;
	if (!V0)
	{
		V1 = S2 - 40;
		ZZ_CLOCKCYCLES(3,0x80027E88);
		goto ZZ_27BC4_2C4;
	}
	V1 = S2 - 40;
	V0 = V1 < 5;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(6,0x80027E88);
		goto ZZ_27BC4_2C4;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2316); //+ 0x90C
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80027E0C,ZZ_27BC4_248);
	ZZ_JUMPREGISTER(0x80027E24,ZZ_27BC4_260);
	ZZ_JUMPREGISTER(0x80027E3C,ZZ_27BC4_278);
	ZZ_JUMPREGISTER(0x80027E54,ZZ_27BC4_290);
	ZZ_JUMPREGISTER(0x80027E6C,ZZ_27BC4_2A8);
	ZZ_JUMPREGISTER_END();
ZZ_27BC4_248:
	V0 = 0x64;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x32;
	ZZ_CLOCKCYCLES(6,0x80027E80);
	goto ZZ_27BC4_2BC;
ZZ_27BC4_260:
	V0 = 0x64;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x4B;
	ZZ_CLOCKCYCLES(6,0x80027E80);
	goto ZZ_27BC4_2BC;
ZZ_27BC4_278:
	V0 = 0x64;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x64;
	ZZ_CLOCKCYCLES(6,0x80027E80);
	goto ZZ_27BC4_2BC;
ZZ_27BC4_290:
	V0 = 0x64;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x7D;
	ZZ_CLOCKCYCLES(6,0x80027E80);
	goto ZZ_27BC4_2BC;
ZZ_27BC4_2A8:
	V0 = 0x64;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x96;
	ZZ_CLOCKCYCLES(5,0x80027E80);
ZZ_27BC4_2BC:
	RA = 0x80027E88; //ZZ_27BC4_2C4
	A3 = 0x64;
	ZZ_CLOCKCYCLES(2,0x80027A4C);
	goto ZZ_27A4C;
ZZ_27BC4_2C4:
	V0 = (int32_t)S2 < 40;
	ZZ_CLOCKCYCLES(1,0x80027E8C);
ZZ_27BC4_2C8:
	if (V0)
	{
		V0 = 0x64;
		ZZ_CLOCKCYCLES(2,0x80027EC8);
		goto ZZ_27BC4_304;
	}
	V0 = 0x64;
	V0 = (int32_t)S2 < 48;
	if (V0)
	{
		V0 = (int32_t)S2 < 64;
		ZZ_CLOCKCYCLES(5,0x80027EE4);
		goto ZZ_27BC4_320;
	}
	V0 = (int32_t)S2 < 64;
	if (!V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(7,0x80027EC4);
		goto ZZ_27BC4_300;
	}
	A0 = S1;
	AT = 0x80050000;
	AT += S2;
	A2 = EMU_ReadU8(AT + 11444); //+ 0x2CB4
	A1 = S0;
	A3 = A2;
	EMU_Write32(SP + 16,A2); //+ 0x10
	ZZ_CLOCKCYCLES(14,0x80027EDC);
	goto ZZ_27BC4_318;
ZZ_27BC4_300:
	V0 = 0x64;
	ZZ_CLOCKCYCLES(1,0x80027EC8);
ZZ_27BC4_304:
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S1;
	A1 = S0;
	A2 = 0x64;
	A3 = 0x64;
	ZZ_CLOCKCYCLES(5,0x80027EDC);
ZZ_27BC4_318:
	RA = 0x80027EE4; //ZZ_27BC4_320
	ZZ_CLOCKCYCLES(2,0x80027A4C);
	goto ZZ_27A4C;
ZZ_27BC4_320:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80027FA0,ZZ_27F50_50);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80027BC4,0x80027C04,ZZ_27BC4);
ZZ_MARK_TARGET(0x80027C04,0x80027C48,ZZ_27BC4_40);
ZZ_MARK_TARGET(0x80027C48,0x80027C8C,ZZ_27BC4_84);
ZZ_MARK_TARGET(0x80027C8C,0x80027D30,ZZ_27BC4_C8);
ZZ_MARK_TARGET(0x80027D30,0x80027DD0,ZZ_27BC4_16C);
ZZ_MARK_TARGET(0x80027DD0,0x80027DDC,ZZ_27BC4_20C);
ZZ_MARK_TARGET(0x80027DDC,0x80027E0C,ZZ_27BC4_218);
ZZ_MARK_TARGET(0x80027E0C,0x80027E24,ZZ_27BC4_248);
ZZ_MARK_TARGET(0x80027E24,0x80027E3C,ZZ_27BC4_260);
ZZ_MARK_TARGET(0x80027E3C,0x80027E54,ZZ_27BC4_278);
ZZ_MARK_TARGET(0x80027E54,0x80027E6C,ZZ_27BC4_290);
ZZ_MARK_TARGET(0x80027E6C,0x80027E80,ZZ_27BC4_2A8);
ZZ_MARK_TARGET(0x80027E80,0x80027E88,ZZ_27BC4_2BC);
ZZ_MARK_TARGET(0x80027E88,0x80027E8C,ZZ_27BC4_2C4);
ZZ_MARK_TARGET(0x80027E8C,0x80027EC4,ZZ_27BC4_2C8);
ZZ_MARK_TARGET(0x80027EC4,0x80027EC8,ZZ_27BC4_300);
ZZ_MARK_TARGET(0x80027EC8,0x80027EDC,ZZ_27BC4_304);
ZZ_MARK_TARGET(0x80027EDC,0x80027EE4,ZZ_27BC4_318);
ZZ_MARK_TARGET(0x80027EE4,0x80027F00,ZZ_27BC4_320);
