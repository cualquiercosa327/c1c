#ifdef ZZ_INCLUDE_CODE
ZZ_1BA18:
	SP -= 40;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A0;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A1;
	EMU_Write32(SP + 32,S4); //+ 0x20
	S4 = A2;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = R0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0x80060000;
	S0 += 3512;
	EMU_Write32(SP + 36,RA); //+ 0x24
	ZZ_CLOCKCYCLES(13,0x8001BA4C);
ZZ_1BA18_34:
	A0 = S0;
	A1 = S3;
	ZZ_JUMPREGISTER_BEGIN(S2);
	RA = 0x8001BA5C; //ZZ_1BA18_44
	A2 = S4;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8001B92C,ZZ_1B92C);
	ZZ_JUMPREGISTER_END();
ZZ_1BA18_44:
	S1 += 1;
	V0 = (int32_t)S1 < 8;
	if (V0)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(4,0x8001BA4C);
		goto ZZ_1BA18_34;
	}
	S0 += 8;
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80031D94,ZZ_31D50_44);
	ZZ_JUMPREGISTER(0x800329DC,ZZ_326D8_304);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001BA18,0x8001BA4C,ZZ_1BA18);
ZZ_MARK_TARGET(0x8001BA4C,0x8001BA5C,ZZ_1BA18_34);
ZZ_MARK_TARGET(0x8001BA5C,0x8001BA90,ZZ_1BA18_44);
