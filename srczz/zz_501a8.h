#ifdef ZZ_INCLUDE_CODE
ZZ_501A8:
	SP -= 64;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S7); //+ 0x34
	EMU_Write32(SP + 48,S6); //+ 0x30
	EMU_Write32(SP + 44,S5); //+ 0x2C
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	T0 = A0;
	T1 = A1;
	S5 = A3;
	S6 = R0;
	A3 = T0 << 16;
	V1 = A3 >> 24;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 = V0 - V1;
	A0 = T1 << 16;
	A0 = (int32_t)A0 >> 16;
	A2 <<= 16;
	S3 = (int32_t)A2 >> 16;
	A1 = S3;
	S0 = T0;
	S7 = T1;
	T0 &= 0xFF;
	T0 <<= 2;
	S1 = (int32_t)A3 >> 16;
	AT = 0x80060000;
	AT += T0;
	V1 = EMU_ReadU32(AT + 1048); //+ 0x418
	S4 = EMU_ReadU16(SP + 80); //+ 0x50
	V0 <<= 2;
	RA = 0x80050244; //ZZ_501A8_9C
	S2 = V0 + V1;
	ZZ_CLOCKCYCLES(39,0x80050728);
	goto ZZ_50728;
ZZ_501A8_9C:
	AT = 0x80060000;
	EMU_Write16(AT - 6802,S0); //+ 0xFFFFE56E
	if (S4)
	{
		V0 = S5 & 0xFFFF;
		ZZ_CLOCKCYCLES(4,0x80050258);
		goto ZZ_501A8_B0;
	}
	V0 = S5 & 0xFFFF;
	S4 = 0x1;
	ZZ_CLOCKCYCLES(5,0x80050258);
ZZ_501A8_B0:
	if (V0)
	{
		T2 = R0;
		ZZ_CLOCKCYCLES(2,0x80050264);
		goto ZZ_501A8_BC;
	}
	T2 = R0;
	S5 = 0x1;
	ZZ_CLOCKCYCLES(3,0x80050264);
ZZ_501A8_BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	V0 = S6 < V0;
	if (!V0)
	{
		V0 = S6;
		ZZ_CLOCKCYCLES(6,0x800506FC);
		goto ZZ_501A8_554;
	}
	V0 = S6;
	A3 = S1;
	T4 = 0x7F;
	T5 = 0x3F01;
	A2 = S3;
	T6 = S3 << 4;
	T3 = 0x3F;
	T7 = 0x80060000;
	T7 -= 6776;
	S0 = T7 + 2;
	V0 = T2 & 0xFF;
	ZZ_CLOCKCYCLES(16,0x800502A4);
ZZ_501A8_FC:
	V1 = V0 << 1;
	V1 += V0;
	V1 <<= 2;
	V1 += V0;
	V1 <<= 2;
	AT = 0x80050000;
	AT += V1;
	V0 = EMU_ReadS16(AT + 29370); //+ 0x72BA
	if (V0 != A3)
	{
		ZZ_CLOCKCYCLES(11,0x800506DC);
		goto ZZ_501A8_534;
	}
	AT = 0x80050000;
	AT += V1;
	V0 = EMU_ReadS16(AT + 29374); //+ 0x72BE
	if (V0 != A2)
	{
		V0 = S7 << 16;
		ZZ_CLOCKCYCLES(17,0x800506DC);
		goto ZZ_501A8_534;
	}
	V0 = S7 << 16;
	AT = 0x80050000;
	AT += V1;
	V1 = EMU_ReadS16(AT + 29378); //+ 0x72C2
	V0 = (int32_t)V0 >> 16;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(23,0x800506DC);
		goto ZZ_501A8_534;
	}
	V0 = EMU_ReadU8(S2 + 18); //+ 0x12
	V0 <<= 1;
	A0 = V0 + S2;
	V1 = EMU_ReadS16(A0 + 78); //+ 0x4E
	V0 = S5 & 0xFFFF;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(31,0x80050330);
		goto ZZ_501A8_188;
	}
	if (V1)
	{
		V0 = T2 & 0xFF;
		ZZ_CLOCKCYCLES(33,0x80050334);
		goto ZZ_501A8_18C;
	}
	V0 = T2 & 0xFF;
	V0 = 0x1;
	EMU_Write16(A0 + 78,V0); //+ 0x4E
	ZZ_CLOCKCYCLES(35,0x80050330);
ZZ_501A8_188:
	V0 = T2 & 0xFF;
	ZZ_CLOCKCYCLES(1,0x80050334);
ZZ_501A8_18C:
	A1 = V0 << 1;
	A1 += V0;
	A1 <<= 2;
	A1 += V0;
	A1 <<= 2;
	AT = 0x80050000;
	AT += A1;
	V1 = EMU_ReadS16(AT + 29364); //+ 0x72B4
	V0 = S5 & 0xFFFF;
	EMU_SMultiply(V1,V0);
	A0 = LO;
	EMU_SDivide(A0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(16,0x80050378);
		goto ZZ_501A8_1D0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(17,0x80050378);
ZZ_501A8_1D0:
	AT = -1;
	if (T4 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80050390);
		goto ZZ_501A8_1E8;
	}
	AT = 0x80000000;
	if (A0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80050390);
		goto ZZ_501A8_1E8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80050390);
ZZ_501A8_1E8:
	A0 = LO;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12324); //+ 0xFFFFCFDC
	V1 = EMU_ReadU8(V0 + 24); //+ 0x18
	V0 = V1 << 14;
	V0 = V0 - V1;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	EMU_SDivide(V0,T5);
	if (T5)
	{
		ZZ_CLOCKCYCLES(15,0x800503D0);
		goto ZZ_501A8_228;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(16,0x800503D0);
ZZ_501A8_228:
	AT = -1;
	if (T5 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800503E8);
		goto ZZ_501A8_240;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800503E8);
		goto ZZ_501A8_240;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800503E8);
ZZ_501A8_240:
	T0 = LO;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12340); //+ 0xFFFFCFCC
	V0 += T6;
	V0 = EMU_ReadU8(V0 + 1); //+ 0x1
	EMU_SMultiply(T0,V0);
	AT = 0x80050000;
	AT += A1;
	A0 = EMU_ReadS16(AT + 29376); //+ 0x72C0
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 12316); //+ 0xFFFFCFE4
	V0 = T6 + A0;
	V0 <<= 5;
	V0 += A1;
	V0 = EMU_ReadU8(V0 + 2); //+ 0x2
	V1 = LO;
	EMU_SMultiply(V1,V0);
	V1 = LO;
	EMU_UDivide(V1,T5);
	if (T5)
	{
		ZZ_CLOCKCYCLES(27,0x80050458);
		goto ZZ_501A8_2B0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(28,0x80050458);
ZZ_501A8_2B0:
	V1 = LO;
	V0 = EMU_ReadU16(S2 + 116); //+ 0x74
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_UDivide(V0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(10,0x80050484);
		goto ZZ_501A8_2DC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x80050484);
ZZ_501A8_2DC:
	T0 = LO;
	V0 = EMU_ReadU16(S2 + 118); //+ 0x76
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_UDivide(V0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(10,0x800504B0);
		goto ZZ_501A8_308;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x800504B0);
ZZ_501A8_308:
	T1 = LO;
	A0 <<= 5;
	A0 += A1;
	V1 = EMU_ReadU8(A0 + 3); //+ 0x3
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(T1,V1);
		ZZ_CLOCKCYCLES(8,0x800504F8);
		goto ZZ_501A8_350;
	}
	EMU_SMultiply(T1,V1);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(14,0x800504EC);
		goto ZZ_501A8_344;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x800504EC);
ZZ_501A8_344:
	T1 = LO;
	A1 = T0;
	ZZ_CLOCKCYCLES(3,0x80050520);
	goto ZZ_501A8_378;
ZZ_501A8_350:
	V0 = T4 - V1;
	EMU_SMultiply(T0,V0);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(8,0x8005051C);
		goto ZZ_501A8_374;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x8005051C);
ZZ_501A8_374:
	A1 = LO;
	ZZ_CLOCKCYCLES(1,0x80050520);
ZZ_501A8_378:
	V1 = T2 & 0xFF;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	AT = 0x80050000;
	AT += V0;
	V0 = EMU_ReadS16(AT + 29374); //+ 0x72BE
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12340); //+ 0xFFFFCFCC
	V0 <<= 4;
	V0 += V1;
	V1 = EMU_ReadU8(V0 + 4); //+ 0x4
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(T1,V1);
		ZZ_CLOCKCYCLES(18,0x80050590);
		goto ZZ_501A8_3E8;
	}
	EMU_SMultiply(T1,V1);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(24,0x80050584);
		goto ZZ_501A8_3DC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(25,0x80050584);
ZZ_501A8_3DC:
	T1 = LO;
	V1 = T2 & 0xFF;
	ZZ_CLOCKCYCLES(3,0x800505BC);
	goto ZZ_501A8_414;
ZZ_501A8_3E8:
	V0 = T4 - V1;
	EMU_SMultiply(A1,V0);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(8,0x800505B4);
		goto ZZ_501A8_40C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x800505B4);
ZZ_501A8_40C:
	A1 = LO;
	V1 = T2 & 0xFF;
	ZZ_CLOCKCYCLES(2,0x800505BC);
ZZ_501A8_414:
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V1 = S4 & 0xFF;
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(T1,V1);
		ZZ_CLOCKCYCLES(7,0x80050600);
		goto ZZ_501A8_458;
	}
	EMU_SMultiply(T1,V1);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(13,0x800505F4);
		goto ZZ_501A8_44C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(14,0x800505F4);
ZZ_501A8_44C:
	T1 = LO;
	ZZ_CLOCKCYCLES(3,0x80050628);
	goto ZZ_501A8_480;
ZZ_501A8_458:
	V0 = T4 - V1;
	EMU_SMultiply(A1,V0);
	V0 = LO;
	EMU_UDivide(V0,T3);
	if (T3)
	{
		ZZ_CLOCKCYCLES(8,0x80050624);
		goto ZZ_501A8_47C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x80050624);
ZZ_501A8_47C:
	A1 = LO;
	ZZ_CLOCKCYCLES(1,0x80050628);
ZZ_501A8_480:
	V1 = 0x80060000;
	V1 = EMU_ReadS16(V1 - 31752); //+ 0xFFFF83F8
	V0 = 0x1;
	if (V1 != V0)
	{
		EMU_SMultiply(A1,A1);
		ZZ_CLOCKCYCLES(5,0x80050658);
		goto ZZ_501A8_4B0;
	}
	EMU_SMultiply(A1,A1);
	V0 = A1 < T1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80050650);
		goto ZZ_501A8_4A8;
	}
	A1 = T1;
	ZZ_CLOCKCYCLES(10,0x80050654);
	goto ZZ_501A8_4AC;
ZZ_501A8_4A8:
	T1 = A1;
	ZZ_CLOCKCYCLES(1,0x80050654);
ZZ_501A8_4AC:
	EMU_SMultiply(A1,A1);
	ZZ_CLOCKCYCLES(1,0x80050658);
ZZ_501A8_4B0:
	V0 = LO;
	V1 = 0x3FFF;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x80050674);
		goto ZZ_501A8_4CC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x80050674);
ZZ_501A8_4CC:
	A1 = LO;
	EMU_SMultiply(T1,T1);
	V0 = LO;
	EMU_UDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(10,0x800506A0);
		goto ZZ_501A8_4F8;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x800506A0);
ZZ_501A8_4F8:
	T1 = LO;
	A0 = T2 & 0xFF;
	V1 = A0 << 4;
	V0 = V1 + T7;
	V1 += S0;
	EMU_Write16(V0,A1);
	EMU_Write16(V1,T1);
	AT = 0x80050000;
	AT += A0;
	V0 = EMU_ReadU8(AT + 30628); //+ 0x77A4
	S6 += 1;
	V0 |= 0x3;
	AT = 0x80050000;
	AT += A0;
	EMU_Write8(AT + 30628,V0); //+ 0x77A4
	ZZ_CLOCKCYCLES(15,0x800506DC);
ZZ_501A8_534:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 7360); //+ 0xFFFFE340
	T2 += 1;
	V0 = T2 & 0xFF;
	V0 = V0 < V1;
	if (V0)
	{
		V0 = T2 & 0xFF;
		ZZ_CLOCKCYCLES(7,0x800502A4);
		goto ZZ_501A8_FC;
	}
	V0 = T2 & 0xFF;
	V0 = S6;
	ZZ_CLOCKCYCLES(8,0x800506FC);
ZZ_501A8_554:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S7 = EMU_ReadU32(SP + 52); //+ 0x34
	S6 = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 64;
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x8004A0E8,ZZ_4A060_88);
	ZZ_JUMPREGISTER(0x8004A1B8,ZZ_4A128_90);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800501A8,0x80050244,ZZ_501A8);
ZZ_MARK_TARGET(0x80050244,0x80050258,ZZ_501A8_9C);
ZZ_MARK_TARGET(0x80050258,0x80050264,ZZ_501A8_B0);
ZZ_MARK_TARGET(0x80050264,0x800502A4,ZZ_501A8_BC);
ZZ_MARK_TARGET(0x800502A4,0x80050330,ZZ_501A8_FC);
ZZ_MARK_TARGET(0x80050330,0x80050334,ZZ_501A8_188);
ZZ_MARK_TARGET(0x80050334,0x80050378,ZZ_501A8_18C);
ZZ_MARK_TARGET(0x80050378,0x80050390,ZZ_501A8_1D0);
ZZ_MARK_TARGET(0x80050390,0x800503D0,ZZ_501A8_1E8);
ZZ_MARK_TARGET(0x800503D0,0x800503E8,ZZ_501A8_228);
ZZ_MARK_TARGET(0x800503E8,0x80050458,ZZ_501A8_240);
ZZ_MARK_TARGET(0x80050458,0x80050484,ZZ_501A8_2B0);
ZZ_MARK_TARGET(0x80050484,0x800504B0,ZZ_501A8_2DC);
ZZ_MARK_TARGET(0x800504B0,0x800504EC,ZZ_501A8_308);
ZZ_MARK_TARGET(0x800504EC,0x800504F8,ZZ_501A8_344);
ZZ_MARK_TARGET(0x800504F8,0x8005051C,ZZ_501A8_350);
ZZ_MARK_TARGET(0x8005051C,0x80050520,ZZ_501A8_374);
ZZ_MARK_TARGET(0x80050520,0x80050584,ZZ_501A8_378);
ZZ_MARK_TARGET(0x80050584,0x80050590,ZZ_501A8_3DC);
ZZ_MARK_TARGET(0x80050590,0x800505B4,ZZ_501A8_3E8);
ZZ_MARK_TARGET(0x800505B4,0x800505BC,ZZ_501A8_40C);
ZZ_MARK_TARGET(0x800505BC,0x800505F4,ZZ_501A8_414);
ZZ_MARK_TARGET(0x800505F4,0x80050600,ZZ_501A8_44C);
ZZ_MARK_TARGET(0x80050600,0x80050624,ZZ_501A8_458);
ZZ_MARK_TARGET(0x80050624,0x80050628,ZZ_501A8_47C);
ZZ_MARK_TARGET(0x80050628,0x80050650,ZZ_501A8_480);
ZZ_MARK_TARGET(0x80050650,0x80050654,ZZ_501A8_4A8);
ZZ_MARK_TARGET(0x80050654,0x80050658,ZZ_501A8_4AC);
ZZ_MARK_TARGET(0x80050658,0x80050674,ZZ_501A8_4B0);
ZZ_MARK_TARGET(0x80050674,0x800506A0,ZZ_501A8_4CC);
ZZ_MARK_TARGET(0x800506A0,0x800506DC,ZZ_501A8_4F8);
ZZ_MARK_TARGET(0x800506DC,0x800506FC,ZZ_501A8_534);
ZZ_MARK_TARGET(0x800506FC,0x80050728,ZZ_501A8_554);
