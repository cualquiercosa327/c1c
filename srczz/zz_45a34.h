#ifdef ZZ_INCLUDE_CODE
ZZ_45A34:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22628); //+ 0x5864
	A2 = 0x20000;
	EMU_Write8(V0,R0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22640); //+ 0x5870
	V0 = 0x80;
	EMU_Write8(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22728); //+ 0x58C8
	A2 |= 0x943;
	EMU_Write32(V0,A2);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22644); //+ 0x5874
	V0 = 0x1323;
	EMU_Write32(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22732); //+ 0x58CC
	V0 = EMU_ReadU32(V1);
	V0 |= 0x8000;
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22736); //+ 0x58D0
	EMU_Write32(V0,A0);
	V0 = 0x10000;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22740); //+ 0x58D4
	A1 |= V0;
	EMU_Write32(V1,A1);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22744); //+ 0x58D8
	V0 = 0x11000000;
	EMU_Write32(V1,V0);
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 22744); //+ 0x58D8
	V0 = EMU_ReadU32(A0);
	V1 = 0x1000000;
	V0 &= V1;
	if (!V0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(44,0x80045AFC);
		goto ZZ_45A34_C8;
	}
	V1 = A0;
	A0 = 0x1000000;
	ZZ_CLOCKCYCLES(45,0x80045AE8);
ZZ_45A34_B4:
	V0 = EMU_ReadU32(V1);
	V0 &= A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80045AE8);
		goto ZZ_45A34_B4;
	}
	ZZ_CLOCKCYCLES(5,0x80045AFC);
ZZ_45A34_C8:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22644); //+ 0x5874
	V0 = 0x1325;
	EMU_Write32(V1,V0);
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = R0;
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80045C50,ZZ_45C04_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80045A34,0x80045AE8,ZZ_45A34);
ZZ_MARK_TARGET(0x80045AE8,0x80045AFC,ZZ_45A34_B4);
ZZ_MARK_TARGET(0x80045AFC,0x80045B14,ZZ_45A34_C8);
