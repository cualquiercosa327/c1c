#ifdef ZZ_INCLUDE_CODE
ZZ_1DE78:
	SP -= 96;
	EMU_Write32(SP + 80,S4); //+ 0x50
	S4 = A0;
	EMU_Write32(SP + 92,RA); //+ 0x5C
	EMU_Write32(SP + 88,S6); //+ 0x58
	EMU_Write32(SP + 84,S5); //+ 0x54
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 68,S1); //+ 0x44
	EMU_Write32(SP + 64,S0); //+ 0x40
	V0 = EMU_ReadU32(S4 + 268); //+ 0x10C
	S0 = EMU_ReadU32(S4 + 264); //+ 0x108
	S1 = V0 >> 8;
	V1 = EMU_ReadU8(S0);
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 3;
		ZZ_CLOCKCYCLES(17,0x8001DEF0);
		goto ZZ_1DE78_78;
	}
	V0 = (int32_t)V1 < 3;
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(19,0x8001DED4);
		goto ZZ_1DE78_5C;
	}
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(21,0x8001E198);
		goto ZZ_1DE78_320;
	}
	ZZ_CLOCKCYCLES(23,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_5C:
	V0 = 0x4;
	if (V1 == V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(3,0x8001E168);
		goto ZZ_1DE78_2F0;
	}
	V0 = 0x5;
	if (V1 == V0)
	{
		A0 = 0x26700000;
		ZZ_CLOCKCYCLES(5,0x8001E028);
		goto ZZ_1DE78_1B0;
	}
	A0 = 0x26700000;
	ZZ_CLOCKCYCLES(7,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_78:
	V0 = 0x26700000;
	V1 = EMU_ReadU32(S4 + 152); //+ 0x98
	V0 |= 0x5EBF;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8001DF08);
		goto ZZ_1DE78_90;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(6,0x8001DF08);
ZZ_1DE78_90:
	EMU_SMultiply(V1,V0);
	A1 = 0x80050000;
	A1 += 30856;
	S2 = S0;
	A2 = EMU_ReadU32(S4 + 204); //+ 0xCC
	V1 = (int32_t)V1 >> 31;
	V0 = HI;
	V0 = (int32_t)V0 >> 12;
	S3 = V0 - V1;
	V0 = 0x200000;
	V0 &= A2;
	if (!V0)
	{
		A0 = S4 + 128;
		ZZ_CLOCKCYCLES(13,0x8001DF40);
		goto ZZ_1DE78_C8;
	}
	A0 = S4 + 128;
	A1 -= 36;
	ZZ_CLOCKCYCLES(14,0x8001DF40);
ZZ_1DE78_C8:
	if (!V0)
	{
		A2 &= 0x200;
		ZZ_CLOCKCYCLES(2,0x8001DF58);
		goto ZZ_1DE78_E0;
	}
	A2 &= 0x200;
	V0 = 0x80050000;
	V0 += 30692;
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(6,0x8001DF64);
	goto ZZ_1DE78_EC;
ZZ_1DE78_E0:
	V0 = 0x80050000;
	V0 += 30788;
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(3,0x8001DF64);
ZZ_1DE78_EC:
	S5 = 0x80050000;
	S5 += 30928;
	V0 = EMU_ReadU32(S5);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 744); //+ 0x2E8
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S4 + 204); //+ 0xCC
	A3 = S3;
	V0 >>= 18;
	V0 ^= 0x1;
	V0 &= 0x1;
	RA = 0x8001DFB0; //ZZ_1DE78_138
	EMU_Write32(SP + 28,V0); //+ 0x1C
	ZZ_CLOCKCYCLES(19,0x8003A144);
	goto ZZ_3A144;
ZZ_1DE78_138:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001E3A8);
		goto ZZ_1DE78_530;
	}
	RA = 0x8001DFC0; //ZZ_1DE78_148
	A0 = S2 + 4;
	ZZ_CLOCKCYCLES(4,0x80015A98);
	goto ZZ_15A98;
ZZ_1DE78_148:
	RA = 0x8001DFC8; //ZZ_1DE78_150
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x80016E18);
	goto ZZ_16E18;
ZZ_1DE78_150:
	A1 = S1 << 3;
	A1 += 8;
	A1 += S2;
	A2 = S0;
	A3 = 0xC8;
	T0 = EMU_ReadU32(S4 + 312); //+ 0x138
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31732); //+ 0xFFFF840C
	A3 <<= S3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = 0x80050000;
	V0 += 6004;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S5);
	A0 += 136;
	T0 += 2048;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	T0 = T0 - V0;
	RA = 0x8001E020; //ZZ_1DE78_1A8
	EMU_Write32(SP + 16,T0); //+ 0x10
	ZZ_CLOCKCYCLES(22,0x8003A76C);
	goto ZZ_3A76C;
ZZ_1DE78_1A8:
	ZZ_CLOCKCYCLES(2,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_1B0:
	A0 |= 0x5EBF;
	A1 = 0x80050000;
	A1 += 30856;
	A3 = EMU_ReadU32(S4 + 152); //+ 0x98
	A2 = EMU_ReadU32(S4 + 204); //+ 0xCC
	V0 = A1 - 68;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30928); //+ 0x78D0
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	if ((int32_t)A3 >= 0)
	{
		ZZ_CLOCKCYCLES(13,0x8001E060);
		goto ZZ_1DE78_1E8;
	}
	A3 = -A3;
	ZZ_CLOCKCYCLES(14,0x8001E060);
ZZ_1DE78_1E8:
	EMU_SMultiply(A3,A0);
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	A0 = S4 + 128;
	V0 = EMU_ReadU32(V0 + 744); //+ 0x2E8
	A2 &= 0x200;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S4 + 204); //+ 0xCC
	A3 = (int32_t)A3 >> 31;
	V0 >>= 18;
	V0 ^= 0x1;
	V0 &= 0x1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = HI;
	V0 = (int32_t)V0 >> 12;
	S2 = V0 - A3;
	RA = 0x8001E0AC; //ZZ_1DE78_234
	A3 = S2;
	ZZ_CLOCKCYCLES(19,0x8003A144);
	goto ZZ_3A144;
ZZ_1DE78_234:
	if (!V0)
	{
		A0 = S0 + 4;
		ZZ_CLOCKCYCLES(2,0x8001E3A8);
		goto ZZ_1DE78_530;
	}
	A0 = S0 + 4;
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	EMU_SMultiply(S1,V0);
	S3 = R0;
	V0 = LO;
	V0 <<= 4;
	V0 += 12;
	RA = 0x8001E0D8; //ZZ_1DE78_260
	S1 = S0 + V0;
	ZZ_CLOCKCYCLES(11,0x80015A98);
	goto ZZ_15A98;
ZZ_1DE78_260:
	S5 = S0;
	V1 = EMU_ReadU32(S5 + 8); //+ 0x8
	if ((int32_t)V1 <= 0)
	{
		S6 = V0;
		ZZ_CLOCKCYCLES(5,0x8001E3A8);
		goto ZZ_1DE78_530;
	}
	S6 = V0;
	S0 = S1 + 14;
	ZZ_CLOCKCYCLES(6,0x8001E0F0);
ZZ_1DE78_278:
	A0 = S1;
	A2 = S6;
	V0 = EMU_ReadS16(S0 - 6); //+ 0xFFFFFFFA
	A3 = SP + 32;
	V0 <<= S2;
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadS16(S0 - 4); //+ 0xFFFFFFFC
	S1 += 16;
	V0 <<= S2;
	EMU_Write32(SP + 36,V0); //+ 0x24
	V0 = EMU_ReadS16(S0 - 2); //+ 0xFFFFFFFE
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 31732); //+ 0xFFFF840C
	V0 <<= S2;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadS16(S0);
	V1 += 136;
	V0 <<= S2;
	EMU_Write32(SP + 48,V0); //+ 0x30
	EMU_Write32(SP + 16,V1); //+ 0x10
	A1 = EMU_ReadU32(S4 + 312); //+ 0x138
	RA = 0x8001E14C; //ZZ_1DE78_2D4
	S3 += 1;
	ZZ_CLOCKCYCLES(23,0x80018B98);
	goto ZZ_18B98;
ZZ_1DE78_2D4:
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 = (int32_t)S3 < (int32_t)V0;
	if (V0)
	{
		S0 += 16;
		ZZ_CLOCKCYCLES(5,0x8001E0F0);
		goto ZZ_1DE78_278;
	}
	S0 += 16;
	ZZ_CLOCKCYCLES(7,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_2F0:
	A0 = S4;
	A1 = S0;
	A2 = S1;
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 - 31732); //+ 0xFFFF840C
	V0 = EMU_ReadU32(A0 + 204); //+ 0xCC
	A3 += 136;
	V0 &= 0x400;
	RA = 0x8001E190; //ZZ_1DE78_318
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(10,0x8001E7D8);
	goto ZZ_1E7D8;
ZZ_1DE78_318:
	ZZ_CLOCKCYCLES(2,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_320:
	RA = 0x8001E1A0; //ZZ_1DE78_328
	A0 = S0 + 4;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_1DE78_328:
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = 0x14;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E1EC);
		goto ZZ_1DE78_374;
	}
	A0 = EMU_ReadU32(S4 + 264); //+ 0x108
	RA = 0x8001E1BC; //ZZ_1DE78_344
	A0 += 4;
	ZZ_CLOCKCYCLES(7,0x80015A98);
	goto ZZ_15A98;
ZZ_1DE78_344:
	A2 = S4;
	V1 = EMU_ReadU32(S4 + 268); //+ 0x10C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 31732); //+ 0xFFFF840C
	V1 >>= 8;
	V1 <<= 2;
	V1 += V0;
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	RA = 0x8001E1E4; //ZZ_1DE78_36C
	A1 += 136;
	ZZ_CLOCKCYCLES(10,0x80018A40);
	goto ZZ_18A40;
ZZ_1DE78_36C:
	ZZ_CLOCKCYCLES(2,0x8001E220);
	goto ZZ_1DE78_3A8;
ZZ_1DE78_374:
	A0 = EMU_ReadU32(S4 + 264); //+ 0x108
	RA = 0x8001E1F8; //ZZ_1DE78_380
	A0 += 4;
	ZZ_CLOCKCYCLES(3,0x80015A98);
	goto ZZ_15A98;
ZZ_1DE78_380:
	A2 = S4;
	V1 = EMU_ReadU32(S4 + 268); //+ 0x10C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 31732); //+ 0xFFFF840C
	V1 >>= 8;
	V1 <<= 2;
	V1 += V0;
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	RA = 0x8001E220; //ZZ_1DE78_3A8
	A1 += 136;
	ZZ_CLOCKCYCLES(10,0x80018964);
	goto ZZ_18964;
ZZ_1DE78_3A8:
	V0 = EMU_ReadU32(S4 + 204); //+ 0xCC
	V1 = 0x100000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E3A8);
		goto ZZ_1DE78_530;
	}
	V0 = EMU_ReadU32(GP + 696); //+ 0x2B8
	if (S4 != V0)
	{
		A2 = S4 + 48;
		ZZ_CLOCKCYCLES(9,0x8001E2F0);
		goto ZZ_1DE78_478;
	}
	A2 = S4 + 48;
	V0 = EMU_ReadU32(S4 + 40); //+ 0x28
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A3 = V1 + 840;
	V0 = A3 | A2;
	V0 &= 0x3;
	if (!V0)
	{
		T0 = V1 + 888;
		ZZ_CLOCKCYCLES(18,0x8001E2BC);
		goto ZZ_1DE78_444;
	}
	T0 = V1 + 888;
	ZZ_CLOCKCYCLES(18,0x8001E268);
ZZ_1DE78_3F0:
	EMU_ReadLeft(A3 + 3,&V0); //+ 0x3
	EMU_ReadRight(A3,&V0);
	EMU_ReadLeft(A3 + 7,&V1); //+ 0x7
	EMU_ReadRight(A3 + 4,&V1); //+ 0x4
	EMU_ReadLeft(A3 + 11,&A0); //+ 0xB
	EMU_ReadRight(A3 + 8,&A0); //+ 0x8
	EMU_ReadLeft(A3 + 15,&A1); //+ 0xF
	EMU_ReadRight(A3 + 12,&A1); //+ 0xC
	EMU_WriteLeft(A2 + 3,V0); //+ 0x3
	EMU_WriteRight(A2,V0);
	EMU_WriteLeft(A2 + 7,V1); //+ 0x7
	EMU_WriteRight(A2 + 4,V1); //+ 0x4
	EMU_WriteLeft(A2 + 11,A0); //+ 0xB
	EMU_WriteRight(A2 + 8,A0); //+ 0x8
	EMU_WriteLeft(A2 + 15,A1); //+ 0xF
	EMU_WriteRight(A2 + 12,A1); //+ 0xC
	A3 += 16;
	if (A3 != T0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(19,0x8001E268);
		goto ZZ_1DE78_3F0;
	}
	A2 += 16;
	ZZ_CLOCKCYCLES(21,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_444:
	V0 = EMU_ReadU32(A3);
	V1 = EMU_ReadU32(A3 + 4); //+ 0x4
	A0 = EMU_ReadU32(A3 + 8); //+ 0x8
	A1 = EMU_ReadU32(A3 + 12); //+ 0xC
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	EMU_Write32(A2 + 12,A1); //+ 0xC
	A3 += 16;
	if (A3 != T0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(11,0x8001E2BC);
		goto ZZ_1DE78_444;
	}
	A2 += 16;
	ZZ_CLOCKCYCLES(13,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_478:
	V0 = EMU_ReadU32(S4 + 40); //+ 0x28
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E308);
		goto ZZ_1DE78_490;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	ZZ_CLOCKCYCLES(6,0x8001E308);
ZZ_1DE78_490:
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A3 = V1 + 792;
	V0 = A3 | A2;
	V0 &= 0x3;
	if (!V0)
	{
		T0 = V1 + 840;
		ZZ_CLOCKCYCLES(8,0x8001E37C);
		goto ZZ_1DE78_504;
	}
	T0 = V1 + 840;
	ZZ_CLOCKCYCLES(8,0x8001E328);
ZZ_1DE78_4B0:
	EMU_ReadLeft(A3 + 3,&V0); //+ 0x3
	EMU_ReadRight(A3,&V0);
	EMU_ReadLeft(A3 + 7,&V1); //+ 0x7
	EMU_ReadRight(A3 + 4,&V1); //+ 0x4
	EMU_ReadLeft(A3 + 11,&A0); //+ 0xB
	EMU_ReadRight(A3 + 8,&A0); //+ 0x8
	EMU_ReadLeft(A3 + 15,&A1); //+ 0xF
	EMU_ReadRight(A3 + 12,&A1); //+ 0xC
	EMU_WriteLeft(A2 + 3,V0); //+ 0x3
	EMU_WriteRight(A2,V0);
	EMU_WriteLeft(A2 + 7,V1); //+ 0x7
	EMU_WriteRight(A2 + 4,V1); //+ 0x4
	EMU_WriteLeft(A2 + 11,A0); //+ 0xB
	EMU_WriteRight(A2 + 8,A0); //+ 0x8
	EMU_WriteLeft(A2 + 15,A1); //+ 0xF
	EMU_WriteRight(A2 + 12,A1); //+ 0xC
	A3 += 16;
	if (A3 != T0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(19,0x8001E328);
		goto ZZ_1DE78_4B0;
	}
	A2 += 16;
	ZZ_CLOCKCYCLES(21,0x8001E3A8);
	goto ZZ_1DE78_530;
ZZ_1DE78_504:
	V0 = EMU_ReadU32(A3);
	V1 = EMU_ReadU32(A3 + 4); //+ 0x4
	A0 = EMU_ReadU32(A3 + 8); //+ 0x8
	A1 = EMU_ReadU32(A3 + 12); //+ 0xC
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	EMU_Write32(A2 + 12,A1); //+ 0xC
	A3 += 16;
	if (A3 != T0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(11,0x8001E37C);
		goto ZZ_1DE78_504;
	}
	A2 += 16;
	ZZ_CLOCKCYCLES(11,0x8001E3A8);
ZZ_1DE78_530:
	RA = EMU_ReadU32(SP + 92); //+ 0x5C
	S6 = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001DE78,0x8001DED4,ZZ_1DE78);
ZZ_MARK_TARGET(0x8001DED4,0x8001DEF0,ZZ_1DE78_5C);
ZZ_MARK_TARGET(0x8001DEF0,0x8001DF08,ZZ_1DE78_78);
ZZ_MARK_TARGET(0x8001DF08,0x8001DF40,ZZ_1DE78_90);
ZZ_MARK_TARGET(0x8001DF40,0x8001DF58,ZZ_1DE78_C8);
ZZ_MARK_TARGET(0x8001DF58,0x8001DF64,ZZ_1DE78_E0);
ZZ_MARK_TARGET(0x8001DF64,0x8001DFB0,ZZ_1DE78_EC);
ZZ_MARK_TARGET(0x8001DFB0,0x8001DFC0,ZZ_1DE78_138);
ZZ_MARK_TARGET(0x8001DFC0,0x8001DFC8,ZZ_1DE78_148);
ZZ_MARK_TARGET(0x8001DFC8,0x8001E020,ZZ_1DE78_150);
ZZ_MARK_TARGET(0x8001E020,0x8001E028,ZZ_1DE78_1A8);
ZZ_MARK_TARGET(0x8001E028,0x8001E060,ZZ_1DE78_1B0);
ZZ_MARK_TARGET(0x8001E060,0x8001E0AC,ZZ_1DE78_1E8);
ZZ_MARK_TARGET(0x8001E0AC,0x8001E0D8,ZZ_1DE78_234);
ZZ_MARK_TARGET(0x8001E0D8,0x8001E0F0,ZZ_1DE78_260);
ZZ_MARK_TARGET(0x8001E0F0,0x8001E14C,ZZ_1DE78_278);
ZZ_MARK_TARGET(0x8001E14C,0x8001E168,ZZ_1DE78_2D4);
ZZ_MARK_TARGET(0x8001E168,0x8001E190,ZZ_1DE78_2F0);
ZZ_MARK_TARGET(0x8001E190,0x8001E198,ZZ_1DE78_318);
ZZ_MARK_TARGET(0x8001E198,0x8001E1A0,ZZ_1DE78_320);
ZZ_MARK_TARGET(0x8001E1A0,0x8001E1BC,ZZ_1DE78_328);
ZZ_MARK_TARGET(0x8001E1BC,0x8001E1E4,ZZ_1DE78_344);
ZZ_MARK_TARGET(0x8001E1E4,0x8001E1EC,ZZ_1DE78_36C);
ZZ_MARK_TARGET(0x8001E1EC,0x8001E1F8,ZZ_1DE78_374);
ZZ_MARK_TARGET(0x8001E1F8,0x8001E220,ZZ_1DE78_380);
ZZ_MARK_TARGET(0x8001E220,0x8001E268,ZZ_1DE78_3A8);
ZZ_MARK_TARGET(0x8001E268,0x8001E2BC,ZZ_1DE78_3F0);
ZZ_MARK_TARGET(0x8001E2BC,0x8001E2F0,ZZ_1DE78_444);
ZZ_MARK_TARGET(0x8001E2F0,0x8001E308,ZZ_1DE78_478);
ZZ_MARK_TARGET(0x8001E308,0x8001E328,ZZ_1DE78_490);
ZZ_MARK_TARGET(0x8001E328,0x8001E37C,ZZ_1DE78_4B0);
ZZ_MARK_TARGET(0x8001E37C,0x8001E3A8,ZZ_1DE78_504);
ZZ_MARK_TARGET(0x8001E3A8,0x8001E3D4,ZZ_1DE78_530);
