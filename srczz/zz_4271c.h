#ifdef ZZ_INCLUDE_CODE
ZZ_4271C:
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	if (A0)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(4,0x800427D0);
		goto ZZ_4271C_B4;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	RA = 0x80042734; //ZZ_4271C_18
	ZZ_CLOCKCYCLES(6,0x80042864);
	goto ZZ_42864;
ZZ_4271C_18:
	ZZ_CLOCKCYCLES(2,0x80042754);
	goto ZZ_4271C_38;
ZZ_4271C_20:
	RA = 0x80042744; //ZZ_4271C_28
	ZZ_CLOCKCYCLES(2,0x800422E4);
	goto ZZ_422E4;
ZZ_4271C_28:
	RA = 0x8004274C; //ZZ_4271C_30
	ZZ_CLOCKCYCLES(2,0x80042898);
	goto ZZ_42898;
ZZ_4271C_30:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80042850);
		goto ZZ_4271C_134;
	}
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80042754);
ZZ_4271C_38:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19312); //+ 0x4B70
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19316); //+ 0x4B74
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x80042788);
		goto ZZ_4271C_6C;
	}
	ZZ_CLOCKCYCLES(9,0x8004273C);
	goto ZZ_4271C_20;
ZZ_4271C_5C:
	RA = 0x80042780; //ZZ_4271C_64
	ZZ_CLOCKCYCLES(2,0x80042898);
	goto ZZ_42898;
ZZ_4271C_64:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80042850);
		goto ZZ_4271C_134;
	}
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80042788);
ZZ_4271C_6C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x80042778);
		goto ZZ_4271C_5C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(16,0x80042778);
		goto ZZ_4271C_5C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(18,0x80042850);
	goto ZZ_4271C_134;
ZZ_4271C_B4:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19312); //+ 0x4B70
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V0 - V1;
	S0 = V0 & 0x3F;
	if (!S0)
	{
		ZZ_CLOCKCYCLES(9,0x800427FC);
		goto ZZ_4271C_E0;
	}
	RA = 0x800427FC; //ZZ_4271C_E0
	ZZ_CLOCKCYCLES(11,0x800422E4);
	goto ZZ_422E4;
ZZ_4271C_E0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004283C);
		goto ZZ_4271C_120;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x8004284C);
		goto ZZ_4271C_130;
	}
	ZZ_CLOCKCYCLES(16,0x8004283C);
ZZ_4271C_120:
	if (S0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(2,0x80042850);
		goto ZZ_4271C_134;
	}
	V0 = S0;
	V0 = 0x1;
	ZZ_CLOCKCYCLES(4,0x80042850);
	goto ZZ_4271C_134;
ZZ_4271C_130:
	V0 = S0;
	ZZ_CLOCKCYCLES(1,0x80042850);
ZZ_4271C_134:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004271C,0x80042734,ZZ_4271C);
ZZ_MARK_TARGET(0x80042734,0x8004273C,ZZ_4271C_18);
ZZ_MARK_TARGET(0x8004273C,0x80042744,ZZ_4271C_20);
ZZ_MARK_TARGET(0x80042744,0x8004274C,ZZ_4271C_28);
ZZ_MARK_TARGET(0x8004274C,0x80042754,ZZ_4271C_30);
ZZ_MARK_TARGET(0x80042754,0x80042778,ZZ_4271C_38);
ZZ_MARK_TARGET(0x80042778,0x80042780,ZZ_4271C_5C);
ZZ_MARK_TARGET(0x80042780,0x80042788,ZZ_4271C_64);
ZZ_MARK_TARGET(0x80042788,0x800427D0,ZZ_4271C_6C);
ZZ_MARK_TARGET(0x800427D0,0x800427FC,ZZ_4271C_B4);
ZZ_MARK_TARGET(0x800427FC,0x8004283C,ZZ_4271C_E0);
ZZ_MARK_TARGET(0x8004283C,0x8004284C,ZZ_4271C_120);
ZZ_MARK_TARGET(0x8004284C,0x80042850,ZZ_4271C_130);
ZZ_MARK_TARGET(0x80042850,0x80042864,ZZ_4271C_134);
