#ifdef ZZ_INCLUDE_CODE
ZZ_44D28:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22648); //+ 0x5878
	V0 = EMU_ReadU16(V1 + 440); //+ 0x1B8
	if (V0)
	{
		SP -= 8;
		ZZ_CLOCKCYCLES(7,0x80044D64);
		goto ZZ_44D28_3C;
	}
	SP -= 8;
	V0 = EMU_ReadU16(V1 + 442); //+ 0x1BA
	if (V0)
	{
		V0 = 0x3FFF;
		ZZ_CLOCKCYCLES(11,0x80044D68);
		goto ZZ_44D28_40;
	}
	V0 = 0x3FFF;
	EMU_Write16(V1 + 384,V0); //+ 0x180
	EMU_Write16(V1 + 386,V0); //+ 0x182
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22648); //+ 0x5878
	ZZ_CLOCKCYCLES(15,0x80044D64);
ZZ_44D28_3C:
	V0 = 0x3FFF;
	ZZ_CLOCKCYCLES(1,0x80044D68);
ZZ_44D28_40:
	EMU_Write16(V1 + 432,V0); //+ 0x1B0
	EMU_Write16(V1 + 434,V0); //+ 0x1B2
	V0 = 0xC001;
	EMU_Write16(V1 + 426,V0); //+ 0x1AA
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22628); //+ 0x5864
	V0 = 0x80;
	EMU_Write8(SP + 2,V0); //+ 0x2
	EMU_Write8(SP,V0);
	V0 = 0x2;
	EMU_Write8(SP + 3,R0); //+ 0x3
	EMU_Write8(SP + 1,R0); //+ 0x1
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22636); //+ 0x586C
	V0 = EMU_ReadU8(SP);
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22640); //+ 0x5870
	V0 = EMU_ReadU8(SP + 1); //+ 0x1
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22628); //+ 0x5864
	V0 = 0x3;
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22632); //+ 0x5868
	V0 = EMU_ReadU8(SP + 2); //+ 0x2
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22636); //+ 0x586C
	V0 = EMU_ReadU8(SP + 3); //+ 0x3
	EMU_Write8(V1,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22640); //+ 0x5870
	V0 = 0x20;
	EMU_Write8(V1,V0);
	V0 = R0;
	SP += 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(45);
	ZZ_JUMPREGISTER(0x800433D0,ZZ_43384_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80044D28,0x80044D64,ZZ_44D28);
ZZ_MARK_TARGET(0x80044D64,0x80044D68,ZZ_44D28_3C);
ZZ_MARK_TARGET(0x80044D68,0x80044E1C,ZZ_44D28_40);
