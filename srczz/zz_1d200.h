#ifdef ZZ_INCLUDE_CODE
ZZ_1D200:
	SP -= 32;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = R0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0x80060000;
	S0 += 3512;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	ZZ_CLOCKCYCLES(9,0x8001D224);
ZZ_1D200_24:
	A0 = S0;
	A1 = 0x80020000;
	A1 -= 12004;
	RA = 0x8001D238; //ZZ_1D200_38
	A2 = S2;
	ZZ_CLOCKCYCLES(5,0x8001B92C);
	goto ZZ_1B92C;
ZZ_1D200_38:
	S1 += 1;
	V0 = (int32_t)S1 < 8;
	if (V0)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(4,0x8001D224);
		goto ZZ_1D200_24;
	}
	S0 += 8;
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80026730,ZZ_26650_E0);
	ZZ_JUMPREGISTER(0x80025DD4,ZZ_25A60_374);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001D200,0x8001D224,ZZ_1D200);
ZZ_MARK_TARGET(0x8001D224,0x8001D238,ZZ_1D200_24);
ZZ_MARK_TARGET(0x8001D238,0x8001D264,ZZ_1D200_38);
