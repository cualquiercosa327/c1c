#ifdef ZZ_INCLUDE_CODE
ZZ_42A04:
	V1 = 0x10000000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V1 |= 0x7;
	EMU_Write32(V0,V1);
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 19260); //+ 0x4B3C
	V1 = 0xFF0000;
	V0 = EMU_ReadU32(A1);
	V1 |= 0xFFFF;
	V0 &= V1;
	V1 = 0x2;
	if (V0 == V1)
	{
		V1 = 0xE1000000;
		ZZ_CLOCKCYCLES(14,0x80042AAC);
		goto ZZ_42A04_A8;
	}
	V1 = 0xE1000000;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V1 |= 0x1000;
	V0 &= 0x3FFF;
	V0 |= V1;
	EMU_Write32(A1,V0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19260); //+ 0x4B3C
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(V0);
	V0 = EMU_ReadU32(V1);
	V0 &= 0x1000;
	if (V0)
	{
		V0 = A0 & 0x8;
		ZZ_CLOCKCYCLES(32,0x80042A8C);
		goto ZZ_42A04_88;
	}
	V0 = A0 & 0x8;
	V0 = R0;
	ZZ_CLOCKCYCLES(34,0x80042AD8);
	goto ZZ_42A04_D4;
ZZ_42A04_88:
	if (V0)
	{
		V0 = 0x20000000;
		ZZ_CLOCKCYCLES(2,0x80042A9C);
		goto ZZ_42A04_98;
	}
	V0 = 0x20000000;
	V0 = 0x1;
	ZZ_CLOCKCYCLES(4,0x80042AD8);
	goto ZZ_42A04_D4;
ZZ_42A04_98:
	V0 |= 0x504;
	EMU_Write32(V1,V0);
	V0 = 0x2;
	ZZ_CLOCKCYCLES(4,0x80042AD8);
	goto ZZ_42A04_D4;
ZZ_42A04_A8:
	V0 = A0 & 0x8;
	if (!V0)
	{
		A0 = 0x9000000;
		ZZ_CLOCKCYCLES(3,0x80042AD4);
		goto ZZ_42A04_D0;
	}
	A0 = 0x9000000;
	A0 |= 0x1;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19264); //+ 0x4B40
	V0 = 0x4;
	EMU_Write32(V1,A0);
	ZZ_CLOCKCYCLES(10,0x80042AD8);
	goto ZZ_42A04_D4;
ZZ_42A04_D0:
	V0 = 0x3;
	ZZ_CLOCKCYCLES(1,0x80042AD8);
ZZ_42A04_D4:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80042708,ZZ_425E0_128);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80042A04,0x80042A8C,ZZ_42A04);
ZZ_MARK_TARGET(0x80042A8C,0x80042A9C,ZZ_42A04_88);
ZZ_MARK_TARGET(0x80042A9C,0x80042AAC,ZZ_42A04_98);
ZZ_MARK_TARGET(0x80042AAC,0x80042AD4,ZZ_42A04_A8);
ZZ_MARK_TARGET(0x80042AD4,0x80042AD8,ZZ_42A04_D0);
ZZ_MARK_TARGET(0x80042AD8,0x80042AE0,ZZ_42A04_D4);
