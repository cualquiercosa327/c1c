#ifdef ZZ_INCLUDE_CODE
ZZ_251B8:
	SP -= 72;
	V0 = EMU_ReadU32(SP + 88); //+ 0x58
	V1 = EMU_ReadU32(SP + 92); //+ 0x5C
	EMU_Write32(SP + 56,S4); //+ 0x38
	S4 = A1;
	EMU_Write32(SP + 52,S3); //+ 0x34
	EMU_Write32(SP + 64,RA); //+ 0x40
	EMU_Write32(SP + 60,S5); //+ 0x3C
	EMU_Write32(SP + 48,S2); //+ 0x30
	EMU_Write32(SP + 44,S1); //+ 0x2C
	EMU_Write32(SP + 40,S0); //+ 0x28
	EMU_Write32(SP + 16,A0); //+ 0x10
	EMU_Write32(SP + 20,A2); //+ 0x14
	EMU_Write32(SP + 28,A3); //+ 0x1C
	EMU_Write32(SP + 32,R0); //+ 0x20
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 36,V1); //+ 0x24
	V1 = EMU_ReadU32(S4);
	V0 = 0x2;
	if (V1 != V0)
	{
		S3 = SP + 16;
		ZZ_CLOCKCYCLES(21,0x80025218);
		goto ZZ_251B8_60;
	}
	S3 = SP + 16;
	S0 = EMU_ReadU32(S4 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(24,0x8002521C);
	goto ZZ_251B8_64;
ZZ_251B8_60:
	S0 = EMU_ReadU32(S4 + 108); //+ 0x6C
	ZZ_CLOCKCYCLES(1,0x8002521C);
ZZ_251B8_64:
	if (!S0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(3,0x80025298);
		goto ZZ_251B8_E0;
	}
	V0 = -255;
	S5 = -25;
	ZZ_CLOCKCYCLES(4,0x8002522C);
ZZ_251B8_74:
	A0 = EMU_ReadU32(S0 + 108); //+ 0x6C
	S2 = EMU_ReadU32(S0 + 104); //+ 0x68
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x80025270);
		goto ZZ_251B8_B8;
	}
	ZZ_CLOCKCYCLES(4,0x8002523C);
ZZ_251B8_84:
	A1 = 0x80020000;
	A1 += 19656;
	S1 = EMU_ReadU32(A0 + 104); //+ 0x68
	RA = 0x80025250; //ZZ_251B8_98
	A2 = S3;
	ZZ_CLOCKCYCLES(5,0x8001B6F0);
	EMU_Invoke(0x8001B6F0,0);
ZZ_251B8_98:
	if (V0 != S5)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x80025268);
		goto ZZ_251B8_B0;
	}
	A0 = S1;
	A0 = S0;
	RA = 0x80025264; //ZZ_251B8_AC
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x8001CDD0);
	goto ZZ_1CDD0;
ZZ_251B8_AC:
	A0 = S1;
	ZZ_CLOCKCYCLES(1,0x80025268);
ZZ_251B8_B0:
	if (A0)
	{
		ZZ_CLOCKCYCLES(2,0x8002523C);
		goto ZZ_251B8_84;
	}
	ZZ_CLOCKCYCLES(2,0x80025270);
ZZ_251B8_B8:
	A0 = S0;
	RA = 0x8002527C; //ZZ_251B8_C4
	A1 = S3;
	ZZ_CLOCKCYCLES(3,0x80024CC8);
	goto ZZ_24CC8;
ZZ_251B8_C4:
	if (V0 != S5)
	{
		S0 = S2;
		ZZ_CLOCKCYCLES(2,0x80025290);
		goto ZZ_251B8_D8;
	}
	S0 = S2;
	A0 = S4;
	RA = 0x80025290; //ZZ_251B8_D8
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x8001CDD0);
	goto ZZ_1CDD0;
ZZ_251B8_D8:
	if (S0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x8002522C);
		goto ZZ_251B8_74;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(2,0x80025298);
ZZ_251B8_E0:
	RA = EMU_ReadU32(SP + 64); //+ 0x40
	S5 = EMU_ReadU32(SP + 60); //+ 0x3C
	S4 = EMU_ReadU32(SP + 56); //+ 0x38
	S3 = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	//ZZ_JUMPREGISTER(0x80023D40,ZZ_201DC_3B64);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800251B8,0x80025218,ZZ_251B8);
ZZ_MARK_TARGET(0x80025218,0x8002521C,ZZ_251B8_60);
ZZ_MARK_TARGET(0x8002521C,0x8002522C,ZZ_251B8_64);
ZZ_MARK_TARGET(0x8002522C,0x8002523C,ZZ_251B8_74);
ZZ_MARK_TARGET(0x8002523C,0x80025250,ZZ_251B8_84);
ZZ_MARK_TARGET(0x80025250,0x80025264,ZZ_251B8_98);
ZZ_MARK_TARGET(0x80025264,0x80025268,ZZ_251B8_AC);
ZZ_MARK_TARGET(0x80025268,0x80025270,ZZ_251B8_B0);
ZZ_MARK_TARGET(0x80025270,0x8002527C,ZZ_251B8_B8);
ZZ_MARK_TARGET(0x8002527C,0x80025290,ZZ_251B8_C4);
ZZ_MARK_TARGET(0x80025290,0x80025298,ZZ_251B8_D8);
ZZ_MARK_TARGET(0x80025298,0x800252C0,ZZ_251B8_E0);
