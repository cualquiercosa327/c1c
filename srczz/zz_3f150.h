#ifdef ZZ_INCLUDE_CODE
ZZ_3F150:
	A2 = A0;
	V1 = 0x80050000;
	V1 += 18940;
	V0 = A2 << 2;
	V1 += V0;
	A3 = EMU_ReadU32(V1);
	A0 = A1;
	if (A0 == A3)
	{
		ZZ_CLOCKCYCLES(9,0x8003F1F0);
		goto ZZ_3F150_A0;
	}
	if (!A0)
	{
		V0 = 0xFF0000;
		ZZ_CLOCKCYCLES(11,0x8003F1B8);
		goto ZZ_3F150_68;
	}
	V0 = 0xFF0000;
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 18936); //+ 0x49F8
	V0 |= 0xFFFF;
	EMU_Write32(V1,A0);
	A0 = EMU_ReadU32(A1);
	V1 = A2 + 16;
	A0 &= V0;
	V0 = 0x1;
	V0 <<= V1;
	V1 = 0x800000;
	V0 |= V1;
	A0 |= V0;
	EMU_Write32(A1,A0);
	ZZ_CLOCKCYCLES(26,0x8003F1F0);
	goto ZZ_3F150_A0;
ZZ_3F150_68:
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 18936); //+ 0x49F8
	V0 |= 0xFFFF;
	EMU_Write32(V1,R0);
	V1 = EMU_ReadU32(A1);
	A0 = A2 + 16;
	V1 &= V0;
	V0 = 0x800000;
	V1 |= V0;
	V0 = 0x1;
	V0 <<= A0;
	V0 = ~V0;
	V1 &= V0;
	EMU_Write32(A1,V1);
	ZZ_CLOCKCYCLES(14,0x8003F1F0);
ZZ_3F150_A0:
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 = A3;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003F150,0x8003F1B8,ZZ_3F150);
ZZ_MARK_TARGET(0x8003F1B8,0x8003F1F0,ZZ_3F150_68);
ZZ_MARK_TARGET(0x8003F1F0,0x8003F1F8,ZZ_3F150_A0);
