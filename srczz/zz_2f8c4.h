#ifdef ZZ_INCLUDE_CODE
ZZ_2F8C4:
	SP -= 128;
	A0 = 0x800;
	EMU_Write32(SP + 124,RA); //+ 0x7C
	EMU_Write32(SP + 120,S6); //+ 0x78
	EMU_Write32(SP + 116,S5); //+ 0x74
	EMU_Write32(SP + 112,S4); //+ 0x70
	EMU_Write32(SP + 108,S3); //+ 0x6C
	EMU_Write32(SP + 104,S2); //+ 0x68
	EMU_Write32(SP + 100,S1); //+ 0x64
	RA = 0x8002F8F0; //ZZ_2F8C4_2C
	EMU_Write32(SP + 96,S0); //+ 0x60
	ZZ_CLOCKCYCLES(11,0x80011A58);
	goto ZZ_11A58;
ZZ_2F8C4_2C:
	A0 = 0x10;
	A1 = SP + 64;
	RA = 0x8002F900; //ZZ_2F8C4_3C
	S3 = V0;
	ZZ_CLOCKCYCLES(4,0x80043A24);
	goto ZZ_43A24;
ZZ_2F8C4_3C:
	A0 = 0x2;
	A1 = SP + 64;
	RA = 0x8002F910; //ZZ_2F8C4_4C
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80043520);
	goto ZZ_43520;
ZZ_2F8C4_4C:
	A0 = 0x1;
	A1 = S3;
	RA = 0x8002F920; //ZZ_2F8C4_5C
	A2 = 0x80;
	ZZ_CLOCKCYCLES(4,0x800439A4);
	goto ZZ_439A4;
ZZ_2F8C4_5C:
	A0 = R0;
	RA = 0x8002F92C; //ZZ_2F8C4_68
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x80043984);
	goto ZZ_43984;
ZZ_2F8C4_68:
	if (V0)
	{
		S0 = V0 < 1;
		ZZ_CLOCKCYCLES(2,0x8002FCF8);
		goto ZZ_2F8C4_434;
	}
	S0 = V0 < 1;
	A0 = S3 + 1;
	A1 = 0x80050000;
	A1 += 25824;
	RA = 0x8002F948; //ZZ_2F8C4_84
	A2 = 0x5;
	ZZ_CLOCKCYCLES(7,0x8003D6C0);
	goto ZZ_3D6C0;
ZZ_2F8C4_84:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002FCF8);
		goto ZZ_2F8C4_434;
	}
	A0 = 0x80010000;
	A0 += 3008;
	RA = 0x8002F960; //ZZ_2F8C4_9C
	ZZ_CLOCKCYCLES(6,0x8003D730);
	goto ZZ_3D730;
ZZ_2F8C4_9C:
	EMU_ReadLeft(S3 + 143,&V0); //+ 0x8F
	EMU_ReadRight(S3 + 140,&V0); //+ 0x8C
	EMU_WriteLeft(SP + 75,V0); //+ 0x4B
	EMU_WriteRight(SP + 72,V0); //+ 0x48
	A0 = EMU_ReadU32(SP + 72); //+ 0x48
	RA = 0x8002F980; //ZZ_2F8C4_BC
	A1 = SP + 64;
	ZZ_CLOCKCYCLES(8,0x80043A24);
	goto ZZ_43A24;
ZZ_2F8C4_BC:
	A0 = 0x2;
	A1 = SP + 64;
	RA = 0x8002F990; //ZZ_2F8C4_CC
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80043520);
	goto ZZ_43520;
ZZ_2F8C4_CC:
	A0 = 0x1;
	A1 = S3;
	RA = 0x8002F9A0; //ZZ_2F8C4_DC
	A2 = 0x80;
	ZZ_CLOCKCYCLES(4,0x800439A4);
	goto ZZ_439A4;
ZZ_2F8C4_DC:
	A0 = R0;
	RA = 0x8002F9AC; //ZZ_2F8C4_E8
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x80043984);
	goto ZZ_43984;
ZZ_2F8C4_E8:
	V0 = V0 < 1;
	if (V0 != S0)
	{
		S0 = S3;
		ZZ_CLOCKCYCLES(3,0x8002FCF8);
		goto ZZ_2F8C4_434;
	}
	S0 = S3;
	V1 = -1;
	S2 = 0x3;
	V0 = SP + 28;
	ZZ_CLOCKCYCLES(6,0x8002F9C4);
ZZ_2F8C4_100:
	EMU_Write32(V0 + 32,V1); //+ 0x20
	S2 -= 1;
	if ((int32_t)S2 >= 0)
	{
		V0 -= 4;
		ZZ_CLOCKCYCLES(4,0x8002F9C4);
		goto ZZ_2F8C4_100;
	}
	V0 -= 4;
	V0 = S3 + 2048;
	V0 = S0 < V0;
	if (!V0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(8,0x8002FA98);
		goto ZZ_2F8C4_1D4;
	}
	S1 = R0;
	S2 = SP + 16;
	S4 = SP - 144;
	ZZ_CLOCKCYCLES(10,0x8002F9EC);
ZZ_2F8C4_128:
	A2 = EMU_ReadU8(S0);
	if (!A2)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x8002FA98);
		goto ZZ_2F8C4_1D4;
	}
	A0 = S2;
	RA = 0x8002FA04; //ZZ_2F8C4_140
	A1 = S0 + 8;
	ZZ_CLOCKCYCLES(6,0x8003D710);
	goto ZZ_3D710;
ZZ_2F8C4_140:
	V0 = EMU_ReadU8(S0);
	V0 += S2;
	EMU_Write8(V0,R0);
	EMU_ReadLeft(S0 + 5,&V0); //+ 0x5
	EMU_ReadRight(S0 + 2,&V0); //+ 0x2
	EMU_WriteLeft(SP + 79,V0); //+ 0x4F
	EMU_WriteRight(SP + 76,V0); //+ 0x4C
	RA = 0x8002FA30; //ZZ_2F8C4_16C
	A0 = S2;
	ZZ_CLOCKCYCLES(11,0x8003D6E0);
	goto ZZ_3D6E0;
ZZ_2F8C4_16C:
	V1 = 0x2;
	if (V0 != V1)
	{
		V0 = 0x53;
		ZZ_CLOCKCYCLES(3,0x8002FA68);
		goto ZZ_2F8C4_1A4;
	}
	V0 = 0x53;
	V1 = EMU_ReadU8(SP + 16); //+ 0x10
	if (V1 == V0)
	{
		V0 = 0x73;
		ZZ_CLOCKCYCLES(7,0x8002FA54);
		goto ZZ_2F8C4_190;
	}
	V0 = 0x73;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(9,0x8002FA68);
		goto ZZ_2F8C4_1A4;
	}
	ZZ_CLOCKCYCLES(9,0x8002FA54);
ZZ_2F8C4_190:
	V0 = EMU_ReadU8(SP + 17); //+ 0x11
	V1 = EMU_ReadU32(SP + 76); //+ 0x4C
	V0 <<= 2;
	V0 += S4;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(5,0x8002FA68);
ZZ_2F8C4_1A4:
	V0 = EMU_ReadU8(S0);
	S1 += 1;
	V1 = V0 & 0x1;
	V1 += 8;
	V0 += V1;
	S0 += V0;
	V0 = (int32_t)S1 < 128;
	if (!V0)
	{
		V0 = S3 + 2048;
		ZZ_CLOCKCYCLES(9,0x8002FA98);
		goto ZZ_2F8C4_1D4;
	}
	V0 = S3 + 2048;
	V0 = S0 < V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002F9EC);
		goto ZZ_2F8C4_128;
	}
	ZZ_CLOCKCYCLES(12,0x8002FA98);
ZZ_2F8C4_1D4:
	S2 = R0;
	S4 = SP + 16;
	S5 = S3 + 2048;
	S6 = S3 < S5;
	V0 = S2 << 2;
	ZZ_CLOCKCYCLES(5,0x8002FAAC);
ZZ_2F8C4_1E8:
	V0 += S4;
	A0 = EMU_ReadU32(V0 + 32); //+ 0x20
	V0 = -1;
	if (A0 == V0)
	{
		S0 = S3;
		ZZ_CLOCKCYCLES(5,0x8002FAFC);
		goto ZZ_2F8C4_238;
	}
	S0 = S3;
	RA = 0x8002FAC8; //ZZ_2F8C4_204
	A1 = SP + 64;
	ZZ_CLOCKCYCLES(7,0x80043A24);
	goto ZZ_43A24;
ZZ_2F8C4_204:
	A0 = 0x2;
	A1 = SP + 64;
	RA = 0x8002FAD8; //ZZ_2F8C4_214
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80043520);
	goto ZZ_43520;
ZZ_2F8C4_214:
	A0 = 0x1;
	A1 = S3;
	RA = 0x8002FAE8; //ZZ_2F8C4_224
	A2 = 0x80;
	ZZ_CLOCKCYCLES(4,0x800439A4);
	goto ZZ_439A4;
ZZ_2F8C4_224:
	A0 = R0;
	RA = 0x8002FAF4; //ZZ_2F8C4_230
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x80043984);
	goto ZZ_43984;
ZZ_2F8C4_230:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002FCF8);
		goto ZZ_2F8C4_434;
	}
	ZZ_CLOCKCYCLES(2,0x8002FAFC);
ZZ_2F8C4_238:
	if (!S6)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(2,0x8002FCD8);
		goto ZZ_2F8C4_414;
	}
	S1 = R0;
	ZZ_CLOCKCYCLES(2,0x8002FB04);
ZZ_2F8C4_240:
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002FCD8);
		goto ZZ_2F8C4_414;
	}
	EMU_ReadLeft(S0 + 5,&V0); //+ 0x5
	EMU_ReadRight(S0 + 2,&V0); //+ 0x2
	EMU_WriteLeft(SP + 75,V0); //+ 0x4B
	EMU_WriteRight(SP + 72,V0); //+ 0x48
	EMU_ReadLeft(S0 + 13,&V0); //+ 0xD
	EMU_ReadRight(S0 + 10,&V0); //+ 0xA
	EMU_WriteLeft(SP + 83,V0); //+ 0x53
	EMU_WriteRight(SP + 80,V0); //+ 0x50
	if (!S1)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(16,0x8002FB54);
		goto ZZ_2F8C4_290;
	}
	V0 = 0x1;
	if (S1 == V0)
	{
		A0 = S4;
		ZZ_CLOCKCYCLES(18,0x8002FB60);
		goto ZZ_2F8C4_29C;
	}
	A0 = S4;
	ZZ_CLOCKCYCLES(20,0x8002FB78);
	goto ZZ_2F8C4_2B4;
ZZ_2F8C4_290:
	V0 = EMU_ReadU16(GP + 236); //+ 0xEC
	EMU_Write16(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(3,0x8002FB94);
	goto ZZ_2F8C4_2D0;
ZZ_2F8C4_29C:
	V0 = EMU_ReadS16(GP + 240); //+ 0xF0
	V1 = EMU_ReadS8(GP + 242); //+ 0xF2
	EMU_Write16(SP + 16,V0); //+ 0x10
	EMU_Write8(SP + 18,V1); //+ 0x12
	ZZ_CLOCKCYCLES(6,0x8002FB94);
	goto ZZ_2F8C4_2D0;
ZZ_2F8C4_2B4:
	A2 = EMU_ReadU8(S0 + 32); //+ 0x20
	RA = 0x8002FB84; //ZZ_2F8C4_2C0
	A1 = S0 + 33;
	ZZ_CLOCKCYCLES(3,0x8003D710);
	goto ZZ_3D710;
ZZ_2F8C4_2C0:
	V0 = EMU_ReadU8(S0 + 32); //+ 0x20
	V0 += S4;
	EMU_Write8(V0,R0);
	ZZ_CLOCKCYCLES(4,0x8002FB94);
ZZ_2F8C4_2D0:
	V1 = EMU_ReadU8(SP + 16); //+ 0x10
	V0 = 0x53;
	if (V1 == V0)
	{
		V0 = 0x73;
		ZZ_CLOCKCYCLES(4,0x8002FBAC);
		goto ZZ_2F8C4_2E8;
	}
	V0 = 0x73;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002FCB8);
		goto ZZ_2F8C4_3F4;
	}
	ZZ_CLOCKCYCLES(6,0x8002FBAC);
ZZ_2F8C4_2E8:
	A0 = EMU_ReadU8(SP + 23); //+ 0x17
	V0 = A0 < 65;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002FBD4);
		goto ZZ_2F8C4_310;
	}
	V0 = EMU_ReadU8(SP + 22); //+ 0x16
	V0 <<= 4;
	V0 -= 823;
	ZZ_CLOCKCYCLES(10,0x8002FBE4);
	goto ZZ_2F8C4_320;
ZZ_2F8C4_310:
	V0 = EMU_ReadU8(SP + 22); //+ 0x16
	V0 <<= 4;
	V0 -= 816;
	ZZ_CLOCKCYCLES(4,0x8002FBE4);
ZZ_2F8C4_320:
	A1 = V0 + A0;
	V1 = EMU_ReadU8(SP + 27); //+ 0x1B
	V0 = 0x44;
	if (V1 == V0)
	{
		A2 = 0x7F0000;
		ZZ_CLOCKCYCLES(5,0x8002FC04);
		goto ZZ_2F8C4_340;
	}
	A2 = 0x7F0000;
	V0 = 0x64;
	if (V1 != V0)
	{
		A0 = A1 << 1;
		ZZ_CLOCKCYCLES(8,0x8002FC7C);
		goto ZZ_2F8C4_3B8;
	}
	A0 = A1 << 1;
	ZZ_CLOCKCYCLES(8,0x8002FC04);
ZZ_2F8C4_340:
	A2 |= 0xFFFF;
	A3 = 0x10000;
	A3 |= 0xFFFF;
	A0 = A1 << 1;
	A0 += A1;
	A0 <<= 2;
	V1 = 0xFF800000;
	AT = 0x80060000;
	AT += A0;
	A1 = EMU_ReadU32(AT - 8132); //+ 0xFFFFE03C
	V0 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 &= V1;
	V0 &= A2;
	A1 |= V0;
	AT = 0x80060000;
	AT += A0;
	V0 = EMU_ReadU32(AT - 8128); //+ 0xFFFFE040
	V1 = EMU_ReadU32(SP + 80); //+ 0x50
	A2 = 0xFFFE0000;
	AT = 0x80060000;
	AT += A0;
	EMU_Write32(AT - 8132,A1); //+ 0xFFFFE03C
	V0 &= A2;
	V1 &= A3;
	V0 |= V1;
	AT = 0x80060000;
	AT += A0;
	EMU_Write32(AT - 8128,V0); //+ 0xFFFFE040
	ZZ_CLOCKCYCLES(30,0x8002FCB8);
	goto ZZ_2F8C4_3F4;
ZZ_2F8C4_3B8:
	A2 = 0xFF0000;
	A2 |= 0xFFFF;
	A0 += A1;
	A0 <<= 2;
	A1 = 0xFF000000;
	AT = 0x80060000;
	AT += A0;
	V0 = EMU_ReadU32(AT - 8124); //+ 0xFFFFE044
	V1 = EMU_ReadU32(SP + 72); //+ 0x48
	V0 &= A1;
	V1 &= A2;
	V0 |= V1;
	AT = 0x80060000;
	AT += A0;
	EMU_Write32(AT - 8124,V0); //+ 0xFFFFE044
	ZZ_CLOCKCYCLES(15,0x8002FCB8);
ZZ_2F8C4_3F4:
	V0 = EMU_ReadU8(S0);
	S1 += 1;
	S0 += V0;
	V0 = (int32_t)S1 < 64;
	if (!V0)
	{
		V0 = S0 < S5;
		ZZ_CLOCKCYCLES(6,0x8002FCD8);
		goto ZZ_2F8C4_414;
	}
	V0 = S0 < S5;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002FB04);
		goto ZZ_2F8C4_240;
	}
	ZZ_CLOCKCYCLES(8,0x8002FCD8);
ZZ_2F8C4_414:
	S2 += 1;
	V0 = (int32_t)S2 < 4;
	if (V0)
	{
		V0 = S2 << 2;
		ZZ_CLOCKCYCLES(4,0x8002FAAC);
		goto ZZ_2F8C4_1E8;
	}
	V0 = S2 << 2;
	RA = 0x8002FCF0; //ZZ_2F8C4_42C
	A0 = S3;
	ZZ_CLOCKCYCLES(6,0x80011C8C);
	goto ZZ_11C8C;
ZZ_2F8C4_42C:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x8002FD04);
	goto ZZ_2F8C4_440;
ZZ_2F8C4_434:
	RA = 0x8002FD00; //ZZ_2F8C4_43C
	A0 = S3;
	ZZ_CLOCKCYCLES(2,0x80011C8C);
	goto ZZ_11C8C;
ZZ_2F8C4_43C:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8002FD04);
ZZ_2F8C4_440:
	RA = EMU_ReadU32(SP + 124); //+ 0x7C
	S6 = EMU_ReadU32(SP + 120); //+ 0x78
	S5 = EMU_ReadU32(SP + 116); //+ 0x74
	S4 = EMU_ReadU32(SP + 112); //+ 0x70
	S3 = EMU_ReadU32(SP + 108); //+ 0x6C
	S2 = EMU_ReadU32(SP + 104); //+ 0x68
	S1 = EMU_ReadU32(SP + 100); //+ 0x64
	S0 = EMU_ReadU32(SP + 96); //+ 0x60
	SP += 128;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80016678,ZZ_1652C_14C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002F8C4,0x8002F8F0,ZZ_2F8C4);
ZZ_MARK_TARGET(0x8002F8F0,0x8002F900,ZZ_2F8C4_2C);
ZZ_MARK_TARGET(0x8002F900,0x8002F910,ZZ_2F8C4_3C);
ZZ_MARK_TARGET(0x8002F910,0x8002F920,ZZ_2F8C4_4C);
ZZ_MARK_TARGET(0x8002F920,0x8002F92C,ZZ_2F8C4_5C);
ZZ_MARK_TARGET(0x8002F92C,0x8002F948,ZZ_2F8C4_68);
ZZ_MARK_TARGET(0x8002F948,0x8002F960,ZZ_2F8C4_84);
ZZ_MARK_TARGET(0x8002F960,0x8002F980,ZZ_2F8C4_9C);
ZZ_MARK_TARGET(0x8002F980,0x8002F990,ZZ_2F8C4_BC);
ZZ_MARK_TARGET(0x8002F990,0x8002F9A0,ZZ_2F8C4_CC);
ZZ_MARK_TARGET(0x8002F9A0,0x8002F9AC,ZZ_2F8C4_DC);
ZZ_MARK_TARGET(0x8002F9AC,0x8002F9C4,ZZ_2F8C4_E8);
ZZ_MARK_TARGET(0x8002F9C4,0x8002F9EC,ZZ_2F8C4_100);
ZZ_MARK_TARGET(0x8002F9EC,0x8002FA04,ZZ_2F8C4_128);
ZZ_MARK_TARGET(0x8002FA04,0x8002FA30,ZZ_2F8C4_140);
ZZ_MARK_TARGET(0x8002FA30,0x8002FA54,ZZ_2F8C4_16C);
ZZ_MARK_TARGET(0x8002FA54,0x8002FA68,ZZ_2F8C4_190);
ZZ_MARK_TARGET(0x8002FA68,0x8002FA98,ZZ_2F8C4_1A4);
ZZ_MARK_TARGET(0x8002FA98,0x8002FAAC,ZZ_2F8C4_1D4);
ZZ_MARK_TARGET(0x8002FAAC,0x8002FAC8,ZZ_2F8C4_1E8);
ZZ_MARK_TARGET(0x8002FAC8,0x8002FAD8,ZZ_2F8C4_204);
ZZ_MARK_TARGET(0x8002FAD8,0x8002FAE8,ZZ_2F8C4_214);
ZZ_MARK_TARGET(0x8002FAE8,0x8002FAF4,ZZ_2F8C4_224);
ZZ_MARK_TARGET(0x8002FAF4,0x8002FAFC,ZZ_2F8C4_230);
ZZ_MARK_TARGET(0x8002FAFC,0x8002FB04,ZZ_2F8C4_238);
ZZ_MARK_TARGET(0x8002FB04,0x8002FB54,ZZ_2F8C4_240);
ZZ_MARK_TARGET(0x8002FB54,0x8002FB60,ZZ_2F8C4_290);
ZZ_MARK_TARGET(0x8002FB60,0x8002FB78,ZZ_2F8C4_29C);
ZZ_MARK_TARGET(0x8002FB78,0x8002FB84,ZZ_2F8C4_2B4);
ZZ_MARK_TARGET(0x8002FB84,0x8002FB94,ZZ_2F8C4_2C0);
ZZ_MARK_TARGET(0x8002FB94,0x8002FBAC,ZZ_2F8C4_2D0);
ZZ_MARK_TARGET(0x8002FBAC,0x8002FBD4,ZZ_2F8C4_2E8);
ZZ_MARK_TARGET(0x8002FBD4,0x8002FBE4,ZZ_2F8C4_310);
ZZ_MARK_TARGET(0x8002FBE4,0x8002FC04,ZZ_2F8C4_320);
ZZ_MARK_TARGET(0x8002FC04,0x8002FC7C,ZZ_2F8C4_340);
ZZ_MARK_TARGET(0x8002FC7C,0x8002FCB8,ZZ_2F8C4_3B8);
ZZ_MARK_TARGET(0x8002FCB8,0x8002FCD8,ZZ_2F8C4_3F4);
ZZ_MARK_TARGET(0x8002FCD8,0x8002FCF0,ZZ_2F8C4_414);
ZZ_MARK_TARGET(0x8002FCF0,0x8002FCF8,ZZ_2F8C4_42C);
ZZ_MARK_TARGET(0x8002FCF8,0x8002FD00,ZZ_2F8C4_434);
ZZ_MARK_TARGET(0x8002FD00,0x8002FD04,ZZ_2F8C4_43C);
ZZ_MARK_TARGET(0x8002FD04,0x8002FD30,ZZ_2F8C4_440);
