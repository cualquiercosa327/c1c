#ifdef ZZ_INCLUDE_CODE
ZZ_47208:
	SP -= 144;
	EMU_Write32(SP + 112,S2); //+ 0x70
	S2 = A0;
	EMU_Write32(SP + 132,S7); //+ 0x84
	S7 = R0;
	EMU_Write32(SP + 120,S4); //+ 0x78
	S4 = R0;
	EMU_Write32(SP + 128,S6); //+ 0x80
	S6 = R0;
	EMU_Write32(SP + 140,RA); //+ 0x8C
	EMU_Write32(SP + 136,FP); //+ 0x88
	EMU_Write32(SP + 124,S5); //+ 0x7C
	EMU_Write32(SP + 116,S3); //+ 0x74
	EMU_Write32(SP + 108,S1); //+ 0x6C
	EMU_Write32(SP + 104,S0); //+ 0x68
	EMU_Write32(SP + 88,R0); //+ 0x58
	S3 = EMU_ReadU32(S2);
	FP = R0;
	S5 = S3 < 1;
	if (S5)
	{
		EMU_Write32(SP + 16,R0); //+ 0x10
		ZZ_CLOCKCYCLES(21,0x80047268);
		goto ZZ_47208_60;
	}
	EMU_Write32(SP + 16,R0); //+ 0x10
	V0 = S3 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(24,0x80047388);
		goto ZZ_47208_180;
	}
	ZZ_CLOCKCYCLES(24,0x80047268);
ZZ_47208_60:
	S0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = S0 & 0x100;
	if (!V0)
	{
		V0 = -257;
		ZZ_CLOCKCYCLES(5,0x80047288);
		goto ZZ_47208_80;
	}
	V0 = -257;
	S0 &= V0;
	T0 = 0x1;
	EMU_Write32(SP + 88,T0); //+ 0x58
	ZZ_CLOCKCYCLES(8,0x80047288);
ZZ_47208_80:
	V0 = S0 < 10;
	if (!V0)
	{
		V0 = S0 << 2;
		ZZ_CLOCKCYCLES(3,0x800472B8);
		goto ZZ_47208_B0;
	}
	V0 = S0 << 2;
	AT = 0x80050000;
	AT += V0;
	A0 = EMU_ReadU32(AT + 23980); //+ 0x5DAC
	S1 = 0x80050000;
	S1 += 23980;
	RA = 0x800472B0; //ZZ_47208_A8
	ZZ_CLOCKCYCLES(10,0x80047190);
	goto ZZ_47190;
ZZ_47208_A8:
	if (!V0)
	{
		S4 = 0x1;
		ZZ_CLOCKCYCLES(2,0x800472C0);
		goto ZZ_47208_B8;
	}
	S4 = 0x1;
	ZZ_CLOCKCYCLES(2,0x800472B8);
ZZ_47208_B0:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x800476E4);
	goto ZZ_47208_4DC;
ZZ_47208_B8:
	A2 = SP + 16;
	A1 = 0x43;
	AT = 0x80050000;
	EMU_Write32(AT + 22880,S0); //+ 0x5960
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22880); //+ 0x5960
	A3 = -1;
	A0 = V1 << 2;
	A0 += S1;
	V0 = V1 << 4;
	V0 += V1;
	V0 <<= 2;
	V1 = 0x80050000;
	V1 += 24060;
	A0 = EMU_ReadU32(A0);
	V1 += V0;
	AT = 0x80050000;
	EMU_Write32(AT + 22872,A0); //+ 0x5958
	ZZ_CLOCKCYCLES(18,0x80047308);
ZZ_47208_100:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A1 -= 1;
	EMU_Write8(A2,V0);
	if (A1 != A3)
	{
		A2 += 1;
		ZZ_CLOCKCYCLES(6,0x80047308);
		goto ZZ_47208_100;
	}
	A2 += 1;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22880); //+ 0x5960
	V0 = 0x7;
	if (V1 == V0)
	{
		V0 = 0x8;
		ZZ_CLOCKCYCLES(11,0x80047344);
		goto ZZ_47208_13C;
	}
	V0 = 0x8;
	if (V1 == V0)
	{
		V0 = 0x7F;
		ZZ_CLOCKCYCLES(13,0x80047360);
		goto ZZ_47208_158;
	}
	V0 = 0x7F;
	ZZ_CLOCKCYCLES(15,0x80047378);
	goto ZZ_47208_170;
ZZ_47208_13C:
	V0 = 0x7F;
	AT = 0x80050000;
	EMU_Write32(AT + 22892,V0); //+ 0x596C
	AT = 0x80050000;
	EMU_Write32(AT + 22888,V0); //+ 0x5968
	ZZ_CLOCKCYCLES(7,0x80047388);
	goto ZZ_47208_180;
ZZ_47208_158:
	AT = 0x80050000;
	EMU_Write32(AT + 22892,R0); //+ 0x596C
	AT = 0x80050000;
	EMU_Write32(AT + 22888,V0); //+ 0x5968
	ZZ_CLOCKCYCLES(6,0x80047388);
	goto ZZ_47208_180;
ZZ_47208_170:
	AT = 0x80050000;
	EMU_Write32(AT + 22892,R0); //+ 0x596C
	AT = 0x80050000;
	EMU_Write32(AT + 22888,R0); //+ 0x5968
	ZZ_CLOCKCYCLES(4,0x80047388);
ZZ_47208_180:
	if (S5)
	{
		V0 = S3 & 0x8;
		ZZ_CLOCKCYCLES(2,0x80047398);
		goto ZZ_47208_190;
	}
	V0 = S3 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800474B4);
		goto ZZ_47208_2AC;
	}
	ZZ_CLOCKCYCLES(4,0x80047398);
ZZ_47208_190:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22880); //+ 0x5960
	V0 = (int32_t)V1 < 9;
	if (!V0)
	{
		V0 = (int32_t)V1 < 7;
		ZZ_CLOCKCYCLES(6,0x800474AC);
		goto ZZ_47208_2A4;
	}
	V0 = (int32_t)V1 < 7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x800474AC);
		goto ZZ_47208_2A4;
	}
	if (S4)
	{
		S6 = 0x1;
		ZZ_CLOCKCYCLES(10,0x80047410);
		goto ZZ_47208_208;
	}
	S6 = 0x1;
	A1 = SP + 16;
	A0 = 0x43;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22880); //+ 0x5960
	A2 = -1;
	V1 = V0 << 4;
	V1 += V0;
	V1 <<= 2;
	V0 = 0x80050000;
	V0 += 24060;
	V1 += V0;
	ZZ_CLOCKCYCLES(21,0x800473EC);
ZZ_47208_1E4:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A0 -= 1;
	EMU_Write8(A1,V0);
	if (A0 != A2)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x800473EC);
		goto ZZ_47208_1E4;
	}
	A1 += 1;
	V0 = 0xC010000;
	V0 |= 0x1C00;
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(9,0x80047410);
ZZ_47208_208:
	A2 = 0x81020000;
	A0 = EMU_ReadU32(S2 + 12); //+ 0xC
	A2 |= 0x409;
	V1 = A0 << 13;
	EMU_SMultiply(V1,A2);
	V0 = HI;
	A1 = A0 << 12;
	EMU_SMultiply(A1,A2);
	AT = 0x80050000;
	EMU_Write32(AT + 22888,A0); //+ 0x5968
	A0 = EMU_ReadU16(SP + 20); //+ 0x14
	V0 += V1;
	V0 = (int32_t)V0 >> 6;
	V1 = (int32_t)V1 >> 31;
	V0 = V0 - V1;
	V0 = V0 - A0;
	EMU_Write16(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU16(SP + 22); //+ 0x16
	A0 = EMU_ReadU16(SP + 54); //+ 0x36
	V1 = HI;
	V1 += A1;
	V1 = (int32_t)V1 >> 6;
	A1 = (int32_t)A1 >> 31;
	V1 = V1 - A1;
	V0 = V1 - V0;
	EMU_Write16(SP + 42,V0); //+ 0x2A
	V0 = EMU_ReadU16(SP + 46); //+ 0x2E
	A0 += V1;
	EMU_Write16(SP + 52,A0); //+ 0x34
	V0 += V1;
	EMU_Write16(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU16(SP + 76); //+ 0x4C
	A0 = EMU_ReadU16(SP + 78); //+ 0x4E
	V0 += V1;
	V1 += A0;
	EMU_Write16(SP + 72,V0); //+ 0x48
	EMU_Write16(SP + 74,V1); //+ 0x4A
	ZZ_CLOCKCYCLES(39,0x800474B4);
	goto ZZ_47208_2AC;
ZZ_47208_2A4:
	AT = 0x80050000;
	EMU_Write32(AT + 22888,R0); //+ 0x5968
	ZZ_CLOCKCYCLES(2,0x800474B4);
ZZ_47208_2AC:
	if (S5)
	{
		V0 = S3 & 0x10;
		ZZ_CLOCKCYCLES(2,0x800474C4);
		goto ZZ_47208_2BC;
	}
	V0 = S3 & 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80047594);
		goto ZZ_47208_38C;
	}
	ZZ_CLOCKCYCLES(4,0x800474C4);
ZZ_47208_2BC:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22880); //+ 0x5960
	V0 = (int32_t)V1 < 9;
	if (!V0)
	{
		V0 = (int32_t)V1 < 7;
		ZZ_CLOCKCYCLES(6,0x8004758C);
		goto ZZ_47208_384;
	}
	V0 = (int32_t)V1 < 7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004758C);
		goto ZZ_47208_384;
	}
	if (S4)
	{
		FP = 0x1;
		ZZ_CLOCKCYCLES(10,0x8004754C);
		goto ZZ_47208_344;
	}
	FP = 0x1;
	if (S6)
	{
		A1 = SP + 16;
		ZZ_CLOCKCYCLES(12,0x8004753C);
		goto ZZ_47208_334;
	}
	A1 = SP + 16;
	A0 = 0x43;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22880); //+ 0x5960
	A2 = -1;
	V1 = V0 << 4;
	V1 += V0;
	V1 <<= 2;
	V0 = 0x80050000;
	V0 += 24060;
	V1 += V0;
	ZZ_CLOCKCYCLES(22,0x8004751C);
ZZ_47208_314:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A0 -= 1;
	EMU_Write8(A1,V0);
	if (A0 != A2)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x8004751C);
		goto ZZ_47208_314;
	}
	A1 += 1;
	V0 = 0x80;
	ZZ_CLOCKCYCLES(8,0x80047548);
	goto ZZ_47208_340;
ZZ_47208_334:
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	V0 |= 0x80;
	ZZ_CLOCKCYCLES(3,0x80047548);
ZZ_47208_340:
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(1,0x8004754C);
ZZ_47208_344:
	A0 = 0x81020000;
	V0 = EMU_ReadU32(S2 + 16); //+ 0x10
	A0 |= 0x409;
	V1 = V0 << 7;
	V1 += V0;
	V1 <<= 8;
	EMU_SMultiply(V1,A0);
	AT = 0x80050000;
	EMU_Write32(AT + 22892,V0); //+ 0x596C
	V0 = HI;
	V0 += V1;
	V0 = (int32_t)V0 >> 6;
	V1 = (int32_t)V1 >> 31;
	V0 = V0 - V1;
	EMU_Write16(SP + 34,V0); //+ 0x22
	ZZ_CLOCKCYCLES(16,0x80047594);
	goto ZZ_47208_38C;
ZZ_47208_384:
	AT = 0x80050000;
	EMU_Write32(AT + 22892,R0); //+ 0x596C
	ZZ_CLOCKCYCLES(2,0x80047594);
ZZ_47208_38C:
	if (!S4)
	{
		ZZ_CLOCKCYCLES(2,0x800475D8);
		goto ZZ_47208_3D0;
	}
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 22756); //+ 0x58E4
	V0 = EMU_ReadU16(A0 + 426); //+ 0x1AA
	V0 >>= 7;
	S7 = V0 & 0x1;
	if (!S7)
	{
		ZZ_CLOCKCYCLES(11,0x80047640);
		goto ZZ_47208_438;
	}
	V1 = EMU_ReadU16(A0 + 426); //+ 0x1AA
	V1 &= 0xFF7F;
	EMU_Write16(A0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(17,0x80047640);
	goto ZZ_47208_438;
ZZ_47208_3D0:
	if (S5)
	{
		V0 = S3 & 0x2;
		ZZ_CLOCKCYCLES(2,0x800475E8);
		goto ZZ_47208_3E0;
	}
	V0 = S3 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80047608);
		goto ZZ_47208_400;
	}
	ZZ_CLOCKCYCLES(4,0x800475E8);
ZZ_47208_3E0:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(S2 + 8); //+ 0x8
	EMU_Write16(V0 + 388,V1); //+ 0x184
	V0 = EMU_ReadU16(S2 + 8); //+ 0x8
	AT = 0x80050000;
	EMU_Write16(AT + 22884,V0); //+ 0x5964
	ZZ_CLOCKCYCLES(8,0x80047608);
ZZ_47208_400:
	if (S5)
	{
		V0 = S3 & 0x4;
		ZZ_CLOCKCYCLES(2,0x80047618);
		goto ZZ_47208_410;
	}
	V0 = S3 & 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80047664);
		goto ZZ_47208_45C;
	}
	ZZ_CLOCKCYCLES(4,0x80047618);
ZZ_47208_410:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(S2 + 10); //+ 0xA
	EMU_Write16(V0 + 390,V1); //+ 0x186
	V0 = EMU_ReadU16(S2 + 10); //+ 0xA
	AT = 0x80050000;
	EMU_Write16(AT + 22886,V0); //+ 0x5966
	ZZ_CLOCKCYCLES(10,0x80047664);
	goto ZZ_47208_45C;
ZZ_47208_438:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	EMU_Write16(V0 + 388,R0); //+ 0x184
	EMU_Write16(V0 + 390,R0); //+ 0x186
	AT = 0x80050000;
	EMU_Write16(AT + 22884,R0); //+ 0x5964
	AT = 0x80050000;
	EMU_Write16(AT + 22886,R0); //+ 0x5966
	ZZ_CLOCKCYCLES(9,0x80047664);
ZZ_47208_45C:
	if (S4)
	{
		ZZ_CLOCKCYCLES(2,0x8004767C);
		goto ZZ_47208_474;
	}
	if (S6)
	{
		ZZ_CLOCKCYCLES(4,0x8004767C);
		goto ZZ_47208_474;
	}
	if (!FP)
	{
		ZZ_CLOCKCYCLES(6,0x80047684);
		goto ZZ_47208_47C;
	}
	ZZ_CLOCKCYCLES(6,0x8004767C);
ZZ_47208_474:
	RA = 0x80047684; //ZZ_47208_47C
	A0 = SP + 16;
	ZZ_CLOCKCYCLES(2,0x80047718);
	goto ZZ_47718;
ZZ_47208_47C:
	T0 = EMU_ReadU32(SP + 88); //+ 0x58
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x800476A4);
		goto ZZ_47208_49C;
	}
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 22880); //+ 0x5960
	RA = 0x800476A4; //ZZ_47208_49C
	ZZ_CLOCKCYCLES(8,0x80047D38);
	goto ZZ_47D38;
ZZ_47208_49C:
	if (!S4)
	{
		A0 = 0xD1;
		ZZ_CLOCKCYCLES(2,0x800476E0);
		goto ZZ_47208_4D8;
	}
	A0 = 0xD1;
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 22872); //+ 0x5958
	RA = 0x800476BC; //ZZ_47208_4B4
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x80046DB8);
	goto ZZ_46DB8;
ZZ_47208_4B4:
	if (!S7)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x800476E4);
		goto ZZ_47208_4DC;
	}
	V0 = R0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 |= 0x80;
	EMU_Write16(V0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(9,0x800476E0);
ZZ_47208_4D8:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x800476E4);
ZZ_47208_4DC:
	RA = EMU_ReadU32(SP + 140); //+ 0x8C
	FP = EMU_ReadU32(SP + 136); //+ 0x88
	S7 = EMU_ReadU32(SP + 132); //+ 0x84
	S6 = EMU_ReadU32(SP + 128); //+ 0x80
	S5 = EMU_ReadU32(SP + 124); //+ 0x7C
	S4 = EMU_ReadU32(SP + 120); //+ 0x78
	S3 = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 144;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002FFE4,ZZ_2FFC0_24);
	ZZ_JUMPREGISTER(0x80030050,ZZ_30008_48);
	ZZ_JUMPREGISTER(0x8004D468,ZZ_4D3BC_AC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047208,0x80047268,ZZ_47208);
ZZ_MARK_TARGET(0x80047268,0x80047288,ZZ_47208_60);
ZZ_MARK_TARGET(0x80047288,0x800472B0,ZZ_47208_80);
ZZ_MARK_TARGET(0x800472B0,0x800472B8,ZZ_47208_A8);
ZZ_MARK_TARGET(0x800472B8,0x800472C0,ZZ_47208_B0);
ZZ_MARK_TARGET(0x800472C0,0x80047308,ZZ_47208_B8);
ZZ_MARK_TARGET(0x80047308,0x80047344,ZZ_47208_100);
ZZ_MARK_TARGET(0x80047344,0x80047360,ZZ_47208_13C);
ZZ_MARK_TARGET(0x80047360,0x80047378,ZZ_47208_158);
ZZ_MARK_TARGET(0x80047378,0x80047388,ZZ_47208_170);
ZZ_MARK_TARGET(0x80047388,0x80047398,ZZ_47208_180);
ZZ_MARK_TARGET(0x80047398,0x800473EC,ZZ_47208_190);
ZZ_MARK_TARGET(0x800473EC,0x80047410,ZZ_47208_1E4);
ZZ_MARK_TARGET(0x80047410,0x800474AC,ZZ_47208_208);
ZZ_MARK_TARGET(0x800474AC,0x800474B4,ZZ_47208_2A4);
ZZ_MARK_TARGET(0x800474B4,0x800474C4,ZZ_47208_2AC);
ZZ_MARK_TARGET(0x800474C4,0x8004751C,ZZ_47208_2BC);
ZZ_MARK_TARGET(0x8004751C,0x8004753C,ZZ_47208_314);
ZZ_MARK_TARGET(0x8004753C,0x80047548,ZZ_47208_334);
ZZ_MARK_TARGET(0x80047548,0x8004754C,ZZ_47208_340);
ZZ_MARK_TARGET(0x8004754C,0x8004758C,ZZ_47208_344);
ZZ_MARK_TARGET(0x8004758C,0x80047594,ZZ_47208_384);
ZZ_MARK_TARGET(0x80047594,0x800475D8,ZZ_47208_38C);
ZZ_MARK_TARGET(0x800475D8,0x800475E8,ZZ_47208_3D0);
ZZ_MARK_TARGET(0x800475E8,0x80047608,ZZ_47208_3E0);
ZZ_MARK_TARGET(0x80047608,0x80047618,ZZ_47208_400);
ZZ_MARK_TARGET(0x80047618,0x80047640,ZZ_47208_410);
ZZ_MARK_TARGET(0x80047640,0x80047664,ZZ_47208_438);
ZZ_MARK_TARGET(0x80047664,0x8004767C,ZZ_47208_45C);
ZZ_MARK_TARGET(0x8004767C,0x80047684,ZZ_47208_474);
ZZ_MARK_TARGET(0x80047684,0x800476A4,ZZ_47208_47C);
ZZ_MARK_TARGET(0x800476A4,0x800476BC,ZZ_47208_49C);
ZZ_MARK_TARGET(0x800476BC,0x800476E0,ZZ_47208_4B4);
ZZ_MARK_TARGET(0x800476E0,0x800476E4,ZZ_47208_4D8);
ZZ_MARK_TARGET(0x800476E4,0x80047718,ZZ_47208_4DC);
