#ifdef ZZ_INCLUDE_CODE
ZZ_48FB4:
	T0 = A0;
	T1 = A1;
	A3 = R0;
	V1 = R0;
	A1 = A2 & 0xFFFF;
	ZZ_CLOCKCYCLES(5,0x80048FC8);
ZZ_48FB4_14:
	V0 = (int32_t)A1 >> V1;
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048FDC);
		goto ZZ_48FB4_28;
	}
	A3 = V1;
	ZZ_CLOCKCYCLES(5,0x80048FDC);
ZZ_48FB4_28:
	V1 += 1;
	V0 = (int32_t)V1 < 16;
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x80048FC8);
		goto ZZ_48FB4_14;
	}
	V0 = 0x1;
	A1 = A3 + 1;
	A1 = V0 << A1;
	V0 <<= A3;
	A1 = A1 - V0;
	A0 = A2 & 0xFFFF;
	A0 = A0 - V0;
	A2 = A0 << 1;
	A2 += A0;
	A2 <<= 2;
	EMU_SDivide(A2,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(16,0x80049020);
		goto ZZ_48FB4_6C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(17,0x80049020);
ZZ_48FB4_6C:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80049038);
		goto ZZ_48FB4_84;
	}
	AT = 0x80000000;
	if (A2 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80049038);
		goto ZZ_48FB4_84;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80049038);
ZZ_48FB4_84:
	A2 = LO;
	EMU_SMultiply(A1,A2);
	V1 = LO;
	V0 = 0x2AAA0000;
	V0 |= 0xAAAB;
	EMU_SMultiply(V1,V0);
	V1 = (int32_t)V1 >> 31;
	V0 = HI;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - V1;
	A0 = A0 - V0;
	V1 = A0 << 1;
	V1 += A0;
	V1 <<= 9;
	EMU_SDivide(V1,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(19,0x80049088);
		goto ZZ_48FB4_D4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(20,0x80049088);
ZZ_48FB4_D4:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800490A0);
		goto ZZ_48FB4_EC;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800490A0);
		goto ZZ_48FB4_EC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800490A0);
ZZ_48FB4_EC:
	V1 = LO;
	A1 = T0 & 0xFFFF;
	A0 = A3 - 12;
	V0 = A0 << 1;
	V0 += A0;
	V0 <<= 2;
	A1 += V0;
	A1 += A2;
	V0 = T1 & 0xFFFF;
	V1 += V0;
	if ((int32_t)V1 >= 0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(12,0x800490D4);
		goto ZZ_48FB4_120;
	}
	V0 = V1;
	V0 = V1 + 127;
	ZZ_CLOCKCYCLES(13,0x800490D4);
ZZ_48FB4_120:
	A0 = (int32_t)V0 >> 7;
	V0 = A0 << 7;
	A0 = V1 - V0;
	V0 = (int32_t)V1 < 128;
	V0 ^= 0x1;
	A1 += V0;
	if ((int32_t)A1 < 0)
	{
		V0 = (int32_t)A1 < 128;
		ZZ_CLOCKCYCLES(8,0x80049104);
		goto ZZ_48FB4_150;
	}
	V0 = (int32_t)A1 < 128;
	if (!V0)
	{
		V0 = A1 << 8;
		ZZ_CLOCKCYCLES(10,0x80049104);
		goto ZZ_48FB4_150;
	}
	V0 = A1 << 8;
	V0 |= A0;
	ZZ_CLOCKCYCLES(12,0x80049108);
	goto ZZ_48FB4_154;
ZZ_48FB4_150:
	V0 = -1;
	ZZ_CLOCKCYCLES(1,0x80049108);
ZZ_48FB4_154:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8004889C,ZZ_485E0_2BC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80048FB4,0x80048FC8,ZZ_48FB4);
ZZ_MARK_TARGET(0x80048FC8,0x80048FDC,ZZ_48FB4_14);
ZZ_MARK_TARGET(0x80048FDC,0x80049020,ZZ_48FB4_28);
ZZ_MARK_TARGET(0x80049020,0x80049038,ZZ_48FB4_6C);
ZZ_MARK_TARGET(0x80049038,0x80049088,ZZ_48FB4_84);
ZZ_MARK_TARGET(0x80049088,0x800490A0,ZZ_48FB4_D4);
ZZ_MARK_TARGET(0x800490A0,0x800490D4,ZZ_48FB4_EC);
ZZ_MARK_TARGET(0x800490D4,0x80049104,ZZ_48FB4_120);
ZZ_MARK_TARGET(0x80049104,0x80049108,ZZ_48FB4_150);
ZZ_MARK_TARGET(0x80049108,0x80049110,ZZ_48FB4_154);
