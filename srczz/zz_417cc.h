#ifdef ZZ_INCLUDE_CODE
ZZ_417CC:
	SP -= 32;
	T0 = A0;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V1 = EMU_ReadS16(T0 + 4); //+ 0x4
	if ((int32_t)V1 < 0)
	{
		T1 = A1;
		ZZ_CLOCKCYCLES(9,0x80041824);
		goto ZZ_417CC_58;
	}
	T1 = A1;
	V0 = 0x80050000;
	V0 += 19056;
	V0 = EMU_ReadU16(V0);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	A0 = V0 - 1;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(19,0x80041828);
		goto ZZ_417CC_5C;
	}
	V0 = V1;
	V1 = A0;
	V0 = V1;
	ZZ_CLOCKCYCLES(22,0x80041828);
	goto ZZ_417CC_5C;
ZZ_417CC_58:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80041828);
ZZ_417CC_5C:
	V1 = EMU_ReadS16(T0 + 6); //+ 0x6
	if ((int32_t)V1 < 0)
	{
		EMU_Write16(T0 + 4,V0); //+ 0x4
		ZZ_CLOCKCYCLES(4,0x80041868);
		goto ZZ_417CC_9C;
	}
	EMU_Write16(T0 + 4,V0); //+ 0x4
	V0 = 0x80050000;
	V0 += 19058;
	V0 = EMU_ReadU16(V0);
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	A0 = V0 - 1;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x8004186C);
		goto ZZ_417CC_A0;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(16,0x8004186C);
	goto ZZ_417CC_A0;
ZZ_417CC_9C:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x8004186C);
ZZ_417CC_A0:
	V0 = EMU_ReadU16(T0);
	V0 &= 0x3F;
	if (V0)
	{
		EMU_Write16(T0 + 6,V1); //+ 0x6
		ZZ_CLOCKCYCLES(5,0x80041894);
		goto ZZ_417CC_C8;
	}
	EMU_Write16(T0 + 6,V1); //+ 0x6
	V0 = EMU_ReadU16(T0 + 4); //+ 0x4
	V0 &= 0x3F;
	if (!V0)
	{
		V0 = 0x4FF0000;
		ZZ_CLOCKCYCLES(10,0x8004196C);
		goto ZZ_417CC_1A0;
	}
	V0 = 0x4FF0000;
	ZZ_CLOCKCYCLES(10,0x80041894);
ZZ_417CC_C8:
	A0 = 0xFF0000;
	A0 |= 0xFFFF;
	A1 = 0xE4FF0000;
	A1 |= 0xFFFF;
	A3 = 0x3FF0000;
	A2 = 0x80050000;
	A2 += 28792;
	V0 = A2 & A0;
	V1 = 0x7000000;
	V0 |= V1;
	S0 = 0xE3000000;
	S1 = 0xE5000000;
	AT = 0x80050000;
	EMU_Write32(AT + 28760,V0); //+ 0x7058
	V0 = 0xE6000000;
	A0 &= T1;
	AT = 0x80050000;
	EMU_Write32(AT + 28776,V0); //+ 0x7068
	V0 = 0x60000000;
	A0 |= V0;
	AT = 0x80050000;
	EMU_Write32(AT + 28764,S0); //+ 0x705C
	AT = 0x80050000;
	EMU_Write32(AT + 28768,A1); //+ 0x7060
	AT = 0x80050000;
	EMU_Write32(AT + 28772,S1); //+ 0x7064
	AT = 0x80050000;
	EMU_Write32(AT + 28780,A0); //+ 0x706C
	V0 = EMU_ReadU32(T0);
	A3 |= 0xFFFF;
	AT = 0x80050000;
	EMU_Write32(AT + 28784,V0); //+ 0x7070
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	EMU_Write32(A2,A3);
	AT = 0x80050000;
	EMU_Write32(AT + 28788,V0); //+ 0x7074
	RA = 0x8004192C; //ZZ_417CC_160
	A0 = 0x3;
	ZZ_CLOCKCYCLES(38,0x80041FAC);
	goto ZZ_41FAC;
ZZ_417CC_160:
	V0 |= S0;
	AT = 0x80050000;
	EMU_Write32(AT + 28796,V0); //+ 0x707C
	RA = 0x80041940; //ZZ_417CC_174
	A0 = 0x4;
	ZZ_CLOCKCYCLES(5,0x80041FAC);
	goto ZZ_41FAC;
ZZ_417CC_174:
	V1 = 0xE4000000;
	V0 |= V1;
	AT = 0x80050000;
	EMU_Write32(AT + 28800,V0); //+ 0x7080
	RA = 0x80041958; //ZZ_417CC_18C
	A0 = 0x5;
	ZZ_CLOCKCYCLES(6,0x80041FAC);
	goto ZZ_41FAC;
ZZ_417CC_18C:
	V0 |= S1;
	AT = 0x80050000;
	EMU_Write32(AT + 28804,V0); //+ 0x7084
	ZZ_CLOCKCYCLES(5,0x800419B8);
	goto ZZ_417CC_1EC;
ZZ_417CC_1A0:
	V0 |= 0xFFFF;
	V1 = 0xFF0000;
	V1 |= 0xFFFF;
	AT = 0x80050000;
	EMU_Write32(AT + 28760,V0); //+ 0x7058
	V0 = 0xE6000000;
	V1 &= T1;
	AT = 0x80050000;
	EMU_Write32(AT + 28764,V0); //+ 0x705C
	V0 = 0x2000000;
	V1 |= V0;
	AT = 0x80050000;
	EMU_Write32(AT + 28768,V1); //+ 0x7060
	V0 = EMU_ReadU32(T0);
	AT = 0x80050000;
	EMU_Write32(AT + 28772,V0); //+ 0x7064
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	AT = 0x80050000;
	EMU_Write32(AT + 28776,V0); //+ 0x7068
	ZZ_CLOCKCYCLES(19,0x800419B8);
ZZ_417CC_1EC:
	A0 = 0x80050000;
	A0 += 28760;
	RA = 0x800419C8; //ZZ_417CC_1FC
	ZZ_CLOCKCYCLES(4,0x80041F60);
	goto ZZ_41F60;
ZZ_417CC_1FC:
	V0 = R0;
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800417CC,0x80041824,ZZ_417CC);
ZZ_MARK_TARGET(0x80041824,0x80041828,ZZ_417CC_58);
ZZ_MARK_TARGET(0x80041828,0x80041868,ZZ_417CC_5C);
ZZ_MARK_TARGET(0x80041868,0x8004186C,ZZ_417CC_9C);
ZZ_MARK_TARGET(0x8004186C,0x80041894,ZZ_417CC_A0);
ZZ_MARK_TARGET(0x80041894,0x8004192C,ZZ_417CC_C8);
ZZ_MARK_TARGET(0x8004192C,0x80041940,ZZ_417CC_160);
ZZ_MARK_TARGET(0x80041940,0x80041958,ZZ_417CC_174);
ZZ_MARK_TARGET(0x80041958,0x8004196C,ZZ_417CC_18C);
ZZ_MARK_TARGET(0x8004196C,0x800419B8,ZZ_417CC_1A0);
ZZ_MARK_TARGET(0x800419B8,0x800419C8,ZZ_417CC_1EC);
ZZ_MARK_TARGET(0x800419C8,0x800419E4,ZZ_417CC_1FC);
