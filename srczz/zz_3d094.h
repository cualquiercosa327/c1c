#ifdef ZZ_INCLUDE_CODE
ZZ_3D094:
	A0 = EMU_ReadU32(GP + 360); //+ 0x168
	SP -= 40;
	EMU_Write32(SP + 32,RA); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V1 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = V1 & 0xD;
	if (!V0)
	{
		V1 |= 0x2;
		ZZ_CLOCKCYCLES(10,0x8003D0D0);
		goto ZZ_3D094_3C;
	}
	V1 |= 0x2;
	EMU_Write32(A0 + 4,V1); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 6520,V1); //+ 0x1978
	V0 = 0x1;
	ZZ_CLOCKCYCLES(15,0x8003D19C);
	goto ZZ_3D094_108;
ZZ_3D094_3C:
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(4,0x8003D138);
		goto ZZ_3D094_A4;
	}
	S0 = R0;
	S1 = R0;
	ZZ_CLOCKCYCLES(5,0x8003D0E4);
ZZ_3D094_50:
	V1 = EMU_ReadU32(GP + 360); //+ 0x168
	V0 = V1 + S1;
	V0 = EMU_ReadU32(V0 + 48); //+ 0x30
	A0 = 0x80050000;
	A0 += 28732;
	A1 = V0 << 2;
	A1 += V0;
	A1 <<= 3;
	A1 += 1180;
	RA = 0x8003D114; //ZZ_3D094_80
	A1 += V1;
	ZZ_CLOCKCYCLES(12,0x8003D6B0);
	goto ZZ_3D6B0;
ZZ_3D094_80:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8003D138);
		goto ZZ_3D094_A4;
	}
	V0 = EMU_ReadU32(GP + 360); //+ 0x168
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 += 76;
		ZZ_CLOCKCYCLES(9,0x8003D0E4);
		goto ZZ_3D094_50;
	}
	S1 += 76;
	ZZ_CLOCKCYCLES(9,0x8003D138);
ZZ_3D094_A4:
	A1 = EMU_ReadU32(GP + 360); //+ 0x168
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	if (S0 != V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(6,0x8003D170);
		goto ZZ_3D094_DC;
	}
	V0 = R0;
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	V1 |= 0x2;
	EMU_Write32(A1 + 4,V1); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 6520,V1); //+ 0x1978
	V0 = 0x1;
	ZZ_CLOCKCYCLES(14,0x8003D19C);
	goto ZZ_3D094_108;
ZZ_3D094_DC:
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A0 = 0x6;
	EMU_Write32(A1 + 12,S0); //+ 0xC
	EMU_Write32(A1,A0);
	V1 |= 0x1;
	EMU_Write32(A1 + 4,V1); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 6520,V1); //+ 0x1978
	V1 = 0x20;
	EMU_Write32(A1 + 20,R0); //+ 0x14
	EMU_Write32(A1 + 16,V1); //+ 0x10
	ZZ_CLOCKCYCLES(11,0x8003D19C);
ZZ_3D094_108:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003D5DC,ZZ_3D4EC_F0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003D094,0x8003D0D0,ZZ_3D094);
ZZ_MARK_TARGET(0x8003D0D0,0x8003D0E4,ZZ_3D094_3C);
ZZ_MARK_TARGET(0x8003D0E4,0x8003D114,ZZ_3D094_50);
ZZ_MARK_TARGET(0x8003D114,0x8003D138,ZZ_3D094_80);
ZZ_MARK_TARGET(0x8003D138,0x8003D170,ZZ_3D094_A4);
ZZ_MARK_TARGET(0x8003D170,0x8003D19C,ZZ_3D094_DC);
ZZ_MARK_TARGET(0x8003D19C,0x8003D1B4,ZZ_3D094_108);
