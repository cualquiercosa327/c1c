#ifdef ZZ_INCLUDE_CODE
ZZ_13D48:
	SP -= 56;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	EMU_Write32(SP + 40,S2); //+ 0x28
	S2 = A1;
	EMU_Write32(SP + 48,RA); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	EMU_Write32(SP + 36,S1); //+ 0x24
	ZZ_CLOCKCYCLES(8,0x80013D68);
ZZ_13D48_20:
	V0 = EMU_ReadU16(S0 + 4); //+ 0x4
	V0 -= 2;
	V0 <<= 16;
	V1 = (int32_t)V0 >> 16;
	V0 = V1 < 30;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(8,0x800141D4);
		goto ZZ_13D48_48C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 368); //+ 0x170
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x80013E1C,ZZ_13D48_D4);
	ZZ_JUMPREGISTER(0x80013F60,ZZ_13D48_218);
	ZZ_JUMPREGISTER(0x80014008,ZZ_13D48_2C0);
	ZZ_JUMPREGISTER(0x800141D4,ZZ_13D48_48C);
	ZZ_JUMPREGISTER(0x80014054,ZZ_13D48_30C);
	ZZ_JUMPREGISTER(0x8001416C,ZZ_13D48_424);
	ZZ_JUMPREGISTER(0x80013DA0,ZZ_13D48_58);
	ZZ_JUMPREGISTER(0x800141CC,ZZ_13D48_484);
	ZZ_JUMPREGISTER_END();
ZZ_13D48_58:
	V0 = -1;
	if (S2 != V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(3,0x80013DCC);
		goto ZZ_13D48_84;
	}
	A0 = R0;
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	V1 = EMU_ReadU16(V0);
	V0 = 0x8765;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(9,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(11,0x80013DE8);
	goto ZZ_13D48_A0;
ZZ_13D48_84:
	RA = 0x80013DD4; //ZZ_13D48_8C
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80043984);
	goto ZZ_43984;
ZZ_13D48_8C:
	if ((int32_t)V0 >= 0)
	{
		V0 = V0 < 1;
		ZZ_CLOCKCYCLES(2,0x80013DE0);
		goto ZZ_13D48_98;
	}
	V0 = V0 < 1;
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x80013DE0);
ZZ_13D48_98:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(2,0x80013DE8);
ZZ_13D48_A0:
	RA = 0x80013DF0; //ZZ_13D48_A8
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80013B30);
	goto ZZ_13B30;
ZZ_13D48_A8:
	V0 = -1;
	if (S2 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x80014008);
		goto ZZ_13D48_2C0;
	}
	V0 = EMU_ReadU32(S0 + 36); //+ 0x24
	if (S0 == V0)
	{
		A0 = S0 + 44;
		ZZ_CLOCKCYCLES(7,0x80014008);
		goto ZZ_13D48_2C0;
	}
	A0 = S0 + 44;
	RA = 0x80013E14; //ZZ_13D48_CC
	A1 = S2;
	ZZ_CLOCKCYCLES(9,0x80013D48);
	goto ZZ_13D48;
ZZ_13D48_CC:
	ZZ_CLOCKCYCLES(2,0x80014008);
	goto ZZ_13D48_2C0;
ZZ_13D48_D4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12372); //+ 0xFFFFCFAC
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(5,0x800141D4);
		goto ZZ_13D48_48C;
	}
	V0 = -1;
	if (S2 == V0)
	{
		A0 = (int32_t)S2 >> 1;
		ZZ_CLOCKCYCLES(7,0x80013E70);
		goto ZZ_13D48_128;
	}
	A0 = (int32_t)S2 >> 1;
	V0 = EMU_ReadU32(S0 + 36); //+ 0x24
	V0 = EMU_ReadU32(V0 + 20); //+ 0x14
	V1 = (int32_t)V0 >> 1;
	V0 = (int32_t)V1 < (int32_t)A0;
	if (V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(15,0x80013E68);
		goto ZZ_13D48_120;
	}
	A1 = R0;
	V0 = EMU_ReadU32(S0 + 28); //+ 0x1C
	V0 = V1 - V0;
	A1 = (int32_t)V0 < (int32_t)A0;
	ZZ_CLOCKCYCLES(19,0x80013E68);
ZZ_13D48_120:
	if (!A1)
	{
		ZZ_CLOCKCYCLES(2,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(2,0x80013E70);
ZZ_13D48_128:
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = EMU_ReadU32(GP + 20); //+ 0x14
	AT = 0x80060000;
	EMU_Write32(AT - 12360,V0); //+ 0xFFFFCFB8
	if (!V1)
	{
		A0 = 0x1;
		ZZ_CLOCKCYCLES(6,0x80013FE8);
		goto ZZ_13D48_2A0;
	}
	A0 = 0x1;
	RA = 0x80013E90; //ZZ_13D48_148
	A1 = R0;
	ZZ_CLOCKCYCLES(8,0x80043498);
	goto ZZ_43498;
ZZ_13D48_148:
	V1 = 0x2;
	if (V0 == V1)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(3,0x80013EA4);
		goto ZZ_13D48_15C;
	}
	V0 = -1;
	if (S2 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(5,0x80013EA4);
ZZ_13D48_15C:
	RA = 0x80013EAC; //ZZ_13D48_164
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80013B30);
	goto ZZ_13B30;
ZZ_13D48_164:
	S1 = V0;
	AT = 0x80060000;
	EMU_Write32(AT - 12372,S0); //+ 0xFFFFCFAC
	V1 = EMU_ReadU32(S0 + 28); //+ 0x1C
	V0 = EMU_ReadS16(S1 + 14); //+ 0xE
	A0 = EMU_ReadU32(S1 + 20); //+ 0x14
	if (!V0)
	{
		S3 = V1 << 5;
		ZZ_CLOCKCYCLES(8,0x80013F0C);
		goto ZZ_13D48_1C4;
	}
	S3 = V1 << 5;
	V0 = EMU_ReadS16(S1 + 12); //+ 0xC
	V1 <<= 5;
	S3 = V1 - V0;
	V1 = EMU_ReadU32(S1);
	V0 <<= 11;
	S0 = V0 + V1;
	V0 = (int32_t)A0 >> 1;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15040); //+ 0xFFFFC540
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15032); //+ 0xFFFFC548
	V0 >>= 6;
	ZZ_CLOCKCYCLES(24,0x80013F30);
	goto ZZ_13D48_1E8;
ZZ_13D48_1C4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15040); //+ 0xFFFFC540
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 15032); //+ 0xFFFFC548
	V0 = EMU_ReadU32(V0 + 1048); //+ 0x418
	S0 = EMU_ReadU32(S1);
	V1 += V0;
	V0 = (int32_t)A0 >> 1;
	V0 <<= 5;
	ZZ_CLOCKCYCLES(9,0x80013F30);
ZZ_13D48_1E8:
	A0 = V1 + V0;
	RA = 0x80013F3C; //ZZ_13D48_1F4
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(3,0x80043A24);
	goto ZZ_43A24;
ZZ_13D48_1F4:
	A0 = 0x2;
	RA = 0x80013F48; //ZZ_13D48_200
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(3,0x80043668);
	goto ZZ_43668;
ZZ_13D48_200:
	A0 = S3;
	A1 = S0;
	RA = 0x80013F58; //ZZ_13D48_210
	A2 = 0x80;
	ZZ_CLOCKCYCLES(4,0x800439A4);
	goto ZZ_439A4;
ZZ_13D48_210:
	S0 = S1;
	ZZ_CLOCKCYCLES(2,0x80013D68);
	goto ZZ_13D48_20;
ZZ_13D48_218:
	V0 = EMU_ReadU32(GP + 20); //+ 0x14
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80013FE8);
		goto ZZ_13D48_2A0;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12372); //+ 0xFFFFCFAC
	if (V0 != S0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(9,0x80013FE8);
		goto ZZ_13D48_2A0;
	}
	V0 = -1;
	if (S2 != V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(11,0x80013FB4);
		goto ZZ_13D48_26C;
	}
	A0 = R0;
	A0 = 0x1;
	RA = 0x80013F98; //ZZ_13D48_250
	A1 = R0;
	ZZ_CLOCKCYCLES(14,0x80043984);
	goto ZZ_43984;
ZZ_13D48_250:
	if ((int32_t)V0 >= 0)
	{
		V0 = V0 < 1;
		ZZ_CLOCKCYCLES(2,0x80013FA4);
		goto ZZ_13D48_25C;
	}
	V0 = V0 < 1;
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x80013FA4);
ZZ_13D48_25C:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80013FD0);
		goto ZZ_13D48_288;
	}
	V0 = -1;
	if (S2 == V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x800141D4);
		goto ZZ_13D48_48C;
	}
	A0 = R0;
	ZZ_CLOCKCYCLES(4,0x80013FB4);
ZZ_13D48_26C:
	RA = 0x80013FBC; //ZZ_13D48_274
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80043984);
	goto ZZ_43984;
ZZ_13D48_274:
	if ((int32_t)V0 >= 0)
	{
		V0 = V0 < 1;
		ZZ_CLOCKCYCLES(2,0x80013FC8);
		goto ZZ_13D48_280;
	}
	V0 = V0 < 1;
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x80013FC8);
ZZ_13D48_280:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(2,0x80013FD0);
ZZ_13D48_288:
	RA = 0x80013FD8; //ZZ_13D48_290
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80013B30);
	goto ZZ_13B30;
ZZ_13D48_290:
	AT = 0x80060000;
	EMU_Write32(AT - 12372,R0); //+ 0xFFFFCFAC
	ZZ_CLOCKCYCLES(4,0x80014008);
	goto ZZ_13D48_2C0;
ZZ_13D48_2A0:
	RA = 0x80013FF0; //ZZ_13D48_2A8
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80014930);
	goto ZZ_14930;
ZZ_13D48_2A8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	AT = 0x80060000;
	EMU_Write32(AT - 12372,R0); //+ 0xFFFFCFAC
	V0 -= 1;
	ZZ_CLOCKCYCLES(6,0x800141BC);
	goto ZZ_13D48_474;
ZZ_13D48_2C0:
	V0 = EMU_ReadU32(S0);
	V0 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 -= 3;
	V0 = V0 < 2;
	if (V0)
	{
		V0 = 0xA;
		ZZ_CLOCKCYCLES(8,0x80014050);
		goto ZZ_13D48_308;
	}
	V0 = 0xA;
	A0 = EMU_ReadS16(S0 + 8); //+ 0x8
	RA = 0x80014034; //ZZ_13D48_2EC
	ZZ_CLOCKCYCLES(11,0x80012F10);
	goto ZZ_12F10;
ZZ_13D48_2EC:
	V1 = 0x80060000;
	V1 -= 12376;
	V0 = EMU_ReadU32(V1);
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(7,0x800141D4);
	goto ZZ_13D48_48C;
ZZ_13D48_308:
	EMU_Write16(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x80014054);
ZZ_13D48_30C:
	S1 = 0x80060000;
	S1 -= 12364;
	V0 = EMU_ReadU32(S1);
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(6,0x800141D4);
		goto ZZ_13D48_48C;
	}
	V0 = -1;
	if (S2 == V0)
	{
		A1 = -1;
		ZZ_CLOCKCYCLES(8,0x80014084);
		goto ZZ_13D48_33C;
	}
	A1 = -1;
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	if (S2 != V0)
	{
		ZZ_CLOCKCYCLES(12,0x800141D4);
		goto ZZ_13D48_48C;
	}
	ZZ_CLOCKCYCLES(12,0x80014084);
ZZ_13D48_33C:
	V0 = EMU_ReadU32(S0);
	A0 = EMU_ReadU16(V0 + 2); //+ 0x2
	S3 = 0x4;
	if (A0 != S3)
	{
		ZZ_CLOCKCYCLES(6,0x800140C0);
		goto ZZ_13D48_378;
	}
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12368); //+ 0xFFFFCFB0
	A1 = V1 + V0;
	ZZ_CLOCKCYCLES(15,0x800140C0);
ZZ_13D48_378:
	RA = 0x800140C8; //ZZ_13D48_380
	ZZ_CLOCKCYCLES(2,0x800145C8);
	goto ZZ_145C8;
ZZ_13D48_380:
	V1 = V0;
	V0 = -12;
	if (V1 != V0)
	{
		A1 = 0xB;
		ZZ_CLOCKCYCLES(4,0x800140F0);
		goto ZZ_13D48_3A8;
	}
	A1 = 0xB;
	RA = 0x800140E0; //ZZ_13D48_398
	A0 = S0;
	ZZ_CLOCKCYCLES(6,0x80014930);
	goto ZZ_14930;
ZZ_13D48_398:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	V0 -= 1;
	ZZ_CLOCKCYCLES(4,0x800141BC);
	goto ZZ_13D48_474;
ZZ_13D48_3A8:
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	V1 = 0x80050000;
	V1 += 32576;
	V0 += V1;
	EMU_Write16(S0 + 4,A1); //+ 0x4
	EMU_Write32(S0 + 36,V0); //+ 0x24
	EMU_Write32(S1,S0);
	EMU_Write16(V0 + 4,A1); //+ 0x4
	V1 = EMU_ReadU32(S0 + 20); //+ 0x14
	A0 = EMU_ReadU32(V0 + 28); //+ 0x1C
	RA = 0x80014130; //ZZ_13D48_3E8
	EMU_Write32(V0 + 20,V1); //+ 0x14
	ZZ_CLOCKCYCLES(16,0x80048A18);
	goto ZZ_48A18;
ZZ_13D48_3E8:
	A0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU16(A0 + 2); //+ 0x2
	V0 = 0x3;
	if (V1 == V0)
	{
		A1 = 0x10000;
		ZZ_CLOCKCYCLES(6,0x80014164);
		goto ZZ_13D48_41C;
	}
	A1 = 0x10000;
	if (V1 != S3)
	{
		ZZ_CLOCKCYCLES(8,0x8001416C);
		goto ZZ_13D48_424;
	}
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = EMU_ReadU32(V0 + 20); //+ 0x14
	A1 = EMU_ReadU32(V1 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(13,0x80014164);
ZZ_13D48_41C:
	RA = 0x8001416C; //ZZ_13D48_424
	ZZ_CLOCKCYCLES(2,0x800489B8);
	goto ZZ_489B8;
ZZ_13D48_424:
	S1 = 0x80060000;
	S1 -= 12364;
	V0 = EMU_ReadU32(S1);
	if (V0 != S0)
	{
		ZZ_CLOCKCYCLES(6,0x800141D4);
		goto ZZ_13D48_48C;
	}
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	A0 ^= S2;
	RA = 0x80014198; //ZZ_13D48_450
	A0 = A0 < 1;
	ZZ_CLOCKCYCLES(11,0x80048A88);
	goto ZZ_48A88;
ZZ_13D48_450:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800141D4);
		goto ZZ_13D48_48C;
	}
	A0 = EMU_ReadS16(S0 + 8); //+ 0x8
	RA = 0x800141AC; //ZZ_13D48_464
	ZZ_CLOCKCYCLES(5,0x80012F10);
	goto ZZ_12F10;
ZZ_13D48_464:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12376); //+ 0xFFFFCFA8
	EMU_Write32(S1,R0);
	V0 -= 1;
	ZZ_CLOCKCYCLES(4,0x800141BC);
ZZ_13D48_474:
	AT = 0x80060000;
	EMU_Write32(AT - 12376,V0); //+ 0xFFFFCFA8
	ZZ_CLOCKCYCLES(4,0x800141D4);
	goto ZZ_13D48_48C;
ZZ_13D48_484:
	V0 = 0x1;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(2,0x800141D4);
ZZ_13D48_48C:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80013708,ZZ_134C8_240);
	ZZ_JUMPREGISTER(0x8001356C,ZZ_134C8_A4);
	ZZ_JUMPREGISTER(0x80013E14,ZZ_13D48_CC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013D48,0x80013D68,ZZ_13D48);
ZZ_MARK_TARGET(0x80013D68,0x80013DA0,ZZ_13D48_20);
ZZ_MARK_TARGET(0x80013DA0,0x80013DCC,ZZ_13D48_58);
ZZ_MARK_TARGET(0x80013DCC,0x80013DD4,ZZ_13D48_84);
ZZ_MARK_TARGET(0x80013DD4,0x80013DE0,ZZ_13D48_8C);
ZZ_MARK_TARGET(0x80013DE0,0x80013DE8,ZZ_13D48_98);
ZZ_MARK_TARGET(0x80013DE8,0x80013DF0,ZZ_13D48_A0);
ZZ_MARK_TARGET(0x80013DF0,0x80013E14,ZZ_13D48_A8);
ZZ_MARK_TARGET(0x80013E14,0x80013E1C,ZZ_13D48_CC);
ZZ_MARK_TARGET(0x80013E1C,0x80013E68,ZZ_13D48_D4);
ZZ_MARK_TARGET(0x80013E68,0x80013E70,ZZ_13D48_120);
ZZ_MARK_TARGET(0x80013E70,0x80013E90,ZZ_13D48_128);
ZZ_MARK_TARGET(0x80013E90,0x80013EA4,ZZ_13D48_148);
ZZ_MARK_TARGET(0x80013EA4,0x80013EAC,ZZ_13D48_15C);
ZZ_MARK_TARGET(0x80013EAC,0x80013F0C,ZZ_13D48_164);
ZZ_MARK_TARGET(0x80013F0C,0x80013F30,ZZ_13D48_1C4);
ZZ_MARK_TARGET(0x80013F30,0x80013F3C,ZZ_13D48_1E8);
ZZ_MARK_TARGET(0x80013F3C,0x80013F48,ZZ_13D48_1F4);
ZZ_MARK_TARGET(0x80013F48,0x80013F58,ZZ_13D48_200);
ZZ_MARK_TARGET(0x80013F58,0x80013F60,ZZ_13D48_210);
ZZ_MARK_TARGET(0x80013F60,0x80013F98,ZZ_13D48_218);
ZZ_MARK_TARGET(0x80013F98,0x80013FA4,ZZ_13D48_250);
ZZ_MARK_TARGET(0x80013FA4,0x80013FB4,ZZ_13D48_25C);
ZZ_MARK_TARGET(0x80013FB4,0x80013FBC,ZZ_13D48_26C);
ZZ_MARK_TARGET(0x80013FBC,0x80013FC8,ZZ_13D48_274);
ZZ_MARK_TARGET(0x80013FC8,0x80013FD0,ZZ_13D48_280);
ZZ_MARK_TARGET(0x80013FD0,0x80013FD8,ZZ_13D48_288);
ZZ_MARK_TARGET(0x80013FD8,0x80013FE8,ZZ_13D48_290);
ZZ_MARK_TARGET(0x80013FE8,0x80013FF0,ZZ_13D48_2A0);
ZZ_MARK_TARGET(0x80013FF0,0x80014008,ZZ_13D48_2A8);
ZZ_MARK_TARGET(0x80014008,0x80014034,ZZ_13D48_2C0);
ZZ_MARK_TARGET(0x80014034,0x80014050,ZZ_13D48_2EC);
ZZ_MARK_TARGET(0x80014050,0x80014054,ZZ_13D48_308);
ZZ_MARK_TARGET(0x80014054,0x80014084,ZZ_13D48_30C);
ZZ_MARK_TARGET(0x80014084,0x800140C0,ZZ_13D48_33C);
ZZ_MARK_TARGET(0x800140C0,0x800140C8,ZZ_13D48_378);
ZZ_MARK_TARGET(0x800140C8,0x800140E0,ZZ_13D48_380);
ZZ_MARK_TARGET(0x800140E0,0x800140F0,ZZ_13D48_398);
ZZ_MARK_TARGET(0x800140F0,0x80014130,ZZ_13D48_3A8);
ZZ_MARK_TARGET(0x80014130,0x80014164,ZZ_13D48_3E8);
ZZ_MARK_TARGET(0x80014164,0x8001416C,ZZ_13D48_41C);
ZZ_MARK_TARGET(0x8001416C,0x80014198,ZZ_13D48_424);
ZZ_MARK_TARGET(0x80014198,0x800141AC,ZZ_13D48_450);
ZZ_MARK_TARGET(0x800141AC,0x800141BC,ZZ_13D48_464);
ZZ_MARK_TARGET(0x800141BC,0x800141CC,ZZ_13D48_474);
ZZ_MARK_TARGET(0x800141CC,0x800141D4,ZZ_13D48_484);
ZZ_MARK_TARGET(0x800141D4,0x800141F4,ZZ_13D48_48C);
