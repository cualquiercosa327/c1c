#ifdef ZZ_INCLUDE_CODE
ZZ_3EB50:
	SP -= 40;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A1;
	A1 = 0x80050000;
	A1 += 14648;
	V0 = S1 << 2;
	A0 = V0 + A1;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 16,S0); //+ 0x10
	S4 = EMU_ReadU32(A0);
	if (S2 == S4)
	{
		V0 = S4;
		ZZ_CLOCKCYCLES(17,0x8003EC80);
		goto ZZ_3EB50_130;
	}
	V0 = S4;
	V0 = EMU_ReadU16(A1 - 4); //+ 0xFFFFFFFC
	if (!V0)
	{
		V0 = S4;
		ZZ_CLOCKCYCLES(21,0x8003EC80);
		goto ZZ_3EB50_130;
	}
	V0 = S4;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 18884); //+ 0x49C4
	V1 = EMU_ReadU16(V0);
	EMU_Write16(V0,R0);
	if (!S2)
	{
		S3 = V1 & 0xFFFF;
		ZZ_CLOCKCYCLES(28,0x8003EBE0);
		goto ZZ_3EB50_90;
	}
	S3 = V1 & 0xFFFF;
	V1 = 0x1;
	V1 <<= S1;
	EMU_Write32(A0,S2);
	V0 = EMU_ReadU16(A1 + 44); //+ 0x2C
	S3 |= V1;
	V0 |= V1;
	EMU_Write16(A1 + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(36,0x8003EC08);
	goto ZZ_3EB50_B8;
ZZ_3EB50_90:
	V0 = 0x1;
	V0 <<= S1;
	V0 = ~V0;
	EMU_Write32(A0,R0);
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 14692); //+ 0x3964
	S3 &= V0;
	V1 &= V0;
	AT = 0x80050000;
	EMU_Write16(AT + 14692,V1); //+ 0x3964
	ZZ_CLOCKCYCLES(10,0x8003EC08);
ZZ_3EB50_B8:
	if (S1)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(2,0x8003EC2C);
		goto ZZ_3EB50_DC;
	}
	V0 = 0x4;
	S0 = S2 < 1;
	RA = 0x8003EC1C; //ZZ_3EB50_CC
	A0 = S0;
	ZZ_CLOCKCYCLES(5,0x8003E4E0);
	goto ZZ_3E4E0;
ZZ_3EB50_CC:
	A0 = 0x3;
	RA = 0x8003EC28; //ZZ_3EB50_D8
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x8003E6E4);
	goto ZZ_3E6E4;
ZZ_3EB50_D8:
	V0 = 0x4;
	ZZ_CLOCKCYCLES(1,0x8003EC2C);
ZZ_3EB50_DC:
	if (S1 != V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(2,0x8003EC44);
		goto ZZ_3EB50_F4;
	}
	V0 = 0x5;
	A0 = R0;
	RA = 0x8003EC40; //ZZ_3EB50_F0
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(5,0x8003E6E4);
	goto ZZ_3E6E4;
ZZ_3EB50_F0:
	V0 = 0x5;
	ZZ_CLOCKCYCLES(1,0x8003EC44);
ZZ_3EB50_F4:
	if (S1 != V0)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(2,0x8003EC5C);
		goto ZZ_3EB50_10C;
	}
	V0 = 0x6;
	A0 = 0x1;
	RA = 0x8003EC58; //ZZ_3EB50_108
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(5,0x8003E6E4);
	goto ZZ_3E6E4;
ZZ_3EB50_108:
	V0 = 0x6;
	ZZ_CLOCKCYCLES(1,0x8003EC5C);
ZZ_3EB50_10C:
	if (S1 != V0)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(2,0x8003EC6C);
		goto ZZ_3EB50_11C;
	}
	A0 = 0x2;
	RA = 0x8003EC6C; //ZZ_3EB50_11C
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(4,0x8003E6E4);
	goto ZZ_3E6E4;
ZZ_3EB50_11C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 18884); //+ 0x49C4
	EMU_Write16(V0,S3);
	V0 = S4;
	ZZ_CLOCKCYCLES(5,0x8003EC80);
ZZ_3EB50_130:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003EB50,0x8003EBE0,ZZ_3EB50);
ZZ_MARK_TARGET(0x8003EBE0,0x8003EC08,ZZ_3EB50_90);
ZZ_MARK_TARGET(0x8003EC08,0x8003EC1C,ZZ_3EB50_B8);
ZZ_MARK_TARGET(0x8003EC1C,0x8003EC28,ZZ_3EB50_CC);
ZZ_MARK_TARGET(0x8003EC28,0x8003EC2C,ZZ_3EB50_D8);
ZZ_MARK_TARGET(0x8003EC2C,0x8003EC40,ZZ_3EB50_DC);
ZZ_MARK_TARGET(0x8003EC40,0x8003EC44,ZZ_3EB50_F0);
ZZ_MARK_TARGET(0x8003EC44,0x8003EC58,ZZ_3EB50_F4);
ZZ_MARK_TARGET(0x8003EC58,0x8003EC5C,ZZ_3EB50_108);
ZZ_MARK_TARGET(0x8003EC5C,0x8003EC6C,ZZ_3EB50_10C);
ZZ_MARK_TARGET(0x8003EC6C,0x8003EC80,ZZ_3EB50_11C);
ZZ_MARK_TARGET(0x8003EC80,0x8003ECA4,ZZ_3EB50_130);
