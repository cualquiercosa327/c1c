#ifdef ZZ_INCLUDE_CODE
ZZ_31A40:
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	A3 = A2;
	EMU_Write32(SP + 24,RA); //+ 0x18
	if (!S1)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(7,0x80031B48);
		goto ZZ_31A40_108;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = A1 < 5;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80031B48);
		goto ZZ_31A40_108;
	}
	V0 = A1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3480); //+ 0xD98
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(17);
	ZZ_JUMPREGISTER(0x80031A84,ZZ_31A40_44);
	ZZ_JUMPREGISTER(0x80031AAC,ZZ_31A40_6C);
	ZZ_JUMPREGISTER(0x80031AC8,ZZ_31A40_88);
	ZZ_JUMPREGISTER(0x80031AE0,ZZ_31A40_A0);
	ZZ_JUMPREGISTER(0x80031AFC,ZZ_31A40_BC);
	ZZ_JUMPREGISTER_END();
ZZ_31A40_44:
	A2 = 0x1;
	A3 <<= 16;
	A3 = (int32_t)A3 >> 16;
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = EMU_ReadS16(S1);
	V0 = 0x1;
	RA = 0x80031AA4; //ZZ_31A40_64
	EMU_Write32(S1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(8,0x8004B5A8);
	goto ZZ_4B5A8;
ZZ_31A40_64:
	ZZ_CLOCKCYCLES(2,0x80031B48);
	goto ZZ_31A40_108;
ZZ_31A40_6C:
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = EMU_ReadS16(S1);
	V0 = 0x2;
	RA = 0x80031AC0; //ZZ_31A40_80
	EMU_Write32(S1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(5,0x8004C964);
	goto ZZ_4C964;
ZZ_31A40_80:
	ZZ_CLOCKCYCLES(2,0x80031B48);
	goto ZZ_31A40_108;
ZZ_31A40_88:
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = EMU_ReadS16(S1);
	RA = 0x80031AD8; //ZZ_31A40_98
	EMU_Write32(S1 + 4,R0); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x8004B544);
	goto ZZ_4B544;
ZZ_31A40_98:
	ZZ_CLOCKCYCLES(2,0x80031B48);
	goto ZZ_31A40_108;
ZZ_31A40_A0:
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = EMU_ReadS16(S1);
	V0 = 0x1;
	RA = 0x80031AF4; //ZZ_31A40_B4
	EMU_Write32(S1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(5,0x8004B6AC);
	goto ZZ_4B6AC;
ZZ_31A40_B4:
	ZZ_CLOCKCYCLES(2,0x80031B48);
	goto ZZ_31A40_108;
ZZ_31A40_BC:
	V0 = EMU_ReadS16(GP + 608); //+ 0x260
	V1 = (int32_t)A3 >> 16;
	EMU_Write16(S1 + 16,V1); //+ 0x10
	V1 = (int32_t)V0 < 2;
	S0 = V1 ^ 0x1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		EMU_Write16(S1 + 18,A3); //+ 0x12
		ZZ_CLOCKCYCLES(8,0x80031B48);
		goto ZZ_31A40_108;
	}
	EMU_Write16(S1 + 18,A3); //+ 0x12
	ZZ_CLOCKCYCLES(8,0x80031B1C);
ZZ_31A40_DC:
	A0 = EMU_ReadS16(GP + 600); //+ 0x258
	A1 = EMU_ReadS16(S1);
	A2 = EMU_ReadS16(S1 + 16); //+ 0x10
	A3 = EMU_ReadS16(S1 + 18); //+ 0x12
	RA = 0x80031B34; //ZZ_31A40_F4
	S0 += 1;
	ZZ_CLOCKCYCLES(6,0x8004CD58);
	goto ZZ_4CD58;
ZZ_31A40_F4:
	V0 = EMU_ReadS16(GP + 608); //+ 0x260
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80031B1C);
		goto ZZ_31A40_DC;
	}
	ZZ_CLOCKCYCLES(5,0x80031B48);
ZZ_31A40_108:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003141C,ZZ_313C4_58);
	ZZ_JUMPREGISTER(0x8003142C,ZZ_313C4_68);
	ZZ_JUMPREGISTER(0x80031488,ZZ_313C4_C4);
	ZZ_JUMPREGISTER(0x80031498,ZZ_313C4_D4);
	ZZ_JUMPREGISTER(0x80030E30,ZZ_30CC0_170);
	ZZ_JUMPREGISTER(0x80030E88,ZZ_30CC0_1C8);
	ZZ_JUMPREGISTER(0x800317B0,ZZ_314C4_2EC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80031A40,0x80031A84,ZZ_31A40);
ZZ_MARK_TARGET(0x80031A84,0x80031AA4,ZZ_31A40_44);
ZZ_MARK_TARGET(0x80031AA4,0x80031AAC,ZZ_31A40_64);
ZZ_MARK_TARGET(0x80031AAC,0x80031AC0,ZZ_31A40_6C);
ZZ_MARK_TARGET(0x80031AC0,0x80031AC8,ZZ_31A40_80);
ZZ_MARK_TARGET(0x80031AC8,0x80031AD8,ZZ_31A40_88);
ZZ_MARK_TARGET(0x80031AD8,0x80031AE0,ZZ_31A40_98);
ZZ_MARK_TARGET(0x80031AE0,0x80031AF4,ZZ_31A40_A0);
ZZ_MARK_TARGET(0x80031AF4,0x80031AFC,ZZ_31A40_B4);
ZZ_MARK_TARGET(0x80031AFC,0x80031B1C,ZZ_31A40_BC);
ZZ_MARK_TARGET(0x80031B1C,0x80031B34,ZZ_31A40_DC);
ZZ_MARK_TARGET(0x80031B34,0x80031B48,ZZ_31A40_F4);
ZZ_MARK_TARGET(0x80031B48,0x80031B60,ZZ_31A40_108);
