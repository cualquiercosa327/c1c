#ifdef ZZ_INCLUDE_CODE
ZZ_3F514:
	SP -= 40;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A1;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A2;
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 32,RA); //+ 0x20
	RA = 0x8003F540; //ZZ_3F514_2C
	S1 = A3;
	ZZ_CLOCKCYCLES(11,0x80040144);
	goto ZZ_40144;
ZZ_3F514_2C:
	V1 = 0x1;
	if (V0 == V1)
	{
		V1 = S0 & 0x3;
		ZZ_CLOCKCYCLES(3,0x8003F560);
		goto ZZ_3F514_4C;
	}
	V1 = S0 & 0x3;
	RA = 0x8003F554; //ZZ_3F514_40
	ZZ_CLOCKCYCLES(5,0x80040144);
	goto ZZ_40144;
ZZ_3F514_40:
	V1 = 0x2;
	if (V0 != V1)
	{
		V1 = S0 & 0x3;
		ZZ_CLOCKCYCLES(3,0x8003F588);
		goto ZZ_3F514_74;
	}
	V1 = S0 & 0x3;
	ZZ_CLOCKCYCLES(3,0x8003F560);
ZZ_3F514_4C:
	V1 <<= 9;
	V0 = S2 & 0x3;
	V0 <<= 7;
	V1 |= V0;
	V0 = S1 & 0x300;
	V0 = (int32_t)V0 >> 3;
	V1 |= V0;
	V0 = S3 & 0x3FF;
	V0 = (int32_t)V0 >> 6;
	ZZ_CLOCKCYCLES(10,0x8003F5B8);
	goto ZZ_3F514_A4;
ZZ_3F514_74:
	V1 <<= 7;
	V0 = S2 & 0x3;
	V0 <<= 5;
	V1 |= V0;
	V0 = S1 & 0x100;
	V0 = (int32_t)V0 >> 4;
	V1 |= V0;
	V0 = S3 & 0x3FF;
	V0 = (int32_t)V0 >> 6;
	V1 |= V0;
	V0 = S1 & 0x200;
	V0 <<= 2;
	ZZ_CLOCKCYCLES(12,0x8003F5B8);
ZZ_3F514_A4:
	V0 |= V1;
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x80032BF8,ZZ_32BB4_44);
	ZZ_JUMPREGISTER(0x80032C10,ZZ_32BB4_5C);
	ZZ_JUMPREGISTER(0x80032C28,ZZ_32BB4_74);
	ZZ_JUMPREGISTER(0x80032C40,ZZ_32BB4_8C);
	ZZ_JUMPREGISTER(0x80017584,ZZ_17448_13C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003F514,0x8003F540,ZZ_3F514);
ZZ_MARK_TARGET(0x8003F540,0x8003F554,ZZ_3F514_2C);
ZZ_MARK_TARGET(0x8003F554,0x8003F560,ZZ_3F514_40);
ZZ_MARK_TARGET(0x8003F560,0x8003F588,ZZ_3F514_4C);
ZZ_MARK_TARGET(0x8003F588,0x8003F5B8,ZZ_3F514_74);
ZZ_MARK_TARGET(0x8003F5B8,0x8003F5DC,ZZ_3F514_A4);
