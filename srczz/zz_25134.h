#ifdef ZZ_INCLUDE_CODE
ZZ_25134:
	SP -= 56;
	V0 = EMU_ReadU32(SP + 72); //+ 0x48
	EMU_Write32(SP + 48,S2); //+ 0x30
	S2 = SP + 16;
	EMU_Write32(SP + 44,S1); //+ 0x2C
	S1 = R0;
	EMU_Write32(SP + 40,S0); //+ 0x28
	S0 = 0x80060000;
	S0 += 3512;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 16,A0); //+ 0x10
	EMU_Write32(SP + 20,A1); //+ 0x14
	EMU_Write32(SP + 24,A3); //+ 0x18
	EMU_Write32(SP + 28,A2); //+ 0x1C
	EMU_Write32(SP + 32,R0); //+ 0x20
	EMU_Write32(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(16,0x80025174);
ZZ_25134_40:
	A0 = S0;
	A1 = 0x80020000;
	A1 += 19656;
	RA = 0x80025188; //ZZ_25134_54
	A2 = S2;
	ZZ_CLOCKCYCLES(5,0x8001B92C);
	goto ZZ_1B92C;
ZZ_25134_54:
	S1 += 1;
	V0 = (int32_t)S1 < 8;
	if (V0)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(4,0x80025174);
		goto ZZ_25134_40;
	}
	S0 += 8;
	V0 = -255;
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);	
  //ZZ_JUMPREGISTER(0x80023D64,ZZ_201DC_3B88);
	ZZ_JUMPREGISTER(0x800266C4,ZZ_26650_74);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80025134,0x80025174,ZZ_25134);
ZZ_MARK_TARGET(0x80025174,0x80025188,ZZ_25134_40);
ZZ_MARK_TARGET(0x80025188,0x800251B8,ZZ_25134_54);
