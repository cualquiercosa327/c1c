#ifdef ZZ_INCLUDE_CODE
ZZ_3D1F0:
	V0 = EMU_ReadU32(GP + 360); //+ 0x168
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	if (!V0)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(5,0x8003D210);
		goto ZZ_3D1F0_20;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 &= 0x10;
	ZZ_CLOCKCYCLES(8,0x8003D214);
	goto ZZ_3D1F0_24;
ZZ_3D1F0_20:
	V0 = EMU_ReadU32(GP + 364); //+ 0x16C
	ZZ_CLOCKCYCLES(1,0x8003D214);
ZZ_3D1F0_24:
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(3,0x8003D2F4);
		goto ZZ_3D1F0_104;
	}
	V0 = 0x1;
	A0 = 0x80050000;
	A0 += 28732;
	A1 = 0x80050000;
	A1 += 26000;
	RA = 0x8003D238; //ZZ_3D1F0_48
	ZZ_CLOCKCYCLES(9,0x8003D6B0);
	goto ZZ_3D6B0;
ZZ_3D1F0_48:
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8003D2F4);
		goto ZZ_3D1F0_104;
	}
	V0 = 0x1;
	A0 = EMU_ReadU32(GP + 712); //+ 0x2C8
	RA = 0x8003D24C; //ZZ_3D1F0_5C
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_5C:
	A0 = EMU_ReadU32(GP + 716); //+ 0x2CC
	RA = 0x8003D258; //ZZ_3D1F0_68
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_68:
	A0 = EMU_ReadU32(GP + 720); //+ 0x2D0
	RA = 0x8003D264; //ZZ_3D1F0_74
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_74:
	A0 = EMU_ReadU32(GP + 724); //+ 0x2D4
	RA = 0x8003D270; //ZZ_3D1F0_80
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_80:
	RA = 0x8003D278; //ZZ_3D1F0_88
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80051424);
	goto ZZ_51424;
ZZ_3D1F0_88:
	RA = 0x8003D280; //ZZ_3D1F0_90
	A0 = 0x3E7;
	ZZ_CLOCKCYCLES(2,0x8002F778);
	goto ZZ_2F778;
ZZ_3D1F0_90:
	A0 = EMU_ReadU32(GP + 712); //+ 0x2C8
	RA = 0x8003D28C; //ZZ_3D1F0_9C
	S0 = 0x1;
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_9C:
	if (V0 == S0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(2,0x8003D2DC);
		goto ZZ_3D1F0_EC;
	}
	V1 = R0;
	A0 = EMU_ReadU32(GP + 716); //+ 0x2CC
	RA = 0x8003D2A0; //ZZ_3D1F0_B0
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_B0:
	if (V0 == S0)
	{
		V1 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8003D2DC);
		goto ZZ_3D1F0_EC;
	}
	V1 = 0x1;
	A0 = EMU_ReadU32(GP + 720); //+ 0x2D0
	RA = 0x8003D2B4; //ZZ_3D1F0_C4
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_C4:
	if (V0 == S0)
	{
		V1 = 0x2;
		ZZ_CLOCKCYCLES(2,0x8003D2DC);
		goto ZZ_3D1F0_EC;
	}
	V1 = 0x2;
	A0 = EMU_ReadU32(GP + 724); //+ 0x2D4
	RA = 0x8003D2C8; //ZZ_3D1F0_D8
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3D1F0_D8:
	if (V0 != S0)
	{
		V1 = -1;
		ZZ_CLOCKCYCLES(2,0x8003D2DC);
		goto ZZ_3D1F0_EC;
	}
	V1 = -1;
	RA = 0x8003D2D8; //ZZ_3D1F0_E8
	A0 = 0x10;
	ZZ_CLOCKCYCLES(4,0x8003CAB0);
	goto ZZ_3CAB0;
ZZ_3D1F0_E8:
	V1 = 0x3;
	ZZ_CLOCKCYCLES(1,0x8003D2DC);
ZZ_3D1F0_EC:
	V0 = -1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8003D278);
		goto ZZ_3D1F0_88;
	}
	if (V1)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(5,0x8003D2F4);
		goto ZZ_3D1F0_104;
	}
	V0 = 0x1;
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x8003D2F4);
ZZ_3D1F0_104:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8003D5EC,ZZ_3D4EC_100);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003D1F0,0x8003D210,ZZ_3D1F0);
ZZ_MARK_TARGET(0x8003D210,0x8003D214,ZZ_3D1F0_20);
ZZ_MARK_TARGET(0x8003D214,0x8003D238,ZZ_3D1F0_24);
ZZ_MARK_TARGET(0x8003D238,0x8003D24C,ZZ_3D1F0_48);
ZZ_MARK_TARGET(0x8003D24C,0x8003D258,ZZ_3D1F0_5C);
ZZ_MARK_TARGET(0x8003D258,0x8003D264,ZZ_3D1F0_68);
ZZ_MARK_TARGET(0x8003D264,0x8003D270,ZZ_3D1F0_74);
ZZ_MARK_TARGET(0x8003D270,0x8003D278,ZZ_3D1F0_80);
ZZ_MARK_TARGET(0x8003D278,0x8003D280,ZZ_3D1F0_88);
ZZ_MARK_TARGET(0x8003D280,0x8003D28C,ZZ_3D1F0_90);
ZZ_MARK_TARGET(0x8003D28C,0x8003D2A0,ZZ_3D1F0_9C);
ZZ_MARK_TARGET(0x8003D2A0,0x8003D2B4,ZZ_3D1F0_B0);
ZZ_MARK_TARGET(0x8003D2B4,0x8003D2C8,ZZ_3D1F0_C4);
ZZ_MARK_TARGET(0x8003D2C8,0x8003D2D8,ZZ_3D1F0_D8);
ZZ_MARK_TARGET(0x8003D2D8,0x8003D2DC,ZZ_3D1F0_E8);
ZZ_MARK_TARGET(0x8003D2DC,0x8003D2F4,ZZ_3D1F0_EC);
ZZ_MARK_TARGET(0x8003D2F4,0x8003D308,ZZ_3D1F0_104);
