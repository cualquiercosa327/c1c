#ifdef ZZ_INCLUDE_CODE
ZZ_2940C:
	SP -= 24;
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 26292); //+ 0x66B4
	A1 = A0;
	if (A1 == V1)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(6,0x80029434);
		goto ZZ_2940C_28;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(10,0x80029448);
		goto ZZ_2940C_3C;
	}
	ZZ_CLOCKCYCLES(10,0x80029434);
ZZ_2940C_28:
	V0 = EMU_ReadU32(A1 + 40); //+ 0x28
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = V0 + 840;
	ZZ_CLOCKCYCLES(5,0x8002945C);
	goto ZZ_2940C_50;
ZZ_2940C_3C:
	V0 = EMU_ReadU32(A1 + 40); //+ 0x28
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = V0 + 792;
	ZZ_CLOCKCYCLES(5,0x8002945C);
ZZ_2940C_50:
	V0 = EMU_ReadU32(A1 + 272); //+ 0x110
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800294A0);
		goto ZZ_2940C_94;
	}
	V0 = EMU_ReadU16(V0 + 4); //+ 0x4
	V1 = V0 >> 3;
	V0 = 0xFFFF;
	if (V1 == V0)
	{
		V0 = V1 & 0x3F0;
		ZZ_CLOCKCYCLES(10,0x800294A0);
		goto ZZ_2940C_94;
	}
	V0 = V1 & 0x3F0;
	A2 = V0 >> 4;
	V0 = (int32_t)A2 < 39;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x80029498);
		goto ZZ_2940C_8C;
	}
	A2 = -1;
	ZZ_CLOCKCYCLES(15,0x80029498);
ZZ_2940C_8C:
	RA = 0x800294A0; //ZZ_2940C_94
	A3 = R0;
	ZZ_CLOCKCYCLES(2,0x80027F50);
	goto ZZ_27F50;
ZZ_2940C_94:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	//ZZ_JUMPREGISTER(0x80023BAC,ZZ_201DC_39D0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002940C,0x80029434,ZZ_2940C);
ZZ_MARK_TARGET(0x80029434,0x80029448,ZZ_2940C_28);
ZZ_MARK_TARGET(0x80029448,0x8002945C,ZZ_2940C_3C);
ZZ_MARK_TARGET(0x8002945C,0x80029498,ZZ_2940C_50);
ZZ_MARK_TARGET(0x80029498,0x800294A0,ZZ_2940C_8C);
ZZ_MARK_TARGET(0x800294A0,0x800294B0,ZZ_2940C_94);
