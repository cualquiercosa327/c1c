#ifdef ZZ_INCLUDE_CODE
ZZ_16A6C:
	SP -= 168;
	EMU_Write32(SP + 160,RA); //+ 0xA0
	EMU_Write32(SP + 156,S5); //+ 0x9C
	EMU_Write32(SP + 152,S4); //+ 0x98
	EMU_Write32(SP + 148,S3); //+ 0x94
	EMU_Write32(SP + 144,S2); //+ 0x90
	EMU_Write32(SP + 140,S1); //+ 0x8C
	EMU_Write32(SP + 136,S0); //+ 0x88
	AT = 0x80050000;
	EMU_Write32(AT + 31072,R0); //+ 0x7960
	RA = 0x80016A9C; //ZZ_16A6C_30
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x8003FDC0);
	goto ZZ_3FDC0;
ZZ_16A6C_30:
	RA = 0x80016AA4; //ZZ_16A6C_38
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8004002C);
	goto ZZ_4002C;
ZZ_16A6C_38:
	A0 = SP + 24;
	A1 = R0;
	A2 = R0;
	A3 = 0x400;
	V0 = 0x200;
	RA = 0x80016AC0; //ZZ_16A6C_54
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x8003F408);
	goto ZZ_3F408;
ZZ_16A6C_54:
	A0 = SP + 24;
	V0 = 0x1;
	RA = 0x80016AD0; //ZZ_16A6C_64
	EMU_Write8(SP + 47,V0); //+ 0x2F
	ZZ_CLOCKCYCLES(4,0x80040834);
	goto ZZ_40834;
ZZ_16A6C_64:
	RA = 0x80016AD8; //ZZ_16A6C_6C
	A0 = SP + 120;
	ZZ_CLOCKCYCLES(2,0x8003F7D8);
	goto ZZ_3F7D8;
ZZ_16A6C_6C:
	RA = 0x80016AE0; //ZZ_16A6C_74
	A0 = SP + 120;
	ZZ_CLOCKCYCLES(2,0x8003FA14);
	goto ZZ_3FA14;
ZZ_16A6C_74:
	A0 = SP + 120;
	V0 = 0x3FF;
	EMU_Write16(SP + 132,V0); //+ 0x84
	V0 = 0x1FF;
	EMU_Write16(SP + 134,V0); //+ 0x86
	EMU_Write8(SP + 124,R0); //+ 0x7C
	EMU_Write8(SP + 125,R0); //+ 0x7D
	EMU_Write8(SP + 126,R0); //+ 0x7E
	EMU_Write16(SP + 128,R0); //+ 0x80
	RA = 0x80016B0C; //ZZ_16A6C_A0
	EMU_Write16(SP + 130,R0); //+ 0x82
	ZZ_CLOCKCYCLES(11,0x80040760);
	goto ZZ_40760;
ZZ_16A6C_A0:
	S2 = R0;
	S5 = 0x1;
	S4 = 0x100;
	V1 = 0x80060000;
	V1 -= 31744;
	S3 = V1 + 16;
	S1 = S3;
	V0 = 0x2;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(9,0x80016B30);
ZZ_16A6C_C4:
	A0 = S1 + 4;
	S0 = S2 << 9;
	A1 = S0;
	A2 = R0;
	A3 = 0x200;
	V0 = 0xF0;
	EMU_Write32(S1,S2);
	EMU_Write32(S1 + 124,R0); //+ 0x7C
	RA = 0x80016B58; //ZZ_16A6C_EC
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(10,0x8003F4D8);
	goto ZZ_3F4D8;
ZZ_16A6C_EC:
	A0 = S1 + 24;
	A1 = S0;
	A2 = 0xC;
	A3 = 0x200;
	V0 = 0xD8;
	RA = 0x80016B74; //ZZ_16A6C_108
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x8003F408);
	goto ZZ_3F408;
ZZ_16A6C_108:
	V0 = 0x78;
	EMU_Write16(S1 + 32,S4); //+ 0x20
	EMU_Write16(S1 + 34,V0); //+ 0x22
	if (S2)
	{
		EMU_Write8(S1 + 46,S5); //+ 0x2E
		ZZ_CLOCKCYCLES(5,0x80016B90);
		goto ZZ_16A6C_124;
	}
	EMU_Write8(S1 + 46,S5); //+ 0x2E
	EMU_Write32(S3 - 4,S1); //+ 0xFFFFFFFC
	EMU_Write32(S3 - 12,S1); //+ 0xFFFFFFF4
	ZZ_CLOCKCYCLES(7,0x80016B90);
ZZ_16A6C_124:
	if (S2 != S5)
	{
		S4 += 512;
		ZZ_CLOCKCYCLES(2,0x80016B9C);
		goto ZZ_16A6C_130;
	}
	S4 += 512;
	EMU_Write32(S3 - 8,S1); //+ 0xFFFFFFF8
	ZZ_CLOCKCYCLES(3,0x80016B9C);
ZZ_16A6C_130:
	S2 += 1;
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	V1 = 0x22;
	EMU_Write32(S1 + 132,V1); //+ 0x84
	EMU_Write32(S1 + 124,V0); //+ 0x7C
	V0 = EMU_ReadU32(S3 - 16); //+ 0xFFFFFFF0
	V0 = (int32_t)S2 < (int32_t)V0;
	if (V0)
	{
		S1 += 8328;
		ZZ_CLOCKCYCLES(11,0x80016B30);
		goto ZZ_16A6C_C4;
	}
	S1 += 8328;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31740); //+ 0xFFFF8404
	RA = 0x80016BD8; //ZZ_16A6C_16C
	A0 += 4;
	ZZ_CLOCKCYCLES(15,0x80040A0C);
	goto ZZ_40A0C;
ZZ_16A6C_16C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 31736); //+ 0xFFFF8408
	RA = 0x80016BE8; //ZZ_16A6C_17C
	A0 += 24;
	ZZ_CLOCKCYCLES(4,0x80040834);
	goto ZZ_40834;
ZZ_16A6C_17C:
	RA = 0x80016BF0; //ZZ_16A6C_184
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x800401C0);
	goto ZZ_401C0;
ZZ_16A6C_184:
	RA = EMU_ReadU32(SP + 160); //+ 0xA0
	S5 = EMU_ReadU32(SP + 156); //+ 0x9C
	S4 = EMU_ReadU32(SP + 152); //+ 0x98
	S3 = EMU_ReadU32(SP + 148); //+ 0x94
	S2 = EMU_ReadU32(SP + 144); //+ 0x90
	S1 = EMU_ReadU32(SP + 140); //+ 0x8C
	S0 = EMU_ReadU32(SP + 136); //+ 0x88
	SP += 168;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80016604,ZZ_1652C_D8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80016A6C,0x80016A9C,ZZ_16A6C);
ZZ_MARK_TARGET(0x80016A9C,0x80016AA4,ZZ_16A6C_30);
ZZ_MARK_TARGET(0x80016AA4,0x80016AC0,ZZ_16A6C_38);
ZZ_MARK_TARGET(0x80016AC0,0x80016AD0,ZZ_16A6C_54);
ZZ_MARK_TARGET(0x80016AD0,0x80016AD8,ZZ_16A6C_64);
ZZ_MARK_TARGET(0x80016AD8,0x80016AE0,ZZ_16A6C_6C);
ZZ_MARK_TARGET(0x80016AE0,0x80016B0C,ZZ_16A6C_74);
ZZ_MARK_TARGET(0x80016B0C,0x80016B30,ZZ_16A6C_A0);
ZZ_MARK_TARGET(0x80016B30,0x80016B58,ZZ_16A6C_C4);
ZZ_MARK_TARGET(0x80016B58,0x80016B74,ZZ_16A6C_EC);
ZZ_MARK_TARGET(0x80016B74,0x80016B90,ZZ_16A6C_108);
ZZ_MARK_TARGET(0x80016B90,0x80016B9C,ZZ_16A6C_124);
ZZ_MARK_TARGET(0x80016B9C,0x80016BD8,ZZ_16A6C_130);
ZZ_MARK_TARGET(0x80016BD8,0x80016BE8,ZZ_16A6C_16C);
ZZ_MARK_TARGET(0x80016BE8,0x80016BF0,ZZ_16A6C_17C);
ZZ_MARK_TARGET(0x80016BF0,0x80016C18,ZZ_16A6C_184);
