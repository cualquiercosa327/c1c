#ifdef ZZ_INCLUDE_CODE
ZZ_141F4:
	SP -= 64;
	EMU_Write32(SP + 52,S5); //+ 0x34
	S5 = A0;
	EMU_Write32(SP + 40,S2); //+ 0x28
	S2 = -1;
	V1 = 0x80060000;
	V1 -= 15024;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	EMU_Write32(SP + 36,S1); //+ 0x24
	EMU_Write32(SP + 32,S0); //+ 0x20
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(16,0x8001430C);
		goto ZZ_141F4_118;
	}
	A2 = R0;
	T3 = V1 + 4;
	T2 = V0;
	A3 = R0;
	ZZ_CLOCKCYCLES(19,0x80014240);
ZZ_141F4_4C:
	S1 = R0;
	T0 = T2 - A2;
	ZZ_CLOCKCYCLES(2,0x80014248);
ZZ_141F4_54:
	V1 = EMU_ReadU32(S5);
	V0 = (int32_t)T0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)S1 < (int32_t)V1;
		ZZ_CLOCKCYCLES(5,0x80014264);
		goto ZZ_141F4_70;
	}
	V0 = (int32_t)S1 < (int32_t)V1;
	V1 = T0;
	V0 = (int32_t)S1 < (int32_t)V1;
	ZZ_CLOCKCYCLES(7,0x80014264);
ZZ_141F4_70:
	if (!V0)
	{
		V1 = A2 + S1;
		ZZ_CLOCKCYCLES(2,0x800142FC);
		goto ZZ_141F4_108;
	}
	V1 = A2 + S1;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	A1 = V0 + T3;
	V1 = EMU_ReadS16(A1 + 4); //+ 0x4
	V0 = 0x1;
	if (V1 == V0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(12,0x800142C0);
		goto ZZ_141F4_CC;
	}
	A0 = V1;
	V0 = A0 - 20;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x800142FC);
		goto ZZ_141F4_108;
	}
	V0 = EMU_ReadS16(A1 + 10); //+ 0xA
	if ((int32_t)V0 > 0)
	{
		V0 = A3 + 1;
		ZZ_CLOCKCYCLES(20,0x800142FC);
		goto ZZ_141F4_108;
	}
	V0 = A3 + 1;
	V1 = EMU_ReadU32(A1 + 40); //+ 0x28
	A3 = V0 + V1;
	ZZ_CLOCKCYCLES(23,0x800142C0);
ZZ_141F4_CC:
	V0 = -1;
	if (S2 == V0)
	{
		V1 = S1 + 1;
		ZZ_CLOCKCYCLES(3,0x800142E8);
		goto ZZ_141F4_F4;
	}
	V1 = S1 + 1;
	V0 = (int32_t)S3 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800142E8);
		goto ZZ_141F4_F4;
	}
	if (S3 != V1)
	{
		V0 = A3 < T1;
		ZZ_CLOCKCYCLES(8,0x800142F4);
		goto ZZ_141F4_100;
	}
	V0 = A3 < T1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x800142F4);
		goto ZZ_141F4_100;
	}
	ZZ_CLOCKCYCLES(10,0x800142E8);
ZZ_141F4_F4:
	S2 = A2;
	S3 = S1 + 1;
	T1 = A3;
	ZZ_CLOCKCYCLES(3,0x800142F4);
ZZ_141F4_100:
	S1 += 1;
	ZZ_CLOCKCYCLES(2,0x80014248);
	goto ZZ_141F4_54;
ZZ_141F4_108:
	A2 += 1;
	V0 = (int32_t)A2 < (int32_t)T2;
	if (V0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(4,0x80014240);
		goto ZZ_141F4_4C;
	}
	A3 = R0;
	ZZ_CLOCKCYCLES(4,0x8001430C);
ZZ_141F4_118:
	V0 = -1;
	if (S2 == V0)
	{
		V1 = S2 + S3;
		ZZ_CLOCKCYCLES(3,0x8001436C);
		goto ZZ_141F4_178;
	}
	V1 = S2 + S3;
	V0 = (int32_t)S2 < (int32_t)V1;
	if (!V0)
	{
		S1 = S2;
		ZZ_CLOCKCYCLES(6,0x80014360);
		goto ZZ_141F4_16C;
	}
	S1 = S2;
	S4 = V1;
	V1 = 0x80060000;
	V1 -= 15020;
	V0 = S2 << 1;
	V0 += S2;
	V0 <<= 2;
	V0 = V0 - S2;
	V0 <<= 2;
	S0 = V0 + V1;
	ZZ_CLOCKCYCLES(15,0x80014348);
ZZ_141F4_154:
	RA = 0x80014350; //ZZ_141F4_15C
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x8001331C);
	goto ZZ_1331C;
ZZ_141F4_15C:
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)S4;
	if (V0)
	{
		S0 += 44;
		ZZ_CLOCKCYCLES(4,0x80014348);
		goto ZZ_141F4_154;
	}
	S0 += 44;
	ZZ_CLOCKCYCLES(4,0x80014360);
ZZ_141F4_16C:
	EMU_Write32(S5,S3);
	V0 = S2;
	ZZ_CLOCKCYCLES(3,0x80014374);
	goto ZZ_141F4_180;
ZZ_141F4_178:
	EMU_Write32(S5,R0);
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80014374);
ZZ_141F4_180:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80014724,ZZ_146F0_34);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800141F4,0x80014240,ZZ_141F4);
ZZ_MARK_TARGET(0x80014240,0x80014248,ZZ_141F4_4C);
ZZ_MARK_TARGET(0x80014248,0x80014264,ZZ_141F4_54);
ZZ_MARK_TARGET(0x80014264,0x800142C0,ZZ_141F4_70);
ZZ_MARK_TARGET(0x800142C0,0x800142E8,ZZ_141F4_CC);
ZZ_MARK_TARGET(0x800142E8,0x800142F4,ZZ_141F4_F4);
ZZ_MARK_TARGET(0x800142F4,0x800142FC,ZZ_141F4_100);
ZZ_MARK_TARGET(0x800142FC,0x8001430C,ZZ_141F4_108);
ZZ_MARK_TARGET(0x8001430C,0x80014348,ZZ_141F4_118);
ZZ_MARK_TARGET(0x80014348,0x80014350,ZZ_141F4_154);
ZZ_MARK_TARGET(0x80014350,0x80014360,ZZ_141F4_15C);
ZZ_MARK_TARGET(0x80014360,0x8001436C,ZZ_141F4_16C);
ZZ_MARK_TARGET(0x8001436C,0x80014374,ZZ_141F4_178);
ZZ_MARK_TARGET(0x80014374,0x8001439C,ZZ_141F4_180);
