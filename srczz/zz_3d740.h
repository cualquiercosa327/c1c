#ifdef ZZ_INCLUDE_CODE
ZZ_3D740:
	EMU_Write32(SP + 4,A1); //+ 0x4
	EMU_Write32(SP + 8,A2); //+ 0x8
	EMU_Write32(SP + 12,A3); //+ 0xC
	SP -= 584;
	EMU_Write32(SP + 564,S3); //+ 0x234
	S3 = A0;
	V0 = SP + 592;
	EMU_Write32(SP + 580,RA); //+ 0x244
	EMU_Write32(SP + 576,S6); //+ 0x240
	EMU_Write32(SP + 572,S5); //+ 0x23C
	EMU_Write32(SP + 568,S4); //+ 0x238
	EMU_Write32(SP + 560,S2); //+ 0x230
	EMU_Write32(SP + 556,S1); //+ 0x22C
	EMU_Write32(SP + 552,S0); //+ 0x228
	EMU_Write32(SP + 588,A1); //+ 0x24C
	EMU_Write32(SP + 544,V0); //+ 0x220
	A1 = EMU_ReadU8(A1);
	if (!A1)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(20,0x8003DF64);
		goto ZZ_3D740_824;
	}
	S2 = R0;
	S6 = 0x2D;
	S5 = 0x2B;
	S4 = 0x20;
	V0 = 0x25;
	ZZ_CLOCKCYCLES(24,0x8003D7A0);
ZZ_3D740_60:
	if (A1 != V0)
	{
		V0 = S3 + S2;
		ZZ_CLOCKCYCLES(2,0x8003DEA4);
		goto ZZ_3D740_764;
	}
	V0 = S3 + S2;
	A1 = 0x80050000;
	A1 += 14556;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(SP + 528,V0); //+ 0x210
	EMU_Write32(SP + 532,V1); //+ 0x214
	EMU_Write32(SP + 536,A0); //+ 0x218
	A2 = 0x23;
	V1 = 0x30;
	ZZ_CLOCKCYCLES(12,0x8003D7D0);
ZZ_3D740_90:
	A0 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = A0 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 1); //+ 0x1
	if (A1 != S6)
	{
		ZZ_CLOCKCYCLES(8,0x8003D804);
		goto ZZ_3D740_C4;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x1;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(13,0x8003D7D0);
	goto ZZ_3D740_90;
ZZ_3D740_C4:
	if (A1 != S5)
	{
		ZZ_CLOCKCYCLES(2,0x8003D820);
		goto ZZ_3D740_E0;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x2;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8003D7D0);
	goto ZZ_3D740_90;
ZZ_3D740_E0:
	if (A1 != S4)
	{
		ZZ_CLOCKCYCLES(2,0x8003D830);
		goto ZZ_3D740_F0;
	}
	EMU_Write8(SP + 529,A1); //+ 0x211
	ZZ_CLOCKCYCLES(4,0x8003D7D0);
	goto ZZ_3D740_90;
ZZ_3D740_F0:
	if (A1 != A2)
	{
		ZZ_CLOCKCYCLES(2,0x8003D84C);
		goto ZZ_3D740_10C;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x4;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8003D7D0);
	goto ZZ_3D740_90;
ZZ_3D740_10C:
	if (A1 != V1)
	{
		V0 = 0x2A;
		ZZ_CLOCKCYCLES(2,0x8003D868);
		goto ZZ_3D740_128;
	}
	V0 = 0x2A;
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x8;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8003D7D0);
	goto ZZ_3D740_90;
ZZ_3D740_128:
	if (A1 != V0)
	{
		V0 = A1 - 48;
		ZZ_CLOCKCYCLES(2,0x8003D8F4);
		goto ZZ_3D740_1B4;
	}
	V0 = A1 - 48;
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(SP + 532,V0); //+ 0x214
		ZZ_CLOCKCYCLES(10,0x8003D8A4);
		goto ZZ_3D740_164;
	}
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = -V0;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 |= 0x1;
	EMU_Write32(SP + 528,V1); //+ 0x210
	ZZ_CLOCKCYCLES(15,0x8003D8A4);
ZZ_3D740_164:
	V0 = A0 + 2;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 2); //+ 0x2
	V0 = 0x2E;
	ZZ_CLOCKCYCLES(5,0x8003D900);
	goto ZZ_3D740_1C0;
ZZ_3D740_178:
	V1 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 -= 48;
	V0 += A1;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V0 = A1 - 48;
	ZZ_CLOCKCYCLES(15,0x8003D8F4);
ZZ_3D740_1B4:
	V0 = V0 < 10;
	if (V0)
	{
		V0 = 0x2E;
		ZZ_CLOCKCYCLES(3,0x8003D8B8);
		goto ZZ_3D740_178;
	}
	V0 = 0x2E;
	ZZ_CLOCKCYCLES(3,0x8003D900);
ZZ_3D740_1C0:
	if (A1 != V0)
	{
		ZZ_CLOCKCYCLES(2,0x8003D9C0);
		goto ZZ_3D740_280;
	}
	A0 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = A0 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 1); //+ 0x1
	V0 = 0x2A;
	if (A1 != V0)
	{
		V0 = A1 - 48;
		ZZ_CLOCKCYCLES(10,0x8003D994);
		goto ZZ_3D740_254;
	}
	V0 = A1 - 48;
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	V0 = EMU_ReadU32(V1);
	EMU_Write32(SP + 536,V0); //+ 0x218
	V0 = A0 + 2;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 2); //+ 0x2
	ZZ_CLOCKCYCLES(22,0x8003D9A0);
	goto ZZ_3D740_260;
ZZ_3D740_218:
	V1 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 -= 48;
	V0 += A1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V0 = A1 - 48;
	ZZ_CLOCKCYCLES(15,0x8003D994);
ZZ_3D740_254:
	V0 = V0 < 10;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8003D958);
		goto ZZ_3D740_218;
	}
	ZZ_CLOCKCYCLES(3,0x8003D9A0);
ZZ_3D740_260:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 < 0)
	{
		ZZ_CLOCKCYCLES(4,0x8003D9C0);
		goto ZZ_3D740_280;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x10;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(8,0x8003D9C0);
ZZ_3D740_280:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x1;
	if (!V0)
	{
		S1 = SP + 528;
		ZZ_CLOCKCYCLES(5,0x8003D9E0);
		goto ZZ_3D740_2A0;
	}
	S1 = SP + 528;
	V0 = -9;
	V0 &= V1;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(8,0x8003D9E0);
ZZ_3D740_2A0:
	V1 = A1 - 76;
	ZZ_CLOCKCYCLES(1,0x8003D9E4);
ZZ_3D740_2A4:
	V0 = V1 < 45;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(3,0x8003DE98);
		goto ZZ_3D740_758;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3900); //+ 0xF3C
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x8003DA20,ZZ_3D740_2E0);
	ZZ_JUMPREGISTER(0x8003DE98,ZZ_3D740_758);
	ZZ_JUMPREGISTER(0x8003DCB8,ZZ_3D740_578);
	ZZ_JUMPREGISTER(0x8003DDC0,ZZ_3D740_680);
	ZZ_JUMPREGISTER(0x8003DA4C,ZZ_3D740_30C);
	ZZ_JUMPREGISTER(0x8003DA08,ZZ_3D740_2C8);
	ZZ_JUMPREGISTER(0x8003DA14,ZZ_3D740_2D4);
	ZZ_JUMPREGISTER(0x8003DE64,ZZ_3D740_724);
	ZZ_JUMPREGISTER(0x8003DBB4,ZZ_3D740_474);
	ZZ_JUMPREGISTER(0x8003DCA4,ZZ_3D740_564);
	ZZ_JUMPREGISTER(0x8003DDE0,ZZ_3D740_6A0);
	ZZ_JUMPREGISTER(0x8003DA9C,ZZ_3D740_35C);
	ZZ_JUMPREGISTER(0x8003DCC8,ZZ_3D740_588);
	ZZ_JUMPREGISTER_END();
ZZ_3D740_2C8:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x20;
	ZZ_CLOCKCYCLES(3,0x8003DA2C);
	goto ZZ_3D740_2EC;
ZZ_3D740_2D4:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x40;
	ZZ_CLOCKCYCLES(3,0x8003DA2C);
	goto ZZ_3D740_2EC;
ZZ_3D740_2E0:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x80;
	ZZ_CLOCKCYCLES(3,0x8003DA2C);
ZZ_3D740_2EC:
	EMU_Write32(SP + 528,V0); //+ 0x210
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V1 = A1 - 76;
	ZZ_CLOCKCYCLES(8,0x8003D9E4);
	goto ZZ_3D740_2A4;
ZZ_3D740_30C:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = A0 << 16;
		ZZ_CLOCKCYCLES(10,0x8003DA78);
		goto ZZ_3D740_338;
	}
	V0 = A0 << 16;
	A0 = (int32_t)V0 >> 16;
	ZZ_CLOCKCYCLES(11,0x8003DA78);
ZZ_3D740_338:
	if ((int32_t)A0 >= 0)
	{
		V0 = V1 & 0x2;
		ZZ_CLOCKCYCLES(2,0x8003DA8C);
		goto ZZ_3D740_34C;
	}
	V0 = V1 & 0x2;
	A0 = -A0;
	EMU_Write8(SP + 529,S6); //+ 0x211
	ZZ_CLOCKCYCLES(5,0x8003DAC8);
	goto ZZ_3D740_388;
ZZ_3D740_34C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8003DAC8);
		goto ZZ_3D740_388;
	}
	EMU_Write8(SP + 529,S5); //+ 0x211
	ZZ_CLOCKCYCLES(4,0x8003DAC8);
	goto ZZ_3D740_388;
ZZ_3D740_35C:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x20;
	if (!V0)
	{
		EMU_Write8(SP + 529,R0); //+ 0x211
		ZZ_CLOCKCYCLES(10,0x8003DAC8);
		goto ZZ_3D740_388;
	}
	EMU_Write8(SP + 529,R0); //+ 0x211
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x8003DAC8);
ZZ_3D740_388:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x10;
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(5,0x8003DB14);
		goto ZZ_3D740_3D4;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8003DB00);
		goto ZZ_3D740_3C0;
	}
	V1 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = EMU_ReadU8(SP + 529); //+ 0x211
	if (!V0)
	{
		EMU_Write32(SP + 536,V1); //+ 0x218
		ZZ_CLOCKCYCLES(12,0x8003DB00);
		goto ZZ_3D740_3C0;
	}
	EMU_Write32(SP + 536,V1); //+ 0x218
	V0 = V1 - 1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(14,0x8003DB00);
ZZ_3D740_3C0:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8003DB14);
		goto ZZ_3D740_3D4;
	}
	V0 = 0x1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x8003DB14);
ZZ_3D740_3D4:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x8003DB58);
		goto ZZ_3D740_418;
	}
	S0 = R0;
	A1 = 0xCCCC0000;
	A1 |= 0xCCCD;
	ZZ_CLOCKCYCLES(4,0x8003DB24);
ZZ_3D740_3E4:
	EMU_UMultiply(A0,A1);
	S1 -= 1;
	S0 += 1;
	V1 = HI;
	V1 >>= 3;
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 = A0 - V0;
	V0 += 48;
	A0 = V1;
	if (A0)
	{
		EMU_Write8(S1,V0);
		ZZ_CLOCKCYCLES(13,0x8003DB24);
		goto ZZ_3D740_3E4;
	}
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(13,0x8003DB58);
ZZ_3D740_418:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8003DB90);
		goto ZZ_3D740_450;
	}
	V1 = 0x30;
	S1 -= 1;
	ZZ_CLOCKCYCLES(7,0x8003DB74);
ZZ_3D740_434:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x8003DB74);
		goto ZZ_3D740_434;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(7,0x8003DB90);
ZZ_3D740_450:
	V0 = EMU_ReadU8(SP + 529); //+ 0x211
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	S1 -= 1;
	V0 = EMU_ReadU8(SP + 529); //+ 0x211
	S0 += 1;
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(9,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_474:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(10,0x8003DBE0);
		goto ZZ_3D740_4A0;
	}
	V0 = V1 & 0x10;
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x8003DBE0);
ZZ_3D740_4A0:
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(2,0x8003DC10);
		goto ZZ_3D740_4D0;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8003DBFC);
		goto ZZ_3D740_4BC;
	}
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(7,0x8003DBFC);
ZZ_3D740_4BC:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8003DC10);
		goto ZZ_3D740_4D0;
	}
	V0 = 0x1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x8003DC10);
ZZ_3D740_4D0:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x8003DC34);
		goto ZZ_3D740_4F4;
	}
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003DC18);
ZZ_3D740_4D8:
	S1 -= 1;
	V0 = A0 & 0x7;
	V0 += 48;
	EMU_Write8(S1,V0);
	A0 >>= 3;
	if (A0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(7,0x8003DC18);
		goto ZZ_3D740_4D8;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(7,0x8003DC34);
ZZ_3D740_4F4:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8003DC6C);
		goto ZZ_3D740_52C;
	}
	if (!S0)
	{
		V0 = 0x30;
		ZZ_CLOCKCYCLES(7,0x8003DC6C);
		goto ZZ_3D740_52C;
	}
	V0 = 0x30;
	V1 = EMU_ReadU8(S1);
	if (V1 == V0)
	{
		V0 = 0x30;
		ZZ_CLOCKCYCLES(11,0x8003DC6C);
		goto ZZ_3D740_52C;
	}
	V0 = 0x30;
	S1 -= 1;
	EMU_Write8(S1,V0);
	S0 += 1;
	ZZ_CLOCKCYCLES(14,0x8003DC6C);
ZZ_3D740_52C:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		V1 = 0x30;
		ZZ_CLOCKCYCLES(5,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	V1 = 0x30;
	S1 -= 1;
	ZZ_CLOCKCYCLES(6,0x8003DC84);
ZZ_3D740_544:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x8003DC84);
		goto ZZ_3D740_544;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(8,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_564:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = 0x8;
	EMU_Write32(SP + 536,V0); //+ 0x218
	V1 |= 0x50;
	EMU_Write32(SP + 528,V1); //+ 0x210
	ZZ_CLOCKCYCLES(5,0x8003DCB8);
ZZ_3D740_578:
	A3 = 0x80010000;
	A3 += 3860;
	ZZ_CLOCKCYCLES(4,0x8003DCD0);
	goto ZZ_3D740_590;
ZZ_3D740_588:
	A3 = 0x80010000;
	A3 += 3880;
	ZZ_CLOCKCYCLES(2,0x8003DCD0);
ZZ_3D740_590:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(10,0x8003DCFC);
		goto ZZ_3D740_5BC;
	}
	V0 = V1 & 0x10;
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x8003DCFC);
ZZ_3D740_5BC:
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(2,0x8003DD34);
		goto ZZ_3D740_5F4;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		V0 = V1 & 0x4;
		ZZ_CLOCKCYCLES(4,0x8003DD20);
		goto ZZ_3D740_5E0;
	}
	V0 = V1 & 0x4;
	A2 = EMU_ReadU32(SP + 532); //+ 0x214
	if (!V0)
	{
		EMU_Write32(SP + 536,A2); //+ 0x218
		ZZ_CLOCKCYCLES(7,0x8003DD20);
		goto ZZ_3D740_5E0;
	}
	EMU_Write32(SP + 536,A2); //+ 0x218
	V0 = A2 - 2;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(9,0x8003DD20);
ZZ_3D740_5E0:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8003DD34);
		goto ZZ_3D740_5F4;
	}
	V0 = 0x1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x8003DD34);
ZZ_3D740_5F4:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x8003DD5C);
		goto ZZ_3D740_61C;
	}
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003DD3C);
ZZ_3D740_5FC:
	S1 -= 1;
	V0 = A0 & 0xF;
	A0 >>= 4;
	V0 += A3;
	V0 = EMU_ReadU8(V0);
	S0 += 1;
	if (A0)
	{
		EMU_Write8(S1,V0);
		ZZ_CLOCKCYCLES(8,0x8003DD3C);
		goto ZZ_3D740_5FC;
	}
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(8,0x8003DD5C);
ZZ_3D740_61C:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8003DD94);
		goto ZZ_3D740_654;
	}
	V1 = 0x30;
	S1 -= 1;
	ZZ_CLOCKCYCLES(7,0x8003DD78);
ZZ_3D740_638:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x8003DD78);
		goto ZZ_3D740_638;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(7,0x8003DD94);
ZZ_3D740_654:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x4;
	if (!V0)
	{
		V0 = 0x30;
		ZZ_CLOCKCYCLES(5,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	V0 = 0x30;
	S1 -= 1;
	EMU_Write8(S1,A1);
	S1 -= 1;
	S0 += 2;
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(11,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_680:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	S1 -= 1;
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V0 = EMU_ReadU8(V0);
	S0 = 0x1;
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(8,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_6A0:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	S1 = EMU_ReadU32(V0);
	V0 = V1 & 0x4;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(9,0x8003DE2C);
		goto ZZ_3D740_6EC;
	}
	V0 = V1 & 0x10;
	S0 = EMU_ReadU8(S1);
	if (!V0)
	{
		S1 += 1;
		ZZ_CLOCKCYCLES(12,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	S1 += 1;
	V1 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)V1 < (int32_t)S0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(17,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	S0 = V1;
	ZZ_CLOCKCYCLES(19,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_6EC:
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x8003DE44);
		goto ZZ_3D740_704;
	}
	A0 = S1;
	RA = 0x8003DE3C; //ZZ_3D740_6FC
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8003D6E0);
	goto ZZ_3D6E0;
ZZ_3D740_6FC:
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_704:
	A2 = EMU_ReadU32(SP + 536); //+ 0x218
	RA = 0x8003DE50; //ZZ_3D740_710
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x8003DF9C);
	goto ZZ_3DF9C;
ZZ_3D740_710:
	if (V0)
	{
		S0 = V0 - S1;
		ZZ_CLOCKCYCLES(2,0x8003DEB0);
		goto ZZ_3D740_770;
	}
	S0 = V0 - S1;
	S0 = EMU_ReadU32(SP + 536); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x8003DEB0);
	goto ZZ_3D740_770;
ZZ_3D740_724:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	S1 = EMU_ReadU32(V0);
	V0 = V1 & 0x20;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8003DE90);
		goto ZZ_3D740_750;
	}
	EMU_Write16(S1,S2);
	ZZ_CLOCKCYCLES(11,0x8003DF44);
	goto ZZ_3D740_804;
ZZ_3D740_750:
	EMU_Write32(S1,S2);
	ZZ_CLOCKCYCLES(2,0x8003DF44);
	goto ZZ_3D740_804;
ZZ_3D740_758:
	V0 = 0x25;
	if (A1 != V0)
	{
		V0 = S3 + S2;
		ZZ_CLOCKCYCLES(3,0x8003DF64);
		goto ZZ_3D740_824;
	}
	V0 = S3 + S2;
	ZZ_CLOCKCYCLES(3,0x8003DEA4);
ZZ_3D740_764:
	EMU_Write8(V0,A1);
	S2 += 1;
	ZZ_CLOCKCYCLES(3,0x8003DF44);
	goto ZZ_3D740_804;
ZZ_3D740_770:
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		A0 = S3 + S2;
		ZZ_CLOCKCYCLES(5,0x8003DF04);
		goto ZZ_3D740_7C4;
	}
	A0 = S3 + S2;
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x1;
	if (V0)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(10,0x8003DF08);
		goto ZZ_3D740_7C8;
	}
	A1 = S1;
	V1 = S2 + S3;
	ZZ_CLOCKCYCLES(11,0x8003DEDC);
ZZ_3D740_79C:
	EMU_Write8(V1,S4);
	V1 += 1;
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 -= 1;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S2 += 1;
		ZZ_CLOCKCYCLES(9,0x8003DEDC);
		goto ZZ_3D740_79C;
	}
	S2 += 1;
	A0 = S3 + S2;
	ZZ_CLOCKCYCLES(10,0x8003DF04);
ZZ_3D740_7C4:
	A1 = S1;
	ZZ_CLOCKCYCLES(1,0x8003DF08);
ZZ_3D740_7C8:
	RA = 0x8003DF10; //ZZ_3D740_7D0
	A2 = S0;
	ZZ_CLOCKCYCLES(2,0x8003DFAC);
	goto ZZ_3DFAC;
ZZ_3D740_7D0:
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		S2 += S0;
		ZZ_CLOCKCYCLES(5,0x8003DF44);
		goto ZZ_3D740_804;
	}
	S2 += S0;
	V1 = S2 + S3;
	ZZ_CLOCKCYCLES(6,0x8003DF28);
ZZ_3D740_7E8:
	EMU_Write8(V1,S4);
	V1 += 1;
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S2 += 1;
		ZZ_CLOCKCYCLES(7,0x8003DF28);
		goto ZZ_3D740_7E8;
	}
	S2 += 1;
	ZZ_CLOCKCYCLES(7,0x8003DF44);
ZZ_3D740_804:
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	if (A1)
	{
		V0 = 0x25;
		ZZ_CLOCKCYCLES(8,0x8003D7A0);
		goto ZZ_3D740_60;
	}
	V0 = 0x25;
	ZZ_CLOCKCYCLES(8,0x8003DF64);
ZZ_3D740_824:
	V0 = S3 + S2;
	EMU_Write8(V0,R0);
	V0 = S2;
	RA = EMU_ReadU32(SP + 580); //+ 0x244
	S6 = EMU_ReadU32(SP + 576); //+ 0x240
	S5 = EMU_ReadU32(SP + 572); //+ 0x23C
	S4 = EMU_ReadU32(SP + 568); //+ 0x238
	S3 = EMU_ReadU32(SP + 564); //+ 0x234
	S2 = EMU_ReadU32(SP + 560); //+ 0x230
	S1 = EMU_ReadU32(SP + 556); //+ 0x22C
	S0 = EMU_ReadU32(SP + 552); //+ 0x228
	SP += 584;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8003CE74,ZZ_3CE20_54);
	ZZ_JUMPREGISTER(0x80032138,ZZ_31EB4_284);
	ZZ_JUMPREGISTER(0x80012930,ZZ_128A4_8C);
	ZZ_JUMPREGISTER(0x80012964,ZZ_128A4_C0);
	ZZ_JUMPREGISTER(0x80012750,ZZ_126C0_90);
	ZZ_JUMPREGISTER(0x8001E924,ZZ_1E7D8_14C);
	ZZ_JUMPREGISTER(0x8003C100,ZZ_3C038_C8);
	ZZ_JUMPREGISTER(0x8003AFC4,ZZ_3AF24_A0);
	ZZ_JUMPREGISTER(0x8003B99C,ZZ_3B8B8_E4);
	ZZ_JUMPREGISTER(0x8003BA6C,ZZ_3B8B8_1B4);
	ZZ_JUMPREGISTER(0x8003BB18,ZZ_3B8B8_260);
	ZZ_JUMPREGISTER(0x8003BC70,ZZ_3B8B8_3B8);
	ZZ_JUMPREGISTER(0x8003B2AC,ZZ_3AF24_388);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003D740,0x8003D7A0,ZZ_3D740);
ZZ_MARK_TARGET(0x8003D7A0,0x8003D7D0,ZZ_3D740_60);
ZZ_MARK_TARGET(0x8003D7D0,0x8003D804,ZZ_3D740_90);
ZZ_MARK_TARGET(0x8003D804,0x8003D820,ZZ_3D740_C4);
ZZ_MARK_TARGET(0x8003D820,0x8003D830,ZZ_3D740_E0);
ZZ_MARK_TARGET(0x8003D830,0x8003D84C,ZZ_3D740_F0);
ZZ_MARK_TARGET(0x8003D84C,0x8003D868,ZZ_3D740_10C);
ZZ_MARK_TARGET(0x8003D868,0x8003D8A4,ZZ_3D740_128);
ZZ_MARK_TARGET(0x8003D8A4,0x8003D8B8,ZZ_3D740_164);
ZZ_MARK_TARGET(0x8003D8B8,0x8003D8F4,ZZ_3D740_178);
ZZ_MARK_TARGET(0x8003D8F4,0x8003D900,ZZ_3D740_1B4);
ZZ_MARK_TARGET(0x8003D900,0x8003D958,ZZ_3D740_1C0);
ZZ_MARK_TARGET(0x8003D958,0x8003D994,ZZ_3D740_218);
ZZ_MARK_TARGET(0x8003D994,0x8003D9A0,ZZ_3D740_254);
ZZ_MARK_TARGET(0x8003D9A0,0x8003D9C0,ZZ_3D740_260);
ZZ_MARK_TARGET(0x8003D9C0,0x8003D9E0,ZZ_3D740_280);
ZZ_MARK_TARGET(0x8003D9E0,0x8003D9E4,ZZ_3D740_2A0);
ZZ_MARK_TARGET(0x8003D9E4,0x8003DA08,ZZ_3D740_2A4);
ZZ_MARK_TARGET(0x8003DA08,0x8003DA14,ZZ_3D740_2C8);
ZZ_MARK_TARGET(0x8003DA14,0x8003DA20,ZZ_3D740_2D4);
ZZ_MARK_TARGET(0x8003DA20,0x8003DA2C,ZZ_3D740_2E0);
ZZ_MARK_TARGET(0x8003DA2C,0x8003DA4C,ZZ_3D740_2EC);
ZZ_MARK_TARGET(0x8003DA4C,0x8003DA78,ZZ_3D740_30C);
ZZ_MARK_TARGET(0x8003DA78,0x8003DA8C,ZZ_3D740_338);
ZZ_MARK_TARGET(0x8003DA8C,0x8003DA9C,ZZ_3D740_34C);
ZZ_MARK_TARGET(0x8003DA9C,0x8003DAC8,ZZ_3D740_35C);
ZZ_MARK_TARGET(0x8003DAC8,0x8003DB00,ZZ_3D740_388);
ZZ_MARK_TARGET(0x8003DB00,0x8003DB14,ZZ_3D740_3C0);
ZZ_MARK_TARGET(0x8003DB14,0x8003DB24,ZZ_3D740_3D4);
ZZ_MARK_TARGET(0x8003DB24,0x8003DB58,ZZ_3D740_3E4);
ZZ_MARK_TARGET(0x8003DB58,0x8003DB74,ZZ_3D740_418);
ZZ_MARK_TARGET(0x8003DB74,0x8003DB90,ZZ_3D740_434);
ZZ_MARK_TARGET(0x8003DB90,0x8003DBB4,ZZ_3D740_450);
ZZ_MARK_TARGET(0x8003DBB4,0x8003DBE0,ZZ_3D740_474);
ZZ_MARK_TARGET(0x8003DBE0,0x8003DBFC,ZZ_3D740_4A0);
ZZ_MARK_TARGET(0x8003DBFC,0x8003DC10,ZZ_3D740_4BC);
ZZ_MARK_TARGET(0x8003DC10,0x8003DC18,ZZ_3D740_4D0);
ZZ_MARK_TARGET(0x8003DC18,0x8003DC34,ZZ_3D740_4D8);
ZZ_MARK_TARGET(0x8003DC34,0x8003DC6C,ZZ_3D740_4F4);
ZZ_MARK_TARGET(0x8003DC6C,0x8003DC84,ZZ_3D740_52C);
ZZ_MARK_TARGET(0x8003DC84,0x8003DCA4,ZZ_3D740_544);
ZZ_MARK_TARGET(0x8003DCA4,0x8003DCB8,ZZ_3D740_564);
ZZ_MARK_TARGET(0x8003DCB8,0x8003DCC8,ZZ_3D740_578);
ZZ_MARK_TARGET(0x8003DCC8,0x8003DCD0,ZZ_3D740_588);
ZZ_MARK_TARGET(0x8003DCD0,0x8003DCFC,ZZ_3D740_590);
ZZ_MARK_TARGET(0x8003DCFC,0x8003DD20,ZZ_3D740_5BC);
ZZ_MARK_TARGET(0x8003DD20,0x8003DD34,ZZ_3D740_5E0);
ZZ_MARK_TARGET(0x8003DD34,0x8003DD3C,ZZ_3D740_5F4);
ZZ_MARK_TARGET(0x8003DD3C,0x8003DD5C,ZZ_3D740_5FC);
ZZ_MARK_TARGET(0x8003DD5C,0x8003DD78,ZZ_3D740_61C);
ZZ_MARK_TARGET(0x8003DD78,0x8003DD94,ZZ_3D740_638);
ZZ_MARK_TARGET(0x8003DD94,0x8003DDC0,ZZ_3D740_654);
ZZ_MARK_TARGET(0x8003DDC0,0x8003DDE0,ZZ_3D740_680);
ZZ_MARK_TARGET(0x8003DDE0,0x8003DE2C,ZZ_3D740_6A0);
ZZ_MARK_TARGET(0x8003DE2C,0x8003DE3C,ZZ_3D740_6EC);
ZZ_MARK_TARGET(0x8003DE3C,0x8003DE44,ZZ_3D740_6FC);
ZZ_MARK_TARGET(0x8003DE44,0x8003DE50,ZZ_3D740_704);
ZZ_MARK_TARGET(0x8003DE50,0x8003DE64,ZZ_3D740_710);
ZZ_MARK_TARGET(0x8003DE64,0x8003DE90,ZZ_3D740_724);
ZZ_MARK_TARGET(0x8003DE90,0x8003DE98,ZZ_3D740_750);
ZZ_MARK_TARGET(0x8003DE98,0x8003DEA4,ZZ_3D740_758);
ZZ_MARK_TARGET(0x8003DEA4,0x8003DEB0,ZZ_3D740_764);
ZZ_MARK_TARGET(0x8003DEB0,0x8003DEDC,ZZ_3D740_770);
ZZ_MARK_TARGET(0x8003DEDC,0x8003DF04,ZZ_3D740_79C);
ZZ_MARK_TARGET(0x8003DF04,0x8003DF08,ZZ_3D740_7C4);
ZZ_MARK_TARGET(0x8003DF08,0x8003DF10,ZZ_3D740_7C8);
ZZ_MARK_TARGET(0x8003DF10,0x8003DF28,ZZ_3D740_7D0);
ZZ_MARK_TARGET(0x8003DF28,0x8003DF44,ZZ_3D740_7E8);
ZZ_MARK_TARGET(0x8003DF44,0x8003DF64,ZZ_3D740_804);
ZZ_MARK_TARGET(0x8003DF64,0x8003DF9C,ZZ_3D740_824);
