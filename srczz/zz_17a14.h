#ifdef ZZ_INCLUDE_CODE
ZZ_17A14:
	SP -= 88;
	EMU_Write32(SP + 80,RA); //+ 0x50
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 68,S1); //+ 0x44
	RA = 0x80017A30; //ZZ_17A14_1C
	EMU_Write32(SP + 64,S0); //+ 0x40
	ZZ_CLOCKCYCLES(7,0x80026138);
	goto ZZ_26138;
ZZ_17A14_1C:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30840); //+ 0x7878
	RA = 0x80017A40; //ZZ_17A14_2C
	A0 = -A0;
	ZZ_CLOCKCYCLES(4,0x8003905C);
	goto ZZ_3905C;
ZZ_17A14_2C:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30840); //+ 0x7878
	S0 = V0;
	RA = 0x80017A54; //ZZ_17A14_40
	A0 = -A0;
	ZZ_CLOCKCYCLES(5,0x800390D0);
	goto ZZ_390D0;
ZZ_17A14_40:
	S2 = 0x80050000;
	S2 += 30820;
	V1 = -S0;
	EMU_Write16(S2 - 160,V0); //+ 0xFFFFFF60
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30832); //+ 0x7870
	S3 = 0x1000;
	AT = 0x80050000;
	EMU_Write16(AT + 30662,V1); //+ 0x77C6
	AT = 0x80050000;
	EMU_Write16(AT + 30664,R0); //+ 0x77C8
	AT = 0x80050000;
	EMU_Write16(AT + 30666,S0); //+ 0x77CA
	AT = 0x80050000;
	EMU_Write16(AT + 30668,V0); //+ 0x77CC
	AT = 0x80050000;
	EMU_Write16(AT + 30670,R0); //+ 0x77CE
	AT = 0x80050000;
	EMU_Write16(AT + 30672,R0); //+ 0x77D0
	AT = 0x80050000;
	EMU_Write16(AT + 30674,R0); //+ 0x77D2
	AT = 0x80050000;
	EMU_Write16(AT + 30676,S3); //+ 0x77D4
	RA = 0x80017AB8; //ZZ_17A14_A4
	A0 = -A0;
	ZZ_CLOCKCYCLES(25,0x8003905C);
	goto ZZ_3905C;
ZZ_17A14_A4:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30832); //+ 0x7870
	S0 = V0;
	RA = 0x80017ACC; //ZZ_17A14_B8
	A0 = -A0;
	ZZ_CLOCKCYCLES(5,0x800390D0);
	goto ZZ_390D0;
ZZ_17A14_B8:
	S1 = S2 - 160;
	A0 = S1;
	A1 = SP + 16;
	V1 = -S0;
	EMU_Write16(SP + 16,S3); //+ 0x10
	EMU_Write16(SP + 18,R0); //+ 0x12
	EMU_Write16(SP + 20,R0); //+ 0x14
	EMU_Write16(SP + 22,R0); //+ 0x16
	EMU_Write16(SP + 24,V0); //+ 0x18
	EMU_Write16(SP + 26,V1); //+ 0x1A
	EMU_Write16(SP + 28,R0); //+ 0x1C
	EMU_Write16(SP + 30,S0); //+ 0x1E
	RA = 0x80017B04; //ZZ_17A14_F0
	EMU_Write16(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x80042C2C);
	goto ZZ_42C2C;
ZZ_17A14_F0:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30836); //+ 0x7874
	RA = 0x80017B14; //ZZ_17A14_100
	A0 = -A0;
	ZZ_CLOCKCYCLES(4,0x8003905C);
	goto ZZ_3905C;
ZZ_17A14_100:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30836); //+ 0x7874
	S0 = V0;
	RA = 0x80017B28; //ZZ_17A14_114
	A0 = -A0;
	ZZ_CLOCKCYCLES(5,0x800390D0);
	goto ZZ_390D0;
ZZ_17A14_114:
	A0 = S1;
	A1 = SP + 16;
	V1 = S0;
	S0 = -S0;
	EMU_Write16(SP + 16,V0); //+ 0x10
	EMU_Write16(SP + 18,R0); //+ 0x12
	EMU_Write16(SP + 20,V1); //+ 0x14
	EMU_Write16(SP + 22,R0); //+ 0x16
	EMU_Write16(SP + 24,S3); //+ 0x18
	EMU_Write16(SP + 26,R0); //+ 0x1A
	EMU_Write16(SP + 28,S0); //+ 0x1C
	EMU_Write16(SP + 30,R0); //+ 0x1E
	RA = 0x80017B60; //ZZ_17A14_14C
	EMU_Write16(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x80042C2C);
	goto ZZ_42C2C;
ZZ_17A14_14C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = EMU_ReadU8(V0 + 788); //+ 0x314
	A1 = EMU_ReadU8(V0 + 789); //+ 0x315
	A2 = EMU_ReadU8(V0 + 790); //+ 0x316
	RA = 0x80017B88; //ZZ_17A14_174
	ZZ_CLOCKCYCLES(10,0x80042F6C);
	goto ZZ_42F6C;
ZZ_17A14_174:
	A0 = S1;
	A1 = SP + 48;
	V0 = EMU_ReadU32(S2);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30828); //+ 0x786C
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30824); //+ 0x7868
	V1 = (int32_t)V1 >> 8;
	EMU_Write32(SP + 56,V1); //+ 0x38
	V0 = (int32_t)V0 >> 8;
	RA = 0x80017BC0; //ZZ_17A14_1AC
	EMU_Write32(SP + 52,V0); //+ 0x34
	ZZ_CLOCKCYCLES(14,0x80042D3C);
	goto ZZ_42D3C;
ZZ_17A14_1AC:
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 30660); //+ 0x77C4
	A0 = 0x80050000;
	A0 = EMU_ReadU16(A0 + 30662); //+ 0x77C6
	A1 = 0x80050000;
	A1 = EMU_ReadU16(A1 + 30664); //+ 0x77C8
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30666); //+ 0x77CA
	AT = 0x80050000;
	EMU_Write16(AT + 30692,V0); //+ 0x77E4
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30668); //+ 0x77CC
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30694,A0); //+ 0x77E6
	AT = 0x80050000;
	EMU_Write16(AT + 30696,A1); //+ 0x77E8
	AT = 0x80050000;
	EMU_Write16(AT + 30698,V0); //+ 0x77EA
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30670); //+ 0x77CE
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30700,V0); //+ 0x77EC
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 30672); //+ 0x77D0
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30702,V0); //+ 0x77EE
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 30674); //+ 0x77D2
	V1 = -V1;
	AT = 0x80050000;
	EMU_Write16(AT + 30704,V1); //+ 0x77F0
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 30676); //+ 0x77D4
	V0 = -V0;
	AT = 0x80050000;
	EMU_Write16(AT + 30706,V0); //+ 0x77F2
	V1 = -V1;
	AT = 0x80050000;
	EMU_Write16(AT + 30708,V1); //+ 0x77F4
	A1 = 0x80050000;
	A1 += 30724;
	V0 = EMU_ReadU32(S2 - 128); //+ 0xFFFFFF80
	V1 = EMU_ReadU32(S2 - 124); //+ 0xFFFFFF84
	A0 = EMU_ReadU32(S2 - 120); //+ 0xFFFFFF88
	EMU_Write32(A1,V0);
	EMU_Write32(A1 + 4,V1); //+ 0x4
	EMU_Write32(A1 + 8,A0); //+ 0x8
	V0 = EMU_ReadU32(S2 - 116); //+ 0xFFFFFF8C
	V1 = EMU_ReadU32(S2 - 112); //+ 0xFFFFFF90
	A0 = EMU_ReadU32(S2 - 108); //+ 0xFFFFFF94
	EMU_Write32(A1 + 12,V0); //+ 0xC
	EMU_Write32(A1 + 16,V1); //+ 0x10
	EMU_Write32(A1 + 20,A0); //+ 0x14
	V0 = EMU_ReadU32(S2 - 104); //+ 0xFFFFFF98
	V1 = EMU_ReadU32(S2 - 100); //+ 0xFFFFFF9C
	EMU_Write32(A1 + 24,V0); //+ 0x18
	EMU_Write32(A1 + 28,V1); //+ 0x1C
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 &= 0x1000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(79,0x80017E64);
		goto ZZ_17A14_450;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31072); //+ 0x7960
	if ((int32_t)V0 >= 0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(84,0x80017D14);
		goto ZZ_17A14_300;
	}
	V1 = V0;
	V1 = V0 + 127;
	ZZ_CLOCKCYCLES(85,0x80017D14);
ZZ_17A14_300:
	A1 = 0xD0000;
	A1 |= 0xC1E0;
	A0 = 0x7D;
	V1 = (int32_t)V1 >> 7;
	V1 <<= 7;
	V1 = V0 - V1;
	V1 -= 64;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 3;
	V0 += V1;
	V0 <<= 5;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(14,0x80017D50);
		goto ZZ_17A14_33C;
	}
	V0 = -V0;
	ZZ_CLOCKCYCLES(15,0x80017D50);
ZZ_17A14_33C:
	V0 += A1;
	RA = 0x80017D5C; //ZZ_17A14_348
	EMU_Write32(S2 + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(3,0x8003905C);
	goto ZZ_3905C;
ZZ_17A14_348:
	A0 = 0x7D;
	RA = 0x80017D68; //ZZ_17A14_354
	S0 = V0;
	ZZ_CLOCKCYCLES(3,0x800390D0);
	goto ZZ_390D0;
ZZ_17A14_354:
	V1 = -S0;
	EMU_Write16(S2 - 64,S3); //+ 0xFFFFFFC0
	EMU_Write16(S2 - 62,R0); //+ 0xFFFFFFC2
	EMU_Write16(S2 - 60,R0); //+ 0xFFFFFFC4
	EMU_Write16(S2 - 58,R0); //+ 0xFFFFFFC6
	EMU_Write16(S2 - 56,V0); //+ 0xFFFFFFC8
	EMU_Write16(S2 - 54,V1); //+ 0xFFFFFFCA
	EMU_Write16(S2 - 52,R0); //+ 0xFFFFFFCC
	A0 = 0x80050000;
	A0 = EMU_ReadU16(A0 + 30756); //+ 0x7824
	A1 = 0x80050000;
	A1 = EMU_ReadU16(A1 + 30758); //+ 0x7826
	A2 = 0x80050000;
	A2 = EMU_ReadU16(A2 + 30760); //+ 0x7828
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30762); //+ 0x782A
	EMU_Write16(S2 - 50,S0); //+ 0xFFFFFFCE
	EMU_Write16(S2 - 48,V0); //+ 0xFFFFFFD0
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30764); //+ 0x782C
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30788,A0); //+ 0x7844
	AT = 0x80050000;
	EMU_Write16(AT + 30790,A1); //+ 0x7846
	AT = 0x80050000;
	EMU_Write16(AT + 30792,A2); //+ 0x7848
	AT = 0x80050000;
	EMU_Write16(AT + 30794,V0); //+ 0x784A
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadS16(V1 + 30766); //+ 0x782E
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30796,V0); //+ 0x784C
	V0 = V1 << 2;
	V0 += V1;
	V0 = -V0;
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 30768); //+ 0x7830
	V0 = (int32_t)V0 >> 3;
	AT = 0x80050000;
	EMU_Write16(AT + 30798,V0); //+ 0x784E
	V0 = 0x80050000;
	V0 = EMU_ReadU16(V0 + 30770); //+ 0x7832
	V1 = -V1;
	AT = 0x80050000;
	EMU_Write16(AT + 30800,V1); //+ 0x7850
	V1 = 0x80050000;
	V1 = EMU_ReadU16(V1 + 30772); //+ 0x7834
	V0 = -V0;
	AT = 0x80050000;
	EMU_Write16(AT + 30802,V0); //+ 0x7852
	V1 = -V1;
	AT = 0x80050000;
	EMU_Write16(AT + 30804,V1); //+ 0x7854
	ZZ_CLOCKCYCLES(63,0x80017EE4);
	goto ZZ_17A14_4D0;
ZZ_17A14_450:
	V0 = EMU_ReadU32(S2 - 160); //+ 0xFFFFFF60
	V1 = EMU_ReadU32(S2 - 156); //+ 0xFFFFFF64
	A0 = EMU_ReadU32(S2 - 152); //+ 0xFFFFFF68
	A1 = EMU_ReadU32(S2 - 148); //+ 0xFFFFFF6C
	EMU_Write32(S2 - 64,V0); //+ 0xFFFFFFC0
	EMU_Write32(S2 - 60,V1); //+ 0xFFFFFFC4
	EMU_Write32(S2 - 56,A0); //+ 0xFFFFFFC8
	EMU_Write32(S2 - 52,A1); //+ 0xFFFFFFCC
	V0 = EMU_ReadU32(S2 - 144); //+ 0xFFFFFF70
	V1 = EMU_ReadU32(S2 - 140); //+ 0xFFFFFF74
	A0 = EMU_ReadU32(S2 - 136); //+ 0xFFFFFF78
	A1 = EMU_ReadU32(S2 - 132); //+ 0xFFFFFF7C
	EMU_Write32(S2 - 48,V0); //+ 0xFFFFFFD0
	EMU_Write32(S2 - 44,V1); //+ 0xFFFFFFD4
	EMU_Write32(S2 - 40,A0); //+ 0xFFFFFFD8
	EMU_Write32(S2 - 36,A1); //+ 0xFFFFFFDC
	V0 = EMU_ReadU32(S2 - 128); //+ 0xFFFFFF80
	V1 = EMU_ReadU32(S2 - 124); //+ 0xFFFFFF84
	A0 = EMU_ReadU32(S2 - 120); //+ 0xFFFFFF88
	A1 = EMU_ReadU32(S2 - 116); //+ 0xFFFFFF8C
	EMU_Write32(S2 - 32,V0); //+ 0xFFFFFFE0
	EMU_Write32(S2 - 28,V1); //+ 0xFFFFFFE4
	EMU_Write32(S2 - 24,A0); //+ 0xFFFFFFE8
	EMU_Write32(S2 - 20,A1); //+ 0xFFFFFFEC
	V0 = EMU_ReadU32(S2 - 112); //+ 0xFFFFFF90
	V1 = EMU_ReadU32(S2 - 108); //+ 0xFFFFFF94
	A0 = EMU_ReadU32(S2 - 104); //+ 0xFFFFFF98
	A1 = EMU_ReadU32(S2 - 100); //+ 0xFFFFFF9C
	EMU_Write32(S2 - 16,V0); //+ 0xFFFFFFF0
	EMU_Write32(S2 - 12,V1); //+ 0xFFFFFFF4
	EMU_Write32(S2 - 8,A0); //+ 0xFFFFFFF8
	EMU_Write32(S2 - 4,A1); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(32,0x80017EE4);
ZZ_17A14_4D0:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 6460); //+ 0x193C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 6292); //+ 0x1894
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6464); //+ 0x1940
	A1 = (int32_t)A1 >> 8;
	RA = 0x80017F08; //ZZ_17A14_4F4
	A1 += V0;
	ZZ_CLOCKCYCLES(9,0x80042F8C);
	goto ZZ_42F8C;
ZZ_17A14_4F4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6292); //+ 0x1894
	V0 = (int32_t)V0 >> 8;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x80017F30);
		goto ZZ_17A14_51C;
	}
	AT = 0x80060000;
	EMU_Write32(AT + 6292,R0); //+ 0x1894
	ZZ_CLOCKCYCLES(10,0x80017F54);
	goto ZZ_17A14_540;
ZZ_17A14_51C:
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(2,0x80017F44);
		goto ZZ_17A14_530;
	}
	V0 = -V0;
	V0 += 1;
	ZZ_CLOCKCYCLES(5,0x80017F48);
	goto ZZ_17A14_534;
ZZ_17A14_530:
	V0 = ~V0;
	ZZ_CLOCKCYCLES(1,0x80017F48);
ZZ_17A14_534:
	V0 <<= 8;
	AT = 0x80060000;
	EMU_Write32(AT + 6292,V0); //+ 0x1894
	ZZ_CLOCKCYCLES(3,0x80017F54);
ZZ_17A14_540:
	T1 = 0x80050000;
	T1 += 30820;
	V0 = EMU_ReadU32(T1);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30824); //+ 0x7868
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30828); //+ 0x786C
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 30832); //+ 0x7870
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 30836); //+ 0x7874
	A3 = 0x80050000;
	A3 = EMU_ReadU32(A3 + 30840); //+ 0x7878
	T0 = 0x80050000;
	T0 = EMU_ReadU32(T0 + 30996); //+ 0x7914
	AT = 0x80060000;
	EMU_Write32(AT + 6432,V0); //+ 0x1920
	AT = 0x80060000;
	EMU_Write32(AT + 6436,V1); //+ 0x1924
	AT = 0x80060000;
	EMU_Write32(AT + 6440,A0); //+ 0x1928
	AT = 0x80060000;
	EMU_Write32(AT + 6444,A1); //+ 0x192C
	AT = 0x80060000;
	EMU_Write32(AT + 6448,A2); //+ 0x1930
	AT = 0x80060000;
	EMU_Write32(AT + 6452,A3); //+ 0x1934
	V0 = EMU_ReadU32(T0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 764); //+ 0x2FC
	V0 &= 0x1000;
	if (V0)
	{
		ZZ_CLOCKCYCLES(34,0x8001801C);
		goto ZZ_17A14_608;
	}
	A1 = 0x80050000;
	A1 += 30856;
	V0 = EMU_ReadU32(T1);
	V1 = EMU_ReadU32(T1 + 4); //+ 0x4
	A0 = EMU_ReadU32(T1 + 8); //+ 0x8
	EMU_Write32(A1,V0);
	EMU_Write32(A1 + 4,V1); //+ 0x4
	EMU_Write32(A1 + 8,A0); //+ 0x8
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31032); //+ 0x7938
	V0 &= 0xFFF;
	AT = 0x80050000;
	EMU_Write32(AT + 31024,V0); //+ 0x7930
	ZZ_CLOCKCYCLES(50,0x80018024);
	goto ZZ_17A14_610;
ZZ_17A14_608:
	AT = 0x80050000;
	EMU_Write32(AT + 31024,R0); //+ 0x7930
	ZZ_CLOCKCYCLES(2,0x80018024);
ZZ_17A14_610:
	S0 = 0x80050000;
	S0 += 31024;
	A0 = EMU_ReadU32(S0);
	AT = 0x80060000;
	EMU_Write32(AT + 6344,A0); //+ 0x18C8
	RA = 0x80018040; //ZZ_17A14_62C
	ZZ_CLOCKCYCLES(7,0x8003905C);
	goto ZZ_3905C;
ZZ_17A14_62C:
	A0 = EMU_ReadU32(S0);
	V0 = (int32_t)V0 >> 4;
	AT = 0x80050000;
	EMU_Write32(AT + 31052,V0); //+ 0x794C
	AT = 0x80050000;
	EMU_Write32(AT + 31056,R0); //+ 0x7950
	RA = 0x80018060; //ZZ_17A14_64C
	ZZ_CLOCKCYCLES(8,0x800390D0);
	goto ZZ_390D0;
ZZ_17A14_64C:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 30996); //+ 0x7914
	V0 = (int32_t)V0 >> 4;
	AT = 0x80050000;
	EMU_Write32(AT + 31060,V0); //+ 0x7954
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	RA = 0x80018080; //ZZ_17A14_66C
	ZZ_CLOCKCYCLES(8,0x8001922C);
	goto ZZ_1922C;
ZZ_17A14_66C:
	RA = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 88;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80017A14,0x80017A30,ZZ_17A14);
ZZ_MARK_TARGET(0x80017A30,0x80017A40,ZZ_17A14_1C);
ZZ_MARK_TARGET(0x80017A40,0x80017A54,ZZ_17A14_2C);
ZZ_MARK_TARGET(0x80017A54,0x80017AB8,ZZ_17A14_40);
ZZ_MARK_TARGET(0x80017AB8,0x80017ACC,ZZ_17A14_A4);
ZZ_MARK_TARGET(0x80017ACC,0x80017B04,ZZ_17A14_B8);
ZZ_MARK_TARGET(0x80017B04,0x80017B14,ZZ_17A14_F0);
ZZ_MARK_TARGET(0x80017B14,0x80017B28,ZZ_17A14_100);
ZZ_MARK_TARGET(0x80017B28,0x80017B60,ZZ_17A14_114);
ZZ_MARK_TARGET(0x80017B60,0x80017B88,ZZ_17A14_14C);
ZZ_MARK_TARGET(0x80017B88,0x80017BC0,ZZ_17A14_174);
ZZ_MARK_TARGET(0x80017BC0,0x80017D14,ZZ_17A14_1AC);
ZZ_MARK_TARGET(0x80017D14,0x80017D50,ZZ_17A14_300);
ZZ_MARK_TARGET(0x80017D50,0x80017D5C,ZZ_17A14_33C);
ZZ_MARK_TARGET(0x80017D5C,0x80017D68,ZZ_17A14_348);
ZZ_MARK_TARGET(0x80017D68,0x80017E64,ZZ_17A14_354);
ZZ_MARK_TARGET(0x80017E64,0x80017EE4,ZZ_17A14_450);
ZZ_MARK_TARGET(0x80017EE4,0x80017F08,ZZ_17A14_4D0);
ZZ_MARK_TARGET(0x80017F08,0x80017F30,ZZ_17A14_4F4);
ZZ_MARK_TARGET(0x80017F30,0x80017F44,ZZ_17A14_51C);
ZZ_MARK_TARGET(0x80017F44,0x80017F48,ZZ_17A14_530);
ZZ_MARK_TARGET(0x80017F48,0x80017F54,ZZ_17A14_534);
ZZ_MARK_TARGET(0x80017F54,0x8001801C,ZZ_17A14_540);
ZZ_MARK_TARGET(0x8001801C,0x80018024,ZZ_17A14_608);
ZZ_MARK_TARGET(0x80018024,0x80018040,ZZ_17A14_610);
ZZ_MARK_TARGET(0x80018040,0x80018060,ZZ_17A14_62C);
ZZ_MARK_TARGET(0x80018060,0x80018080,ZZ_17A14_64C);
ZZ_MARK_TARGET(0x80018080,0x800180A0,ZZ_17A14_66C);
