#ifdef ZZ_INCLUDE_CODE
ZZ_3C358:
	SP -= 24;
	V0 = 0x80030000;
	V0 = EMU_ReadU32(V0 + 17696); //+ 0x4520
	A0 = 0x80050000;
	A0 += 25972;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x8003C378; //ZZ_3C358_20
	ZZ_CLOCKCYCLES(8,0x8003E258);
	goto ZZ_3E258;
ZZ_3C358_20:
	V1 = 0x80030000;
	V1 = EMU_ReadU32(V1 + 17696); //+ 0x4520
	V1 = 0x1;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(5,0x8003C39C);
		goto ZZ_3C358_44;
	}
	RA = 0x8003C394; //ZZ_3C358_3C
	A0 = 0x2;
	ZZ_CLOCKCYCLES(7,0x8003CAD8);
	goto ZZ_3CAD8;
ZZ_3C358_3C:
	A0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x8003C3AC);
	goto ZZ_3C358_54;
ZZ_3C358_44:
	RA = 0x8003C3A4; //ZZ_3C358_4C
	ZZ_CLOCKCYCLES(2,0x8003C3FC);
	goto ZZ_3C3FC;
ZZ_3C358_4C:
	if (!V0)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(2,0x8003C3BC);
		goto ZZ_3C358_64;
	}
	A0 = 0x2;
	ZZ_CLOCKCYCLES(2,0x8003C3AC);
ZZ_3C358_54:
	RA = 0x8003C3B4; //ZZ_3C358_5C
	ZZ_CLOCKCYCLES(2,0x8003CAB0);
	goto ZZ_3CAB0;
ZZ_3C358_5C:
	RA = 0x8003C3BC; //ZZ_3C358_64
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003CAF8);
	goto ZZ_3CAF8;
ZZ_3C358_64:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8003AA3C,ZZ_3A94C_F0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003C358,0x8003C378,ZZ_3C358);
ZZ_MARK_TARGET(0x8003C378,0x8003C394,ZZ_3C358_20);
ZZ_MARK_TARGET(0x8003C394,0x8003C39C,ZZ_3C358_3C);
ZZ_MARK_TARGET(0x8003C39C,0x8003C3A4,ZZ_3C358_44);
ZZ_MARK_TARGET(0x8003C3A4,0x8003C3AC,ZZ_3C358_4C);
ZZ_MARK_TARGET(0x8003C3AC,0x8003C3B4,ZZ_3C358_54);
ZZ_MARK_TARGET(0x8003C3B4,0x8003C3BC,ZZ_3C358_5C);
ZZ_MARK_TARGET(0x8003C3BC,0x8003C3CC,ZZ_3C358_64);
