#ifdef ZZ_INCLUDE_CODE
ZZ_4DA9C:
	SP -= 32;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	S1 = A0;
	RA = 0x8004DAB8; //ZZ_4DA9C_1C
	A0 = R0;
	ZZ_CLOCKCYCLES(7,0x8004DDA8);
	goto ZZ_4DDA8;
ZZ_4DA9C_1C:
	AT = 0x80050000;
	EMU_Write16(AT + 32496,R0); //+ 0x7EF0
	A1 = 0x80050000;
	A1 += 29124;
	RA = 0x8004DAD0; //ZZ_4DA9C_34
	A0 = 0x20;
	ZZ_CLOCKCYCLES(6,0x80045D70);
	goto ZZ_45D70;
ZZ_4DA9C_34:
	S0 = R0;
	V1 = 0x80060000;
	V1 -= 6776;
	V0 = S0 & 0xFFFF;
	ZZ_CLOCKCYCLES(4,0x8004DAE0);
ZZ_4DA9C_44:
	V0 <<= 1;
	V0 += V1;
	EMU_Write16(V0,R0);
	S0 += 1;
	V0 = S0 & 0xFFFF;
	V0 = V0 < 192;
	if (V0)
	{
		V0 = S0 & 0xFFFF;
		ZZ_CLOCKCYCLES(8,0x8004DAE0);
		goto ZZ_4DA9C_44;
	}
	V0 = S0 & 0xFFFF;
	S0 = R0;
	V0 = S0 & 0xFFFF;
	ZZ_CLOCKCYCLES(10,0x8004DB08);
ZZ_4DA9C_6C:
	AT = 0x80050000;
	AT += V0;
	EMU_Write8(AT + 30628,R0); //+ 0x77A4
	S0 += 1;
	V0 = S0 & 0xFFFF;
	V0 = V0 < 24;
	if (V0)
	{
		V0 = S0 & 0xFFFF;
		ZZ_CLOCKCYCLES(8,0x8004DB08);
		goto ZZ_4DA9C_6C;
	}
	V0 = S0 & 0xFFFF;
	AT = 0x80060000;
	EMU_Write16(AT + 3304,R0); //+ 0xCE8
	S0 = R0;
	V0 = S0 & 0xFFFF;
	ZZ_CLOCKCYCLES(12,0x8004DB38);
ZZ_4DA9C_9C:
	AT = 0x80060000;
	AT += V0;
	EMU_Write8(AT - 6792,R0); //+ 0xFFFFE578
	S0 += 1;
	V0 = S0 & 0xFFFF;
	V0 = V0 < 16;
	if (V0)
	{
		V0 = S0 & 0xFFFF;
		ZZ_CLOCKCYCLES(8,0x8004DB38);
		goto ZZ_4DA9C_9C;
	}
	V0 = S0 & 0xFFFF;
	A0 = S1 & 0xFF;
	V0 = A0 < 24;
	if (V0)
	{
		V0 = 0x18;
		ZZ_CLOCKCYCLES(12,0x8004DB78);
		goto ZZ_4DA9C_DC;
	}
	V0 = 0x18;
	AT = 0x80060000;
	EMU_Write8(AT - 7360,V0); //+ 0xFFFFE340
	ZZ_CLOCKCYCLES(16,0x8004DB80);
	goto ZZ_4DA9C_E4;
ZZ_4DA9C_DC:
	AT = 0x80060000;
	EMU_Write8(AT - 7360,A0); //+ 0xFFFFE340
	ZZ_CLOCKCYCLES(2,0x8004DB80);
ZZ_4DA9C_E4:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	if (!V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(5,0x8004DD24);
		goto ZZ_4DA9C_288;
	}
	S0 = R0;
	S1 = 0xFF;
	V1 = S0 & 0xFFFF;
	ZZ_CLOCKCYCLES(7,0x8004DB9C);
ZZ_4DA9C_100:
	A1 = V1 << 3;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	V1 = 0x18;
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29358,V1); //+ 0x72AE
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29356,S1); //+ 0x72AC
	AT = 0x80050000;
	AT += V0;
	EMU_Write8(AT + 29383,R0); //+ 0x72C7
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29360,R0); //+ 0x72B0
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29362,R0); //+ 0x72B2
	V1 = -1;
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29370,V1); //+ 0x72BA
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29372,R0); //+ 0x72BC
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29374,R0); //+ 0x72BE
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29376,S1); //+ 0x72C0
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29364,R0); //+ 0x72B4
	V1 = 0x40;
	AT = 0x80050000;
	AT += V0;
	EMU_Write8(AT + 29366,V1); //+ 0x72B6
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29384,R0); //+ 0x72C8
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29386,R0); //+ 0x72CA
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29388,R0); //+ 0x72CC
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29390,R0); //+ 0x72CE
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29396,R0); //+ 0x72D4
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29398,R0); //+ 0x72D6
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29400,R0); //+ 0x72D8
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29402,R0); //+ 0x72DA
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29404,R0); //+ 0x72DC
	AT = 0x80050000;
	AT += V0;
	EMU_Write16(AT + 29392,R0); //+ 0x72D0
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 25200); //+ 0x6270
	A1 &= 0xFFFF;
	A1 <<= 1;
	A1 += V0;
	EMU_Write16(A1,R0);
	EMU_Write16(A1 + 2,R0); //+ 0x2
	V0 = 0x200;
	EMU_Write16(A1 + 6,V0); //+ 0x6
	V0 = 0x1000;
	EMU_Write16(A1 + 4,V0); //+ 0x4
	V0 = 0x80FF;
	EMU_Write16(A1 + 8,V0); //+ 0x8
	V0 = 0x4000;
	EMU_Write16(A1 + 10,V0); //+ 0xA
	AT = 0x80060000;
	EMU_Write16(AT - 6798,S0); //+ 0xFFFFE572
	RA = 0x8004DD08; //ZZ_4DA9C_26C
	A0 = 0x1;
	ZZ_CLOCKCYCLES(91,0x8004F0D4);
	goto ZZ_4F0D4;
ZZ_4DA9C_26C:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 7360); //+ 0xFFFFE340
	S0 += 1;
	V0 = S0 & 0xFFFF;
	V0 = V0 < V1;
	if (V0)
	{
		V1 = S0 & 0xFFFF;
		ZZ_CLOCKCYCLES(7,0x8004DB9C);
		goto ZZ_4DA9C_100;
	}
	V1 = S0 & 0xFFFF;
	ZZ_CLOCKCYCLES(7,0x8004DD24);
ZZ_4DA9C_288:
	AT = 0x80050000;
	EMU_Write16(AT + 29260,R0); //+ 0x724C
	AT = 0x80050000;
	EMU_Write16(AT + 29268,R0); //+ 0x7254
	AT = 0x80060000;
	EMU_Write16(AT + 6760,R0); //+ 0x1A68
	AT = 0x80050000;
	EMU_Write16(AT + 29276,R0); //+ 0x725C
	AT = 0x80050000;
	EMU_Write16(AT + 29284,R0); //+ 0x7264
	AT = 0x80050000;
	EMU_Write32(AT + 30604,R0); //+ 0x778C
	V0 = 0x3FFF;
	AT = 0x80050000;
	EMU_Write16(AT + 30612,V0); //+ 0x7794
	AT = 0x80050000;
	EMU_Write16(AT + 30614,V0); //+ 0x7796
	AT = 0x80050000;
	EMU_Write32(AT + 30608,R0); //+ 0x7790
	AT = 0x80060000;
	EMU_Write8(AT - 6384,R0); //+ 0xFFFFE710
	AT = 0x80060000;
	EMU_Write16(AT - 31752,R0); //+ 0xFFFF83F8
	V0 = 0x80;
	AT = 0x80060000;
	EMU_Write16(AT - 12348,V0); //+ 0xFFFFCFC4
	RA = 0x8004DD94; //ZZ_4DA9C_2F8
	ZZ_CLOCKCYCLES(28,0x8004D680);
	goto ZZ_4D680;
ZZ_4DA9C_2F8:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 32;
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80049794,ZZ_4970C_88);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004DA9C,0x8004DAB8,ZZ_4DA9C);
ZZ_MARK_TARGET(0x8004DAB8,0x8004DAD0,ZZ_4DA9C_1C);
ZZ_MARK_TARGET(0x8004DAD0,0x8004DAE0,ZZ_4DA9C_34);
ZZ_MARK_TARGET(0x8004DAE0,0x8004DB08,ZZ_4DA9C_44);
ZZ_MARK_TARGET(0x8004DB08,0x8004DB38,ZZ_4DA9C_6C);
ZZ_MARK_TARGET(0x8004DB38,0x8004DB78,ZZ_4DA9C_9C);
ZZ_MARK_TARGET(0x8004DB78,0x8004DB80,ZZ_4DA9C_DC);
ZZ_MARK_TARGET(0x8004DB80,0x8004DB9C,ZZ_4DA9C_E4);
ZZ_MARK_TARGET(0x8004DB9C,0x8004DD08,ZZ_4DA9C_100);
ZZ_MARK_TARGET(0x8004DD08,0x8004DD24,ZZ_4DA9C_26C);
ZZ_MARK_TARGET(0x8004DD24,0x8004DD94,ZZ_4DA9C_288);
ZZ_MARK_TARGET(0x8004DD94,0x8004DDA8,ZZ_4DA9C_2F8);
