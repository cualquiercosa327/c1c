#ifdef ZZ_INCLUDE_CODE
ZZ_3C420:
	SP -= 24;
	A0 = 0x3E7;
	EMU_Write32(SP + 20,RA); //+ 0x14
	RA = 0x8003C434; //ZZ_3C420_14
	EMU_Write32(SP + 16,S0); //+ 0x10
	ZZ_CLOCKCYCLES(5,0x8002F778);
	goto ZZ_2F778;
ZZ_3C420_14:
	A0 = EMU_ReadU32(GP + 712); //+ 0x2C8
	RA = 0x8003C440; //ZZ_3C420_20
	S0 = 0x1;
	ZZ_CLOCKCYCLES(3,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C420_20:
	if (V0 == S0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x8003C490);
		goto ZZ_3C420_70;
	}
	V0 = R0;
	A0 = EMU_ReadU32(GP + 716); //+ 0x2CC
	RA = 0x8003C454; //ZZ_3C420_34
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C420_34:
	if (V0 == S0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8003C490);
		goto ZZ_3C420_70;
	}
	V0 = 0x1;
	A0 = EMU_ReadU32(GP + 720); //+ 0x2D0
	RA = 0x8003C468; //ZZ_3C420_48
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C420_48:
	if (V0 == S0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(2,0x8003C490);
		goto ZZ_3C420_70;
	}
	V0 = 0x2;
	A0 = EMU_ReadU32(GP + 724); //+ 0x2D4
	RA = 0x8003C47C; //ZZ_3C420_5C
	ZZ_CLOCKCYCLES(5,0x8003E1C8);
	goto ZZ_3E1C8;
ZZ_3C420_5C:
	if (V0 != S0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x8003C490);
		goto ZZ_3C420_70;
	}
	V0 = -1;
	RA = 0x8003C48C; //ZZ_3C420_6C
	A0 = 0x10;
	ZZ_CLOCKCYCLES(4,0x8003CAB0);
	goto ZZ_3CAB0;
ZZ_3C420_6C:
	V0 = 0x3;
	ZZ_CLOCKCYCLES(1,0x8003C490);
ZZ_3C420_70:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8003AAAC,ZZ_3AA7C_30);
	ZZ_JUMPREGISTER(0x8003AC64,ZZ_3AC2C_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003C420,0x8003C434,ZZ_3C420);
ZZ_MARK_TARGET(0x8003C434,0x8003C440,ZZ_3C420_14);
ZZ_MARK_TARGET(0x8003C440,0x8003C454,ZZ_3C420_20);
ZZ_MARK_TARGET(0x8003C454,0x8003C468,ZZ_3C420_34);
ZZ_MARK_TARGET(0x8003C468,0x8003C47C,ZZ_3C420_48);
ZZ_MARK_TARGET(0x8003C47C,0x8003C48C,ZZ_3C420_5C);
ZZ_MARK_TARGET(0x8003C48C,0x8003C490,ZZ_3C420_6C);
ZZ_MARK_TARGET(0x8003C490,0x8003C4A4,ZZ_3C420_70);
