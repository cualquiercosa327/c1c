#ifdef ZZ_INCLUDE_CODE
ZZ_40760:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19044); //+ 0x4A64
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	V0 = EMU_ReadU32(V0 + 60); //+ 0x3C
	S1 = EMU_ReadU8(S0 + 3); //+ 0x3
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004078C; //ZZ_40760_2C
	A0 = R0;
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80040784)
	ZZ_JUMPREGISTER_END();
ZZ_40760_2C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19044); //+ 0x4A64
	A0 = S0 + 4;
	V0 = EMU_ReadU32(V0 + 20); //+ 0x14
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800407A8; //ZZ_40760_48
	A1 = S1;
	ZZ_CLOCKCYCLES_JR(7);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800407A0)
	ZZ_JUMPREGISTER_END();
ZZ_40760_48:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80016B0C,ZZ_16A6C_A0);
	ZZ_JUMPREGISTER(0x80016A50,ZZ_169F8_58);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80040760,0x8004078C,ZZ_40760);
ZZ_MARK_TARGET(0x8004078C,0x800407A8,ZZ_40760_2C);
ZZ_MARK_TARGET(0x800407A8,0x800407C0,ZZ_40760_48);
