#ifdef ZZ_INCLUDE_CODE
ZZ_319DC:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A1;
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = -1;
	if (A0 == S1)
	{
		EMU_Write32(SP + 24,RA); //+ 0x18
		ZZ_CLOCKCYCLES(9,0x80031A08);
		goto ZZ_319DC_2C;
	}
	EMU_Write32(SP + 24,RA); //+ 0x18
	RA = 0x80031A08; //ZZ_319DC_2C
	ZZ_CLOCKCYCLES(11,0x80049404);
	goto ZZ_49404;
ZZ_319DC_2C:
	if (!S0)
	{
		ZZ_CLOCKCYCLES(2,0x80031A28);
		goto ZZ_319DC_4C;
	}
	A0 = EMU_ReadS16(GP + 604); //+ 0x25C
	if (A0 == S1)
	{
		ZZ_CLOCKCYCLES(6,0x80031A28);
		goto ZZ_319DC_4C;
	}
	RA = 0x80031A28; //ZZ_319DC_4C
	ZZ_CLOCKCYCLES(8,0x80050868);
	goto ZZ_50868;
ZZ_319DC_4C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003194C,ZZ_31938_14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800319DC,0x80031A08,ZZ_319DC);
ZZ_MARK_TARGET(0x80031A08,0x80031A28,ZZ_319DC_2C);
ZZ_MARK_TARGET(0x80031A28,0x80031A40,ZZ_319DC_4C);
