#ifdef ZZ_INCLUDE_CODE
ZZ_48B30:
	SP -= 16;
	A2 = R0;
	T1 = EMU_ReadU32(A0);
	T2 = T1 < 1;
	if (T2)
	{
		T0 = R0;
		ZZ_CLOCKCYCLES(7,0x80048B60);
		goto ZZ_48B30_30;
	}
	T0 = R0;
	V0 = T1 & 0x1;
	if (!V0)
	{
		V0 = T1 & 0x4;
		ZZ_CLOCKCYCLES(10,0x80048C10);
		goto ZZ_48B30_E0;
	}
	V0 = T1 & 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80048BC4);
		goto ZZ_48B30_94;
	}
	ZZ_CLOCKCYCLES(12,0x80048B60);
ZZ_48B30_30:
	V1 = EMU_ReadS16(A0 + 8); //+ 0x8
	V0 = V1 < 8;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80048BC4);
		goto ZZ_48B30_94;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 5864); //+ 0x16E8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED INDIRECT JUMP (V0,80048B84)
	// PC IS 80048B84
	ZZ_JUMPREGISTER_END();
ZZ_48B30_94:
	A2 = EMU_ReadU16(A0 + 4); //+ 0x4
	A1 = R0;
	if (!A1)
	{
		V0 = A2 & 0x7FFF;
		ZZ_CLOCKCYCLES(4,0x80048C00);
		goto ZZ_48B30_D0;
	}
	V0 = A2 & 0x7FFF;
	A3 = EMU_ReadS16(A0 + 4); //+ 0x4
	V0 = (int32_t)A3 < 128;
	if (V0)
	{
		V1 = A3;
		ZZ_CLOCKCYCLES(9,0x80048BF0);
		goto ZZ_48B30_C0;
	}
	V1 = A3;
	A2 = 0x7F;
	ZZ_CLOCKCYCLES(11,0x80048BFC);
	goto ZZ_48B30_CC;
ZZ_48B30_C0:
	if ((int32_t)A3 >= 0)
	{
		A2 = V1;
		ZZ_CLOCKCYCLES(2,0x80048BFC);
		goto ZZ_48B30_CC;
	}
	A2 = V1;
	A2 = R0;
	ZZ_CLOCKCYCLES(3,0x80048BFC);
ZZ_48B30_CC:
	V0 = A2 & 0x7FFF;
	ZZ_CLOCKCYCLES(1,0x80048C00);
ZZ_48B30_D0:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 |= A1;
	EMU_Write16(V1 + 384,V0); //+ 0x180
	ZZ_CLOCKCYCLES(4,0x80048C10);
ZZ_48B30_E0:
	if (T2)
	{
		V0 = T1 & 0x2;
		ZZ_CLOCKCYCLES(2,0x80048C28);
		goto ZZ_48B30_F8;
	}
	V0 = T1 & 0x2;
	if (!V0)
	{
		V0 = T1 & 0x8;
		ZZ_CLOCKCYCLES(4,0x80048CD8);
		goto ZZ_48B30_1A8;
	}
	V0 = T1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80048C8C);
		goto ZZ_48B30_15C;
	}
	ZZ_CLOCKCYCLES(6,0x80048C28);
ZZ_48B30_F8:
	V1 = EMU_ReadS16(A0 + 10); //+ 0xA
	V0 = V1 < 8;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80048C8C);
		goto ZZ_48B30_15C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 5896); //+ 0x1708
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80048C8C,ZZ_48B30_15C);
	ZZ_JUMPREGISTER(0x80048C54,ZZ_48B30_124);
	ZZ_JUMPREGISTER(0x80048C5C,ZZ_48B30_12C);
	ZZ_JUMPREGISTER(0x80048C64,ZZ_48B30_134);
	ZZ_JUMPREGISTER(0x80048C6C,ZZ_48B30_13C);
	ZZ_JUMPREGISTER(0x80048C74,ZZ_48B30_144);
	ZZ_JUMPREGISTER(0x80048C7C,ZZ_48B30_14C);
	ZZ_JUMPREGISTER(0x80048C84,ZZ_48B30_154);
	ZZ_JUMPREGISTER_END();
ZZ_48B30_124:
	A1 = 0x8000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_12C:
	A1 = 0x9000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_134:
	A1 = 0xA000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_13C:
	A1 = 0xB000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_144:
	A1 = 0xC000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_14C:
	A1 = 0xD000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_154:
	A1 = 0xE000;
	ZZ_CLOCKCYCLES(2,0x80048C94);
	goto ZZ_48B30_164;
ZZ_48B30_15C:
	T0 = EMU_ReadU16(A0 + 6); //+ 0x6
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80048C94);
ZZ_48B30_164:
	if (!A1)
	{
		V0 = T0 & 0x7FFF;
		ZZ_CLOCKCYCLES(2,0x80048CC8);
		goto ZZ_48B30_198;
	}
	V0 = T0 & 0x7FFF;
	A2 = EMU_ReadS16(A0 + 6); //+ 0x6
	V0 = (int32_t)A2 < 128;
	if (V0)
	{
		V1 = A2;
		ZZ_CLOCKCYCLES(7,0x80048CB8);
		goto ZZ_48B30_188;
	}
	V1 = A2;
	T0 = 0x7F;
	ZZ_CLOCKCYCLES(9,0x80048CC4);
	goto ZZ_48B30_194;
ZZ_48B30_188:
	if ((int32_t)A2 >= 0)
	{
		T0 = V1;
		ZZ_CLOCKCYCLES(2,0x80048CC4);
		goto ZZ_48B30_194;
	}
	T0 = V1;
	T0 = R0;
	ZZ_CLOCKCYCLES(3,0x80048CC4);
ZZ_48B30_194:
	V0 = T0 & 0x7FFF;
	ZZ_CLOCKCYCLES(1,0x80048CC8);
ZZ_48B30_198:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 |= A1;
	EMU_Write16(V1 + 386,V0); //+ 0x182
	ZZ_CLOCKCYCLES(4,0x80048CD8);
ZZ_48B30_1A8:
	if (T2)
	{
		V0 = T1 & 0x40;
		ZZ_CLOCKCYCLES(2,0x80048CE8);
		goto ZZ_48B30_1B8;
	}
	V0 = T1 & 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048CFC);
		goto ZZ_48B30_1CC;
	}
	ZZ_CLOCKCYCLES(4,0x80048CE8);
ZZ_48B30_1B8:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 = EMU_ReadU16(A0 + 16); //+ 0x10
	EMU_Write16(V1 + 432,V0); //+ 0x1B0
	ZZ_CLOCKCYCLES(5,0x80048CFC);
ZZ_48B30_1CC:
	if (T2)
	{
		V0 = T1 & 0x80;
		ZZ_CLOCKCYCLES(2,0x80048D0C);
		goto ZZ_48B30_1DC;
	}
	V0 = T1 & 0x80;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048D20);
		goto ZZ_48B30_1F0;
	}
	ZZ_CLOCKCYCLES(4,0x80048D0C);
ZZ_48B30_1DC:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 = EMU_ReadU16(A0 + 18); //+ 0x12
	EMU_Write16(V1 + 434,V0); //+ 0x1B2
	ZZ_CLOCKCYCLES(5,0x80048D20);
ZZ_48B30_1F0:
	if (T2)
	{
		V0 = T1 & 0x100;
		ZZ_CLOCKCYCLES(2,0x80048D30);
		goto ZZ_48B30_200;
	}
	V0 = T1 & 0x100;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048D74);
		goto ZZ_48B30_244;
	}
	ZZ_CLOCKCYCLES(4,0x80048D30);
ZZ_48B30_200:
	V0 = EMU_ReadU32(A0 + 20); //+ 0x14
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048D58);
		goto ZZ_48B30_228;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 &= 0xFFFB;
	ZZ_CLOCKCYCLES(10,0x80048D70);
	goto ZZ_48B30_240;
ZZ_48B30_228:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 |= 0x4;
	ZZ_CLOCKCYCLES(6,0x80048D70);
ZZ_48B30_240:
	EMU_Write16(V0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(1,0x80048D74);
ZZ_48B30_244:
	if (T2)
	{
		V0 = T1 & 0x200;
		ZZ_CLOCKCYCLES(2,0x80048D84);
		goto ZZ_48B30_254;
	}
	V0 = T1 & 0x200;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048DC8);
		goto ZZ_48B30_298;
	}
	ZZ_CLOCKCYCLES(4,0x80048D84);
ZZ_48B30_254:
	V0 = EMU_ReadU32(A0 + 24); //+ 0x18
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048DAC);
		goto ZZ_48B30_27C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 &= 0xFFFE;
	ZZ_CLOCKCYCLES(10,0x80048DC4);
	goto ZZ_48B30_294;
ZZ_48B30_27C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 |= 0x1;
	ZZ_CLOCKCYCLES(6,0x80048DC4);
ZZ_48B30_294:
	EMU_Write16(V0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(1,0x80048DC8);
ZZ_48B30_298:
	if (T2)
	{
		V0 = T1 & 0x400;
		ZZ_CLOCKCYCLES(2,0x80048DD8);
		goto ZZ_48B30_2A8;
	}
	V0 = T1 & 0x400;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048DEC);
		goto ZZ_48B30_2BC;
	}
	ZZ_CLOCKCYCLES(4,0x80048DD8);
ZZ_48B30_2A8:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 = EMU_ReadU16(A0 + 28); //+ 0x1C
	EMU_Write16(V1 + 436,V0); //+ 0x1B4
	ZZ_CLOCKCYCLES(5,0x80048DEC);
ZZ_48B30_2BC:
	if (T2)
	{
		V0 = T1 & 0x800;
		ZZ_CLOCKCYCLES(2,0x80048DFC);
		goto ZZ_48B30_2CC;
	}
	V0 = T1 & 0x800;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048E10);
		goto ZZ_48B30_2E0;
	}
	ZZ_CLOCKCYCLES(4,0x80048DFC);
ZZ_48B30_2CC:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 22756); //+ 0x58E4
	V0 = EMU_ReadU16(A0 + 30); //+ 0x1E
	EMU_Write16(V1 + 438,V0); //+ 0x1B6
	ZZ_CLOCKCYCLES(5,0x80048E10);
ZZ_48B30_2E0:
	if (T2)
	{
		V0 = T1 & 0x1000;
		ZZ_CLOCKCYCLES(2,0x80048E20);
		goto ZZ_48B30_2F0;
	}
	V0 = T1 & 0x1000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048E64);
		goto ZZ_48B30_334;
	}
	ZZ_CLOCKCYCLES(4,0x80048E20);
ZZ_48B30_2F0:
	V0 = EMU_ReadU32(A0 + 32); //+ 0x20
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048E48);
		goto ZZ_48B30_318;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 &= 0xFFF7;
	ZZ_CLOCKCYCLES(10,0x80048E60);
	goto ZZ_48B30_330;
ZZ_48B30_318:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 |= 0x8;
	ZZ_CLOCKCYCLES(6,0x80048E60);
ZZ_48B30_330:
	EMU_Write16(V0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(1,0x80048E64);
ZZ_48B30_334:
	if (T2)
	{
		V0 = T1 & 0x2000;
		ZZ_CLOCKCYCLES(2,0x80048E74);
		goto ZZ_48B30_344;
	}
	V0 = T1 & 0x2000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048EB8);
		goto ZZ_48B30_388;
	}
	ZZ_CLOCKCYCLES(4,0x80048E74);
ZZ_48B30_344:
	V0 = EMU_ReadU32(A0 + 36); //+ 0x24
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80048E9C);
		goto ZZ_48B30_36C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 &= 0xFFFD;
	ZZ_CLOCKCYCLES(10,0x80048EB4);
	goto ZZ_48B30_384;
ZZ_48B30_36C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 22756); //+ 0x58E4
	V1 = EMU_ReadU16(V0 + 426); //+ 0x1AA
	V1 |= 0x2;
	ZZ_CLOCKCYCLES(6,0x80048EB4);
ZZ_48B30_384:
	EMU_Write16(V0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES(1,0x80048EB8);
ZZ_48B30_388:
	SP += 16;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x8002FE5C,ZZ_2FDE0_7C);
	ZZ_JUMPREGISTER(0x8004B818,ZZ_4B7D8_40);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80048B30,0x80048B60,ZZ_48B30);
ZZ_MARK_TARGET(0x80048B60,0x80048B8C,ZZ_48B30_30);
ZZ_MARK_TARGET(0x80048BC4,0x80048BF0,ZZ_48B30_94);
ZZ_MARK_TARGET(0x80048BF0,0x80048BFC,ZZ_48B30_C0);
ZZ_MARK_TARGET(0x80048BFC,0x80048C00,ZZ_48B30_CC);
ZZ_MARK_TARGET(0x80048C00,0x80048C10,ZZ_48B30_D0);
ZZ_MARK_TARGET(0x80048C10,0x80048C28,ZZ_48B30_E0);
ZZ_MARK_TARGET(0x80048C28,0x80048C54,ZZ_48B30_F8);
ZZ_MARK_TARGET(0x80048C54,0x80048C5C,ZZ_48B30_124);
ZZ_MARK_TARGET(0x80048C5C,0x80048C64,ZZ_48B30_12C);
ZZ_MARK_TARGET(0x80048C64,0x80048C6C,ZZ_48B30_134);
ZZ_MARK_TARGET(0x80048C6C,0x80048C74,ZZ_48B30_13C);
ZZ_MARK_TARGET(0x80048C74,0x80048C7C,ZZ_48B30_144);
ZZ_MARK_TARGET(0x80048C7C,0x80048C84,ZZ_48B30_14C);
ZZ_MARK_TARGET(0x80048C84,0x80048C8C,ZZ_48B30_154);
ZZ_MARK_TARGET(0x80048C8C,0x80048C94,ZZ_48B30_15C);
ZZ_MARK_TARGET(0x80048C94,0x80048CB8,ZZ_48B30_164);
ZZ_MARK_TARGET(0x80048CB8,0x80048CC4,ZZ_48B30_188);
ZZ_MARK_TARGET(0x80048CC4,0x80048CC8,ZZ_48B30_194);
ZZ_MARK_TARGET(0x80048CC8,0x80048CD8,ZZ_48B30_198);
ZZ_MARK_TARGET(0x80048CD8,0x80048CE8,ZZ_48B30_1A8);
ZZ_MARK_TARGET(0x80048CE8,0x80048CFC,ZZ_48B30_1B8);
ZZ_MARK_TARGET(0x80048CFC,0x80048D0C,ZZ_48B30_1CC);
ZZ_MARK_TARGET(0x80048D0C,0x80048D20,ZZ_48B30_1DC);
ZZ_MARK_TARGET(0x80048D20,0x80048D30,ZZ_48B30_1F0);
ZZ_MARK_TARGET(0x80048D30,0x80048D58,ZZ_48B30_200);
ZZ_MARK_TARGET(0x80048D58,0x80048D70,ZZ_48B30_228);
ZZ_MARK_TARGET(0x80048D70,0x80048D74,ZZ_48B30_240);
ZZ_MARK_TARGET(0x80048D74,0x80048D84,ZZ_48B30_244);
ZZ_MARK_TARGET(0x80048D84,0x80048DAC,ZZ_48B30_254);
ZZ_MARK_TARGET(0x80048DAC,0x80048DC4,ZZ_48B30_27C);
ZZ_MARK_TARGET(0x80048DC4,0x80048DC8,ZZ_48B30_294);
ZZ_MARK_TARGET(0x80048DC8,0x80048DD8,ZZ_48B30_298);
ZZ_MARK_TARGET(0x80048DD8,0x80048DEC,ZZ_48B30_2A8);
ZZ_MARK_TARGET(0x80048DEC,0x80048DFC,ZZ_48B30_2BC);
ZZ_MARK_TARGET(0x80048DFC,0x80048E10,ZZ_48B30_2CC);
ZZ_MARK_TARGET(0x80048E10,0x80048E20,ZZ_48B30_2E0);
ZZ_MARK_TARGET(0x80048E20,0x80048E48,ZZ_48B30_2F0);
ZZ_MARK_TARGET(0x80048E48,0x80048E60,ZZ_48B30_318);
ZZ_MARK_TARGET(0x80048E60,0x80048E64,ZZ_48B30_330);
ZZ_MARK_TARGET(0x80048E64,0x80048E74,ZZ_48B30_334);
ZZ_MARK_TARGET(0x80048E74,0x80048E9C,ZZ_48B30_344);
ZZ_MARK_TARGET(0x80048E9C,0x80048EB4,ZZ_48B30_36C);
ZZ_MARK_TARGET(0x80048EB4,0x80048EB8,ZZ_48B30_384);
ZZ_MARK_TARGET(0x80048EB8,0x80048EC4,ZZ_48B30_388);
