#ifdef ZZ_INCLUDE_CODE
ZZ_4158C:
	if (A0)
	{
		SP -= 16;
		ZZ_CLOCKCYCLES(2,0x8004159C);
		goto ZZ_4158C_10;
	}
	SP -= 16;
	V0 = R0;
	ZZ_CLOCKCYCLES(4,0x80041604);
	goto ZZ_4158C_78;
ZZ_4158C_10:
	A1 = EMU_ReadU8(A0);
	A1 >>= 3;
	EMU_Write32(SP,A1);
	A2 = EMU_ReadS16(A0 + 4); //+ 0x4
	A2 = -A2;
	A2 &= 0xFF;
	A2 = (int32_t)A2 >> 3;
	EMU_Write32(SP + 8,A2); //+ 0x8
	V0 = EMU_ReadU8(A0 + 2); //+ 0x2
	A1 <<= 10;
	V0 >>= 3;
	EMU_Write32(SP + 4,V0); //+ 0x4
	V0 <<= 15;
	V1 = EMU_ReadS16(A0 + 6); //+ 0x6
	A0 = 0xE2000000;
	A1 |= A0;
	V0 |= A1;
	V1 = -V1;
	V1 &= 0xFF;
	V1 = (int32_t)V1 >> 3;
	A0 = V1 << 5;
	V0 |= A0;
	V0 |= A2;
	EMU_Write32(SP + 12,V1); //+ 0xC
	ZZ_CLOCKCYCLES(26,0x80041604);
ZZ_4158C_78:
	SP += 16;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x80041144,ZZ_410AC_98);
	ZZ_JUMPREGISTER(0x80041090,ZZ_41054_3C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004158C,0x8004159C,ZZ_4158C);
ZZ_MARK_TARGET(0x8004159C,0x80041604,ZZ_4158C_10);
ZZ_MARK_TARGET(0x80041604,0x80041610,ZZ_4158C_78);
