#ifdef ZZ_INCLUDE_CODE
ZZ_18964:
	SP -= 64;
	EMU_Write32(SP + 40,S0); //+ 0x28
	S0 = A0;
	EMU_Write32(SP + 56,S4); //+ 0x38
	S4 = A1;
	EMU_Write32(SP + 44,S1); //+ 0x2C
	S1 = A2;
	A0 = S0 + 4;
	EMU_Write32(SP + 60,RA); //+ 0x3C
	EMU_Write32(SP + 52,S3); //+ 0x34
	RA = 0x80018994; //ZZ_18964_30
	EMU_Write32(SP + 48,S2); //+ 0x30
	ZZ_CLOCKCYCLES(12,0x80015A98);
	goto ZZ_15A98;
ZZ_18964_30:
	A0 = S0;
	A2 = S1;
	S2 = V0;
	S3 = EMU_ReadU32(S2 + 16); //+ 0x10
	A3 = 0x1;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x800189B4; //ZZ_18964_50
	A1 = S3;
	ZZ_CLOCKCYCLES(8,0x800180CC);
	goto ZZ_180CC;
ZZ_18964_50:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80018A1C);
		goto ZZ_18964_B8;
	}
	RA = 0x800189C4; //ZZ_18964_60
	ZZ_CLOCKCYCLES(4,0x80016E18);
	goto ZZ_16E18;
ZZ_18964_60:
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	EMU_Write32(SP + 16,V1); //+ 0x10
	A2 = EMU_ReadU32(S1 + 312); //+ 0x138
	A0 = S0;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = 0x80050000;
	V0 += 6004;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30928); //+ 0x78D0
	A1 = S4;
	EMU_Write32(SP + 32,R0); //+ 0x20
	A2 += 2048;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A2 = A2 - V0;
	EMU_Write32(SP + 20,A2); //+ 0x14
	A2 = EMU_ReadU32(S2 + 20); //+ 0x14
	RA = 0x80018A1C; //ZZ_18964_B8
	A3 = S3;
	ZZ_CLOCKCYCLES(22,0x8003460C);
	goto ZZ_3460C;
ZZ_18964_B8:
	RA = EMU_ReadU32(SP + 60); //+ 0x3C
	S4 = EMU_ReadU32(SP + 56); //+ 0x38
	S3 = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x8001E220,ZZ_1DE78_3A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80018964,0x80018994,ZZ_18964);
ZZ_MARK_TARGET(0x80018994,0x800189B4,ZZ_18964_30);
ZZ_MARK_TARGET(0x800189B4,0x800189C4,ZZ_18964_50);
ZZ_MARK_TARGET(0x800189C4,0x80018A1C,ZZ_18964_60);
ZZ_MARK_TARGET(0x80018A1C,0x80018A40,ZZ_18964_B8);
