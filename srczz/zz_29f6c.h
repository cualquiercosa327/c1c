#ifdef ZZ_INCLUDE_CODE
ZZ_29F6C:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = EMU_ReadU32(A1 + 28); //+ 0x1C
	V0 &= 0x2;
	if (!V0)
	{
		T0 = A0;
		ZZ_CLOCKCYCLES(7,0x8002A028);
		goto ZZ_29F6C_BC;
	}
	T0 = A0;
	A3 = EMU_ReadU32(A1 + 4); //+ 0x4
	if (!A3)
	{
		ZZ_CLOCKCYCLES(11,0x8002A004);
		goto ZZ_29F6C_98;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 31008); //+ 0x7920
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 31004); //+ 0x791C
	A0 = T0 + V0;
	V1 = EMU_ReadU16(V1 + 30); //+ 0x1E
	V0 = (int32_t)A0 >> 8;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = V1 << 8;
		ZZ_CLOCKCYCLES(21,0x8002A004);
		goto ZZ_29F6C_98;
	}
	V0 = V1 << 8;
	V0 = A0 - V0;
	V1 = EMU_ReadU32(A1 + 32); //+ 0x20
	V1 &= 0x2;
	if (V1)
	{
		A0 = V0 - 1;
		ZZ_CLOCKCYCLES(27,0x80029FDC);
		goto ZZ_29F6C_70;
	}
	A0 = V0 - 1;
	A0 = -A0;
	ZZ_CLOCKCYCLES(28,0x80029FDC);
ZZ_29F6C_70:
	V0 = EMU_ReadU32(A1 + 16); //+ 0x10
	A2 = EMU_ReadU32(A1 + 8); //+ 0x8
	V1 = A0 + V0;
	V0 = (int32_t)V1 < (int32_t)A2;
	if (!V0)
	{
		A1 = A3;
		ZZ_CLOCKCYCLES(6,0x80029FF8);
		goto ZZ_29F6C_8C;
	}
	A1 = A3;
	A2 = V1;
	ZZ_CLOCKCYCLES(7,0x80029FF8);
ZZ_29F6C_8C:
	A0 = EMU_ReadU32(A3 + 4); //+ 0x4
	A3 = R0;
	ZZ_CLOCKCYCLES(3,0x8002A0AC);
	goto ZZ_29F6C_140;
ZZ_29F6C_98:
	A3 = R0;
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 31008); //+ 0x7920
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31004); //+ 0x791C
	A2 += T0;
	ZZ_CLOCKCYCLES(9,0x8002A0AC);
	goto ZZ_29F6C_140;
ZZ_29F6C_BC:
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	if (!V1)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(4,0x8002A090);
		goto ZZ_29F6C_124;
	}
	A3 = R0;
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 31008); //+ 0x7920
	V0 = A0 - T0;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(10,0x8002A090);
		goto ZZ_29F6C_124;
	}
	V0 = EMU_ReadU32(A1 + 32); //+ 0x20
	V0 &= 0x2;
	if (V0)
	{
		A0 = T0 - A0;
		ZZ_CLOCKCYCLES(15,0x8002A068);
		goto ZZ_29F6C_FC;
	}
	A0 = T0 - A0;
	A0 = -A0;
	ZZ_CLOCKCYCLES(16,0x8002A068);
ZZ_29F6C_FC:
	V0 = EMU_ReadU32(A1 + 16); //+ 0x10
	A2 = EMU_ReadU32(A1 + 8); //+ 0x8
	A0 += V0;
	V0 = (int32_t)A2 < (int32_t)A0;
	if (!V0)
	{
		A1 = V1;
		ZZ_CLOCKCYCLES(6,0x8002A084);
		goto ZZ_29F6C_118;
	}
	A1 = V1;
	A2 = A0;
	ZZ_CLOCKCYCLES(7,0x8002A084);
ZZ_29F6C_118:
	A0 = EMU_ReadU32(V1 + 4); //+ 0x4
	A3 = R0;
	ZZ_CLOCKCYCLES(3,0x8002A0AC);
	goto ZZ_29F6C_140;
ZZ_29F6C_124:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30996); //+ 0x7914
	A2 = 0x80050000;
	A2 = EMU_ReadU32(A2 + 31008); //+ 0x7920
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 31004); //+ 0x791C
	A2 = A2 - T0;
	ZZ_CLOCKCYCLES(7,0x8002A0AC);
ZZ_29F6C_140:
	RA = 0x8002A0B4; //ZZ_29F6C_148
	ZZ_CLOCKCYCLES(2,0x80025A60);
	goto ZZ_25A60;
ZZ_29F6C_148:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8002B288,ZZ_2A82C_A5C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80029F6C,0x80029FDC,ZZ_29F6C);
ZZ_MARK_TARGET(0x80029FDC,0x80029FF8,ZZ_29F6C_70);
ZZ_MARK_TARGET(0x80029FF8,0x8002A004,ZZ_29F6C_8C);
ZZ_MARK_TARGET(0x8002A004,0x8002A028,ZZ_29F6C_98);
ZZ_MARK_TARGET(0x8002A028,0x8002A068,ZZ_29F6C_BC);
ZZ_MARK_TARGET(0x8002A068,0x8002A084,ZZ_29F6C_FC);
ZZ_MARK_TARGET(0x8002A084,0x8002A090,ZZ_29F6C_118);
ZZ_MARK_TARGET(0x8002A090,0x8002A0AC,ZZ_29F6C_124);
ZZ_MARK_TARGET(0x8002A0AC,0x8002A0B4,ZZ_29F6C_140);
ZZ_MARK_TARGET(0x8002A0B4,0x8002A0C4,ZZ_29F6C_148);
