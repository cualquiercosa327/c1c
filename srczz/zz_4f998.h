#ifdef ZZ_INCLUDE_CODE
ZZ_4F998:
	T1 = A0 << 16;
	T0 = T1 >> 24;
	V1 = T0 << 1;
	V1 += T0;
	V1 <<= 2;
	V1 = V1 - T0;
	V0 = A0 & 0xFF;
	V0 <<= 2;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1048); //+ 0x418
	V1 <<= 2;
	V1 = V1 - T0;
	AT = 0x80060000;
	EMU_Write16(AT - 6802,A0); //+ 0xFFFFE56E
	V1 <<= 2;
	T2 = V1 + V0;
	EMU_Write16(T2 + 116,A1); //+ 0x74
	V0 = EMU_ReadU16(T2 + 116); //+ 0x74
	SP -= 8;
	T1 = (int32_t)T1 >> 16;
	V0 = V0 < 128;
	if (V0)
	{
		EMU_Write16(T2 + 118,A2); //+ 0x76
		ZZ_CLOCKCYCLES(24,0x8004FA00);
		goto ZZ_4F998_68;
	}
	EMU_Write16(T2 + 118,A2); //+ 0x76
	V0 = 0x7F;
	EMU_Write16(T2 + 116,V0); //+ 0x74
	ZZ_CLOCKCYCLES(26,0x8004FA00);
ZZ_4F998_68:
	V0 = EMU_ReadU16(T2 + 118); //+ 0x76
	V0 = V0 < 128;
	if (V0)
	{
		V1 = 0x1;
		ZZ_CLOCKCYCLES(5,0x8004FA1C);
		goto ZZ_4F998_84;
	}
	V1 = 0x1;
	V0 = 0x7F;
	EMU_Write16(T2 + 118,V0); //+ 0x76
	ZZ_CLOCKCYCLES(7,0x8004FA1C);
ZZ_4F998_84:
	V0 = A3 << 16;
	V0 = (int32_t)V0 >> 16;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(4,0x8004FF44);
		goto ZZ_4F998_5AC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 7360); //+ 0xFFFFE340
	if (!V0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(9,0x8004FF44);
		goto ZZ_4F998_5AC;
	}
	T3 = R0;
	T1 &= 0xFFFF;
	T4 = 0x7F;
	T5 = 0x3F01;
	T0 = 0x3F;
	T6 = 0x80060000;
	T6 -= 6776;
	T7 = T6 + 2;
	V0 = T3 << 16;
	ZZ_CLOCKCYCLES(17,0x8004FA60);
ZZ_4F998_C8:
	V0 = (int32_t)V0 >> 16;
	V1 = V0 << 1;
	V1 += V0;
	V1 <<= 2;
	V1 += V0;
	A1 = V1 << 2;
	AT = 0x80050000;
	AT += A1;
	V0 = EMU_ReadU16(AT + 29370); //+ 0x72BA
	if (V0 != T1)
	{
		V0 = T3 + 1;
		ZZ_CLOCKCYCLES(12,0x8004FF24);
		goto ZZ_4F998_58C;
	}
	V0 = T3 + 1;
	V0 = EMU_ReadU8(T2 + 18); //+ 0x12
	AT = 0x80050000;
	AT += A1;
	V1 = EMU_ReadS16(AT + 29364); //+ 0x72B4
	V0 <<= 1;
	V0 += T2;
	V0 = EMU_ReadS16(V0 + 78); //+ 0x4E
	EMU_SMultiply(V1,V0);
	V1 = LO;
	EMU_SDivide(V1,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(27,0x8004FAD0);
		goto ZZ_4F998_138;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(28,0x8004FAD0);
ZZ_4F998_138:
	AT = -1;
	if (T4 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FAE8);
		goto ZZ_4F998_150;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FAE8);
		goto ZZ_4F998_150;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FAE8);
ZZ_4F998_150:
	V1 = LO;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12324); //+ 0xFFFFCFDC
	A0 = EMU_ReadU8(V0 + 24); //+ 0x18
	V0 = V1 << 14;
	V0 = V0 - V1;
	EMU_SMultiply(A0,V0);
	A0 = LO;
	EMU_SDivide(A0,T5);
	if (T5)
	{
		ZZ_CLOCKCYCLES(14,0x8004FB24);
		goto ZZ_4F998_18C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x8004FB24);
ZZ_4F998_18C:
	AT = -1;
	if (T5 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FB3C);
		goto ZZ_4F998_1A4;
	}
	AT = 0x80000000;
	if (A0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FB3C);
		goto ZZ_4F998_1A4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FB3C);
ZZ_4F998_1A4:
	A0 = LO;
	AT = 0x80050000;
	AT += A1;
	V1 = EMU_ReadS16(AT + 29374); //+ 0x72BE
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12340); //+ 0xFFFFCFCC
	V1 <<= 4;
	V0 += V1;
	V0 = EMU_ReadU8(V0 + 1); //+ 0x1
	EMU_SMultiply(A0,V0);
	AT = 0x80050000;
	AT += A1;
	A1 = EMU_ReadS16(AT + 29376); //+ 0x72C0
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 12316); //+ 0xFFFFCFE4
	V1 += A1;
	V1 <<= 5;
	V1 += A2;
	V0 = EMU_ReadU8(V1 + 2); //+ 0x2
	A0 = LO;
	EMU_SMultiply(A0,V0);
	V1 = LO;
	EMU_UDivide(V1,T5);
	if (T5)
	{
		ZZ_CLOCKCYCLES(30,0x8004FBB8);
		goto ZZ_4F998_220;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(31,0x8004FBB8);
ZZ_4F998_220:
	V1 = LO;
	V0 = EMU_ReadU16(T2 + 116); //+ 0x74
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_UDivide(V0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(10,0x8004FBE4);
		goto ZZ_4F998_24C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8004FBE4);
ZZ_4F998_24C:
	A3 = LO;
	V0 = EMU_ReadU16(T2 + 118); //+ 0x76
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_UDivide(V0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(10,0x8004FC10);
		goto ZZ_4F998_278;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8004FC10);
ZZ_4F998_278:
	A0 = LO;
	A1 <<= 5;
	A1 += A2;
	V1 = EMU_ReadU8(A1 + 3); //+ 0x3
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A0,V1);
		ZZ_CLOCKCYCLES(8,0x8004FC5C);
		goto ZZ_4F998_2C4;
	}
	EMU_SMultiply(A0,V1);
	V0 = LO;
	EMU_UDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(14,0x8004FC4C);
		goto ZZ_4F998_2B4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x8004FC4C);
ZZ_4F998_2B4:
	V0 = LO;
	A1 = A3;
	A3 = V0;
	ZZ_CLOCKCYCLES(4,0x8004FC8C);
	goto ZZ_4F998_2F4;
ZZ_4F998_2C4:
	V0 = T4 - V1;
	EMU_SMultiply(A3,V0);
	V0 = LO;
	EMU_UDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(8,0x8004FC80);
		goto ZZ_4F998_2E8;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x8004FC80);
ZZ_4F998_2E8:
	V0 = LO;
	A3 = A0;
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x8004FC8C);
ZZ_4F998_2F4:
	V1 = T3 << 16;
	V1 = (int32_t)V1 >> 16;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	AT = 0x80050000;
	AT += V0;
	V0 = EMU_ReadS16(AT + 29374); //+ 0x72BE
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12340); //+ 0xFFFFCFCC
	V0 <<= 4;
	V0 += V1;
	A0 = EMU_ReadU8(V0 + 4); //+ 0x4
	V0 = A0 < 64;
	if (!V0)
	{
		V0 = A3 & 0xFFFF;
		ZZ_CLOCKCYCLES(19,0x8004FD1C);
		goto ZZ_4F998_384;
	}
	V0 = A3 & 0xFFFF;
	EMU_SMultiply(V0,A0);
	V0 = LO;
	EMU_SDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(26,0x8004FCF8);
		goto ZZ_4F998_360;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(27,0x8004FCF8);
ZZ_4F998_360:
	AT = -1;
	if (T0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FD10);
		goto ZZ_4F998_378;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FD10);
		goto ZZ_4F998_378;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FD10);
ZZ_4F998_378:
	V0 = LO;
	A3 = V0;
	ZZ_CLOCKCYCLES(3,0x8004FD68);
	goto ZZ_4F998_3D0;
ZZ_4F998_384:
	V1 = A1 & 0xFFFF;
	V0 = T4 - A0;
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_SDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(9,0x8004FD44);
		goto ZZ_4F998_3AC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x8004FD44);
ZZ_4F998_3AC:
	AT = -1;
	if (T0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FD5C);
		goto ZZ_4F998_3C4;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FD5C);
		goto ZZ_4F998_3C4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FD5C);
ZZ_4F998_3C4:
	V0 = LO;
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x8004FD68);
ZZ_4F998_3D0:
	V0 = T3 << 16;
	V0 = (int32_t)V0 >> 16;
	V1 = V0 << 1;
	V1 += V0;
	V1 <<= 2;
	V1 += V0;
	V1 <<= 2;
	AT = 0x80050000;
	AT += V1;
	A0 = EMU_ReadU8(AT + 29366); //+ 0x72B6
	V0 = A0 < 64;
	if (!V0)
	{
		V0 = A3 & 0xFFFF;
		ZZ_CLOCKCYCLES(14,0x8004FDE4);
		goto ZZ_4F998_44C;
	}
	V0 = A3 & 0xFFFF;
	EMU_SMultiply(V0,A0);
	V0 = LO;
	EMU_SDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(21,0x8004FDC0);
		goto ZZ_4F998_428;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(22,0x8004FDC0);
ZZ_4F998_428:
	AT = -1;
	if (T0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FDD8);
		goto ZZ_4F998_440;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FDD8);
		goto ZZ_4F998_440;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FDD8);
ZZ_4F998_440:
	V0 = LO;
	A3 = V0;
	ZZ_CLOCKCYCLES(3,0x8004FE30);
	goto ZZ_4F998_498;
ZZ_4F998_44C:
	V1 = A1 & 0xFFFF;
	V0 = T4 - A0;
	EMU_SMultiply(V1,V0);
	V0 = LO;
	EMU_SDivide(V0,T0);
	if (T0)
	{
		ZZ_CLOCKCYCLES(9,0x8004FE0C);
		goto ZZ_4F998_474;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(10,0x8004FE0C);
ZZ_4F998_474:
	AT = -1;
	if (T0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FE24);
		goto ZZ_4F998_48C;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FE24);
		goto ZZ_4F998_48C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FE24);
ZZ_4F998_48C:
	V0 = LO;
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x8004FE30);
ZZ_4F998_498:
	V1 = 0x80060000;
	V1 = EMU_ReadS16(V1 - 31752); //+ 0xFFFF83F8
	V0 = 0x1;
	if (V1 != V0)
	{
		V0 = A1 & 0xFFFF;
		ZZ_CLOCKCYCLES(5,0x8004FE64);
		goto ZZ_4F998_4CC;
	}
	V0 = A1 & 0xFFFF;
	V1 = A3 & 0xFFFF;
	V0 = V0 < V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8004FE5C);
		goto ZZ_4F998_4C4;
	}
	A1 = A3;
	ZZ_CLOCKCYCLES(11,0x8004FE60);
	goto ZZ_4F998_4C8;
ZZ_4F998_4C4:
	A3 = A1;
	ZZ_CLOCKCYCLES(1,0x8004FE60);
ZZ_4F998_4C8:
	V0 = A1 & 0xFFFF;
	ZZ_CLOCKCYCLES(1,0x8004FE64);
ZZ_4F998_4CC:
	EMU_SMultiply(V0,V0);
	A2 = LO;
	V1 = 0x3FFF;
	EMU_SDivide(A2,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(7,0x8004FE84);
		goto ZZ_4F998_4EC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(8,0x8004FE84);
ZZ_4F998_4EC:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FE9C);
		goto ZZ_4F998_504;
	}
	AT = 0x80000000;
	if (A2 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FE9C);
		goto ZZ_4F998_504;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FE9C);
ZZ_4F998_504:
	A2 = LO;
	V0 = A3 & 0xFFFF;
	EMU_SMultiply(V0,V0);
	A1 = LO;
	EMU_SDivide(A1,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(10,0x8004FEC8);
		goto ZZ_4F998_530;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x8004FEC8);
ZZ_4F998_530:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8004FEE0);
		goto ZZ_4F998_548;
	}
	AT = 0x80000000;
	if (A1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8004FEE0);
		goto ZZ_4F998_548;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8004FEE0);
ZZ_4F998_548:
	A1 = LO;
	A0 = T3 << 16;
	A0 = (int32_t)A0 >> 16;
	V1 = A0 << 4;
	V0 = V1 + T6;
	V1 += T7;
	EMU_Write16(V0,A2);
	EMU_Write16(V1,A1);
	AT = 0x80050000;
	AT += A0;
	V0 = EMU_ReadU8(AT + 30628); //+ 0x77A4
	V0 |= 0x3;
	AT = 0x80050000;
	AT += A0;
	EMU_Write8(AT + 30628,V0); //+ 0x77A4
	V0 = T3 + 1;
	ZZ_CLOCKCYCLES(17,0x8004FF24);
ZZ_4F998_58C:
	T3 = V0;
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 7360); //+ 0xFFFFE340
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = T3 << 16;
		ZZ_CLOCKCYCLES(8,0x8004FA60);
		goto ZZ_4F998_C8;
	}
	V0 = T3 << 16;
	ZZ_CLOCKCYCLES(8,0x8004FF44);
ZZ_4F998_5AC:
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 - 6802); //+ 0xFFFFE56E
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 8;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80049290,ZZ_49268_28);
	ZZ_JUMPREGISTER(0x8004CD10,ZZ_4CCDC_34);
	ZZ_JUMPREGISTER(0x8004BFB0,ZZ_4BDB4_1FC);
	ZZ_JUMPREGISTER(0x8004BEB0,ZZ_4BDB4_FC);
	ZZ_JUMPREGISTER(0x8004BF34,ZZ_4BDB4_180);
	ZZ_JUMPREGISTER(0x8004C238,ZZ_4C074_1C4);
	ZZ_JUMPREGISTER(0x8004C20C,ZZ_4C074_198);
	ZZ_JUMPREGISTER(0x8004BF90,ZZ_4BDB4_1DC);
	ZZ_JUMPREGISTER(0x8004B79C,ZZ_4B6D8_C4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004F998,0x8004FA00,ZZ_4F998);
ZZ_MARK_TARGET(0x8004FA00,0x8004FA1C,ZZ_4F998_68);
ZZ_MARK_TARGET(0x8004FA1C,0x8004FA60,ZZ_4F998_84);
ZZ_MARK_TARGET(0x8004FA60,0x8004FAD0,ZZ_4F998_C8);
ZZ_MARK_TARGET(0x8004FAD0,0x8004FAE8,ZZ_4F998_138);
ZZ_MARK_TARGET(0x8004FAE8,0x8004FB24,ZZ_4F998_150);
ZZ_MARK_TARGET(0x8004FB24,0x8004FB3C,ZZ_4F998_18C);
ZZ_MARK_TARGET(0x8004FB3C,0x8004FBB8,ZZ_4F998_1A4);
ZZ_MARK_TARGET(0x8004FBB8,0x8004FBE4,ZZ_4F998_220);
ZZ_MARK_TARGET(0x8004FBE4,0x8004FC10,ZZ_4F998_24C);
ZZ_MARK_TARGET(0x8004FC10,0x8004FC4C,ZZ_4F998_278);
ZZ_MARK_TARGET(0x8004FC4C,0x8004FC5C,ZZ_4F998_2B4);
ZZ_MARK_TARGET(0x8004FC5C,0x8004FC80,ZZ_4F998_2C4);
ZZ_MARK_TARGET(0x8004FC80,0x8004FC8C,ZZ_4F998_2E8);
ZZ_MARK_TARGET(0x8004FC8C,0x8004FCF8,ZZ_4F998_2F4);
ZZ_MARK_TARGET(0x8004FCF8,0x8004FD10,ZZ_4F998_360);
ZZ_MARK_TARGET(0x8004FD10,0x8004FD1C,ZZ_4F998_378);
ZZ_MARK_TARGET(0x8004FD1C,0x8004FD44,ZZ_4F998_384);
ZZ_MARK_TARGET(0x8004FD44,0x8004FD5C,ZZ_4F998_3AC);
ZZ_MARK_TARGET(0x8004FD5C,0x8004FD68,ZZ_4F998_3C4);
ZZ_MARK_TARGET(0x8004FD68,0x8004FDC0,ZZ_4F998_3D0);
ZZ_MARK_TARGET(0x8004FDC0,0x8004FDD8,ZZ_4F998_428);
ZZ_MARK_TARGET(0x8004FDD8,0x8004FDE4,ZZ_4F998_440);
ZZ_MARK_TARGET(0x8004FDE4,0x8004FE0C,ZZ_4F998_44C);
ZZ_MARK_TARGET(0x8004FE0C,0x8004FE24,ZZ_4F998_474);
ZZ_MARK_TARGET(0x8004FE24,0x8004FE30,ZZ_4F998_48C);
ZZ_MARK_TARGET(0x8004FE30,0x8004FE5C,ZZ_4F998_498);
ZZ_MARK_TARGET(0x8004FE5C,0x8004FE60,ZZ_4F998_4C4);
ZZ_MARK_TARGET(0x8004FE60,0x8004FE64,ZZ_4F998_4C8);
ZZ_MARK_TARGET(0x8004FE64,0x8004FE84,ZZ_4F998_4CC);
ZZ_MARK_TARGET(0x8004FE84,0x8004FE9C,ZZ_4F998_4EC);
ZZ_MARK_TARGET(0x8004FE9C,0x8004FEC8,ZZ_4F998_504);
ZZ_MARK_TARGET(0x8004FEC8,0x8004FEE0,ZZ_4F998_530);
ZZ_MARK_TARGET(0x8004FEE0,0x8004FF24,ZZ_4F998_548);
ZZ_MARK_TARGET(0x8004FF24,0x8004FF44,ZZ_4F998_58C);
ZZ_MARK_TARGET(0x8004FF44,0x8004FF54,ZZ_4F998_5AC);
