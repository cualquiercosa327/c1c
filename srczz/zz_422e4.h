#ifdef ZZ_INCLUDE_CODE
ZZ_422E4:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(V0);
	S0 = 0x1000000;
	V0 &= S0;
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(10,0x800425CC);
		goto ZZ_422E4_2E8;
	}
	V0 = 0x1;
	RA = 0x80042314; //ZZ_422E4_30
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x8003E870);
	goto ZZ_3E870;
ZZ_422E4_30:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 19312); //+ 0x4B70
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	AT = 0x80050000;
	EMU_Write32(AT + 19324,V0); //+ 0x4B7C
	if (A0 == V1)
	{
		ZZ_CLOCKCYCLES(8,0x80042520);
		goto ZZ_422E4_23C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	V0 = EMU_ReadU32(V0);
	V0 &= S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x80042520);
		goto ZZ_422E4_23C;
	}
	S0 = 0x80050000;
	S0 += 19296;
	ZZ_CLOCKCYCLES(18,0x8004235C);
ZZ_422E4_78:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19316); //+ 0x4B74
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19312); //+ 0x4B70
	V0 += 1;
	V0 &= 0x3F;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(8,0x8004239C);
		goto ZZ_422E4_B8;
	}
	V0 = 0x80050000;
	V0 += 19064;
	V0 = EMU_ReadU32(V0);
	if (V0)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(14,0x8004239C);
		goto ZZ_422E4_B8;
	}
	A0 = 0x2;
	RA = 0x8004239C; //ZZ_422E4_B8
	A1 = R0;
	ZZ_CLOCKCYCLES(16,0x8003E754);
	goto ZZ_3E754;
ZZ_422E4_B8:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 19264); //+ 0x4B40
	V0 = EMU_ReadU32(A0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(8,0x800423D4);
		goto ZZ_422E4_F0;
	}
	V1 = A0;
	A0 = 0x4000000;
	ZZ_CLOCKCYCLES(9,0x800423C0);
ZZ_422E4_DC:
	V0 = EMU_ReadU32(V1);
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800423C0);
		goto ZZ_422E4_DC;
	}
	ZZ_CLOCKCYCLES(5,0x800423D4);
ZZ_422E4_F0:
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 19316); //+ 0x4B74
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	V1 = A1 << 1;
	V1 += A1;
	AT = 0x80060000;
	AT += V0;
	A0 = EMU_ReadU32(AT - 6320); //+ 0xFFFFE750
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 19316); //+ 0x4B74
	V1 <<= 5;
	V0 = A1 << 1;
	V0 += A1;
	V0 <<= 5;
	AT = 0x80060000;
	AT += V0;
	A1 = EMU_ReadU32(AT - 6316); //+ 0xFFFFE754
	AT = 0x80060000;
	AT += V1;
	V0 = EMU_ReadU32(AT - 6324); //+ 0xFFFFE74C
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80042444; //ZZ_422E4_160
	ZZ_CLOCKCYCLES_JR(28);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004243C)
	ZZ_JUMPREGISTER_END();
ZZ_422E4_160:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 6324); //+ 0xFFFFE74C
	EMU_Write32(S0,V0);
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 6320); //+ 0xFFFFE750
	EMU_Write32(S0 + 4,V0); //+ 0x4
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 6316); //+ 0xFFFFE754
	EMU_Write32(S0 + 8,V0); //+ 0x8
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19316); //+ 0x4B74
	V0 += 1;
	V0 &= 0x3F;
	AT = 0x80050000;
	EMU_Write32(AT + 19316,V0); //+ 0x4B74
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19312); //+ 0x4B70
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19316); //+ 0x4B74
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(47,0x80042520);
		goto ZZ_422E4_23C;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(55,0x8004235C);
		goto ZZ_422E4_78;
	}
	ZZ_CLOCKCYCLES(55,0x80042520);
ZZ_422E4_23C:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 19324); //+ 0x4B7C
	RA = 0x80042530; //ZZ_422E4_24C
	ZZ_CLOCKCYCLES(4,0x8003E870);
	goto ZZ_3E870;
ZZ_422E4_24C:
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19312); //+ 0x4B70
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19316); //+ 0x4B74
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(7,0x800425B0);
		goto ZZ_422E4_2CC;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19276); //+ 0x4B4C
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x800425B0);
		goto ZZ_422E4_2CC;
	}
	V1 = 0x80050000;
	V1 += 19060;
	V0 = EMU_ReadU32(V1);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x800425B0);
		goto ZZ_422E4_2CC;
	}
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19064); //+ 0x4A78
	if (!V0)
	{
		ZZ_CLOCKCYCLES(26,0x800425B0);
		goto ZZ_422E4_2CC;
	}
	EMU_Write32(V1,R0);
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19064); //+ 0x4A78
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800425B0; //ZZ_422E4_2CC
	ZZ_CLOCKCYCLES_JR(32);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800425A8)
	ZZ_JUMPREGISTER_END();
ZZ_422E4_2CC:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 19312); //+ 0x4B70
	V1 = 0x80050000;
	V1 = EMU_ReadU32(V1 + 19316); //+ 0x4B74
	V0 = V0 - V1;
	V0 &= 0x3F;
	ZZ_CLOCKCYCLES(7,0x800425CC);
ZZ_422E4_2E8:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x800427FC,ZZ_4271C_E0);
	ZZ_JUMPREGISTER(0x80042744,ZZ_4271C_28);
	ZZ_JUMPREGISTER(0x8004204C,ZZ_42000_4C);
	ZZ_JUMPREGISTER(0x800422A8,ZZ_42000_2A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800422E4,0x80042314,ZZ_422E4);
ZZ_MARK_TARGET(0x80042314,0x8004235C,ZZ_422E4_30);
ZZ_MARK_TARGET(0x8004235C,0x8004239C,ZZ_422E4_78);
ZZ_MARK_TARGET(0x8004239C,0x800423C0,ZZ_422E4_B8);
ZZ_MARK_TARGET(0x800423C0,0x800423D4,ZZ_422E4_DC);
ZZ_MARK_TARGET(0x800423D4,0x80042444,ZZ_422E4_F0);
ZZ_MARK_TARGET(0x80042444,0x80042520,ZZ_422E4_160);
ZZ_MARK_TARGET(0x80042520,0x80042530,ZZ_422E4_23C);
ZZ_MARK_TARGET(0x80042530,0x800425B0,ZZ_422E4_24C);
ZZ_MARK_TARGET(0x800425B0,0x800425CC,ZZ_422E4_2CC);
ZZ_MARK_TARGET(0x800425CC,0x800425E0,ZZ_422E4_2E8);
