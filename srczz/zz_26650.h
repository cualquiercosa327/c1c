#ifdef ZZ_INCLUDE_CODE
ZZ_26650:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 15044); //+ 0xFFFFC53C
	SP -= 72;
	EMU_Write32(SP + 56,S4); //+ 0x38
	S4 = A0;
	EMU_Write32(SP + 64,RA); //+ 0x40
	EMU_Write32(SP + 60,S5); //+ 0x3C
	EMU_Write32(SP + 52,S3); //+ 0x34
	EMU_Write32(SP + 48,S2); //+ 0x30
	EMU_Write32(SP + 44,S1); //+ 0x2C
	EMU_Write32(SP + 40,S0); //+ 0x28
	AT = 0x80060000;
	EMU_Write32(AT + 6524,R0); //+ 0x197C
	V1 = EMU_ReadU32(S4 + 48); //+ 0x30
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	if (V1 == V0)
	{
		V0 = -2;
		ZZ_CLOCKCYCLES(18,0x800266AC);
		goto ZZ_26650_5C;
	}
	V0 = -2;
	EMU_Write32(GP + 792,V0); //+ 0x318
	V0 = 0x1;
	EMU_Write32(GP + 164,V0); //+ 0xA4
	ZZ_CLOCKCYCLES(23,0x80026A18);
	goto ZZ_26650_3C8;
ZZ_26650_5C:
	A0 = R0;
	A1 = 0x1300;
	A2 = R0;
	A3 = R0;
	RA = 0x800266C4; //ZZ_26650_74
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(6,0x80025134);
	goto ZZ_25134;
ZZ_26650_74:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80026760);
		goto ZZ_26650_110;
	}
	S3 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = -1;
	AT = 0x80050000;
	EMU_Write32(AT + 31000,V0); //+ 0x7918
	V0 = EMU_ReadU32(S3 + 528); //+ 0x210
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(13,0x80026754);
		goto ZZ_26650_104;
	}
	S1 = R0;
	S5 = -4;
	S2 = 0x214;
	ZZ_CLOCKCYCLES(15,0x80026700);
ZZ_26650_B0:
	RA = 0x80026708; //ZZ_26650_B8
	A0 = S3 + S2;
	ZZ_CLOCKCYCLES(2,0x80015A98);
	goto ZZ_15A98;
ZZ_26650_B8:
	A0 = V0;
	S0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0 + 732); //+ 0x2DC
	V0 &= 0x1;
	if (!V0)
	{
		S2 += 4;
		ZZ_CLOCKCYCLES(8,0x80026740);
		goto ZZ_26650_F0;
	}
	S2 += 4;
	RA = 0x80026730; //ZZ_26650_E0
	ZZ_CLOCKCYCLES(10,0x8001D200);
	goto ZZ_1D200;
ZZ_26650_E0:
	V0 = EMU_ReadU32(S0 + 732); //+ 0x2DC
	V0 &= S5;
	EMU_Write32(S0 + 732,V0); //+ 0x2DC
	ZZ_CLOCKCYCLES(4,0x80026740);
ZZ_26650_F0:
	V0 = EMU_ReadU32(S3 + 528); //+ 0x210
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80026700);
		goto ZZ_26650_B0;
	}
	ZZ_CLOCKCYCLES(5,0x80026754);
ZZ_26650_104:
	A0 = S3 + 564;
	RA = 0x80026760; //ZZ_26650_110
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x8001495C);
	goto ZZ_1495C;
ZZ_26650_110:
	A0 = 0x80050000;
	A0 = EMU_ReadU32(A0 + 30928); //+ 0x78D0
	AT = 0x80050000;
	EMU_Write32(AT + 30996,R0); //+ 0x7914
	RA = 0x80026778; //ZZ_26650_128
	ZZ_CLOCKCYCLES(6,0x80042FAC);
	goto ZZ_42FAC;
ZZ_26650_128:
	V0 = EMU_ReadU32(GP + 164); //+ 0xA4
	if (!V0)
	{
		V1 = S4;
		ZZ_CLOCKCYCLES(4,0x80026838);
		goto ZZ_26650_1E8;
	}
	V1 = S4;
	S1 = R0;
	A0 = 0x80060000;
	A0 -= 168;
	ZZ_CLOCKCYCLES(7,0x80026794);
ZZ_26650_144:
	V0 = EMU_ReadU32(V1 + 56); //+ 0x38
	V1 += 4;
	S1 += 1;
	EMU_Write32(A0,V0);
	V0 = S1 < 304;
	if (V0)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(7,0x80026794);
		goto ZZ_26650_144;
	}
	A0 += 4;
	A2 = 0x80060000;
	A2 += 6560;
	V1 = EMU_ReadU32(A2);
	V0 = -1;
	if (V1 == V0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(13,0x80026810);
		goto ZZ_26650_1C0;
	}
	S1 = R0;
	V1 >>= 8;
	A1 = 0x80060000;
	A1 -= 168;
	V1 <<= 2;
	V1 += A1;
	V0 = EMU_ReadU32(V1);
	A0 = -3;
	V0 &= A0;
	EMU_Write32(V1,V0);
	V0 = EMU_ReadU32(A2);
	V0 >>= 8;
	V0 <<= 2;
	V0 += A1;
	V1 = EMU_ReadU32(V0);
	V1 |= 0x8;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(31,0x80026810);
ZZ_26650_1C0:
	A0 = -2;
	V1 = 0x80060000;
	V1 -= 168;
	ZZ_CLOCKCYCLES(3,0x8002681C);
ZZ_26650_1CC:
	V0 = EMU_ReadU32(V1);
	S1 += 1;
	V0 &= A0;
	EMU_Write32(V1,V0);
	V0 = (int32_t)S1 < 304;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(7,0x8002681C);
		goto ZZ_26650_1CC;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(7,0x80026838);
ZZ_26650_1E8:
	A0 = SP + 24;
	A1 = 0x1;
	V0 = EMU_ReadU32(S4 + 36); //+ 0x24
	A2 = 0x1;
	RA = 0x80026850; //ZZ_26650_200
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(6,0x80015118);
	goto ZZ_15118;
ZZ_26650_200:
	A0 = V0;
	V1 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S4 + 40); //+ 0x28
	A2 = EMU_ReadU32(S4 + 44); //+ 0x2C
	V1 = EMU_ReadU32(V1 + 516); //+ 0x204
	A3 = EMU_ReadU32(GP + 164); //+ 0xA4
	V0 += V1;
	V0 <<= 2;
	V0 += A0;
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	RA = 0x80026880; //ZZ_26650_230
	A3 = A3 < 1;
	ZZ_CLOCKCYCLES(12,0x80025A60);
	goto ZZ_25A60;
ZZ_26650_230:
	A0 = SP + 24;
	RA = 0x8002688C; //ZZ_26650_23C
	A1 = 0x1;
	ZZ_CLOCKCYCLES(3,0x80015458);
	goto ZZ_15458;
ZZ_26650_23C:
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26292); //+ 0x66B4
	if (V0)
	{
		A3 = S4;
		ZZ_CLOCKCYCLES(5,0x800268D0);
		goto ZZ_26650_280;
	}
	A3 = S4;
	A0 = 0x80060000;
	A0 += 3560;
	A1 = R0;
	A2 = R0;
	A3 = R0;
	V0 = 0x1;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x800268C4; //ZZ_26650_274
	EMU_Write32(SP + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(14,0x8001C6C8);
  EMU_Invoke(0x8001C6C8,0);
ZZ_26650_274:
	A3 = S4;
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 26292); //+ 0x66B4
	ZZ_CLOCKCYCLES(3,0x800268D0);
ZZ_26650_280:
	T0 = S4 + 32;
	A2 = V0 + 128;
	ZZ_CLOCKCYCLES(2,0x800268D8);
ZZ_26650_288:
	V0 = EMU_ReadU32(A3);
	V1 = EMU_ReadU32(A3 + 4); //+ 0x4
	A0 = EMU_ReadU32(A3 + 8); //+ 0x8
	A1 = EMU_ReadU32(A3 + 12); //+ 0xC
	EMU_Write32(A2,V0);
	EMU_Write32(A2 + 4,V1); //+ 0x4
	EMU_Write32(A2 + 8,A0); //+ 0x8
	EMU_Write32(A2 + 12,A1); //+ 0xC
	A3 += 16;
	if (A3 != T0)
	{
		A2 += 16;
		ZZ_CLOCKCYCLES(11,0x800268D8);
		goto ZZ_26650_288;
	}
	A2 += 16;
	V0 = EMU_ReadU32(A3);
	EMU_Write32(A2,V0);
	A1 = 0x80050000;
	A1 = EMU_ReadU32(A1 + 26292); //+ 0x66B4
	V0 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 30996); //+ 0x7914
	V1 = EMU_ReadU32(A1 + 200); //+ 0xC8
	A0 = EMU_ReadU32(A1 + 144); //+ 0x90
	A2 = EMU_ReadU32(A1 + 120); //+ 0x78
	EMU_Write32(A1 + 40,V0); //+ 0x28
	EMU_Write32(A1 + 304,R0); //+ 0x130
	EMU_Write32(A1 + 164,R0); //+ 0xA4
	EMU_Write32(A1 + 168,R0); //+ 0xA8
	EMU_Write32(A1 + 172,R0); //+ 0xAC
	EMU_Write32(A1 + 292,R0); //+ 0x124
	EMU_Write32(A1 + 200,V1); //+ 0xC8
	if (!A2)
	{
		EMU_Write32(A1 + 180,A0); //+ 0xB4
		ZZ_CLOCKCYCLES(30,0x80026958);
		goto ZZ_26650_308;
	}
	EMU_Write32(A1 + 180,A0); //+ 0xB4
	EMU_Write32(A2 + 120,R0); //+ 0x78
	EMU_Write32(A1 + 120,R0); //+ 0x78
	ZZ_CLOCKCYCLES(32,0x80026958);
ZZ_26650_308:
	V1 = EMU_ReadU32(GP + 164); //+ 0xA4
	V0 = 0xFFFF;
	AT = 0x80050000;
	EMU_Write32(AT + 31072,R0); //+ 0x7960
	AT = 0x80060000;
	EMU_Write32(AT + 6292,R0); //+ 0x1894
	AT = 0x80050000;
	EMU_Write32(AT + 26344,R0); //+ 0x66E8
	AT = 0x80060000;
	EMU_Write32(AT + 6300,V0); //+ 0x189C
	if (V1)
	{
		ZZ_CLOCKCYCLES(12,0x800269D8);
		goto ZZ_26650_388;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6304); //+ 0x18A0
	V0 += 256;
	AT = 0x80060000;
	EMU_Write32(AT + 6304,V0); //+ 0x18A0
	V0 = EMU_ReadU32(S4 + 52); //+ 0x34
	if (!V0)
	{
		ZZ_CLOCKCYCLES(22,0x800269C0);
		goto ZZ_26650_370;
	}
	AT = 0x80060000;
	EMU_Write32(AT + 6716,R0); //+ 0x1A3C
	ZZ_CLOCKCYCLES(26,0x800269D8);
	goto ZZ_26650_388;
ZZ_26650_370:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 6716); //+ 0x1A3C
	V0 += 256;
	AT = 0x80060000;
	EMU_Write32(AT + 6716,V0); //+ 0x1A3C
	ZZ_CLOCKCYCLES(6,0x800269D8);
ZZ_26650_388:
	RA = 0x800269E0; //ZZ_26650_390
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x800262DC);
	goto ZZ_262DC;
ZZ_26650_390:
	V0 = EMU_ReadU32(GP + 164); //+ 0xA4
	if (!V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(4,0x80026A18);
		goto ZZ_26650_3C8;
	}
	V0 = -1;
	A0 = EMU_ReadU32(S4 + 1272); //+ 0x4F8
	A1 = 0x80060000;
	A1 += 6532;
	EMU_Write32(A1,A0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 6560); //+ 0x19A0
	EMU_Write32(GP + 164,R0); //+ 0xA4
	if (V1 == V0)
	{
		V0 = A0 - 256;
		ZZ_CLOCKCYCLES(13,0x80026A18);
		goto ZZ_26650_3C8;
	}
	V0 = A0 - 256;
	EMU_Write32(A1,V0);
	ZZ_CLOCKCYCLES(14,0x80026A18);
ZZ_26650_3C8:
	RA = EMU_ReadU32(SP + 64); //+ 0x40
	S5 = EMU_ReadU32(SP + 60); //+ 0x3C
	S4 = EMU_ReadU32(SP + 56); //+ 0x38
	S3 = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	//ZZ_JUMPREGISTER(0x80022690,ZZ_201DC_24B4);
	ZZ_JUMPREGISTER(0x8002EAA8,ZZ_2E98C_11C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80026650,0x800266AC,ZZ_26650);
ZZ_MARK_TARGET(0x800266AC,0x800266C4,ZZ_26650_5C);
ZZ_MARK_TARGET(0x800266C4,0x80026700,ZZ_26650_74);
ZZ_MARK_TARGET(0x80026700,0x80026708,ZZ_26650_B0);
ZZ_MARK_TARGET(0x80026708,0x80026730,ZZ_26650_B8);
ZZ_MARK_TARGET(0x80026730,0x80026740,ZZ_26650_E0);
ZZ_MARK_TARGET(0x80026740,0x80026754,ZZ_26650_F0);
ZZ_MARK_TARGET(0x80026754,0x80026760,ZZ_26650_104);
ZZ_MARK_TARGET(0x80026760,0x80026778,ZZ_26650_110);
ZZ_MARK_TARGET(0x80026778,0x80026794,ZZ_26650_128);
ZZ_MARK_TARGET(0x80026794,0x80026810,ZZ_26650_144);
ZZ_MARK_TARGET(0x80026810,0x8002681C,ZZ_26650_1C0);
ZZ_MARK_TARGET(0x8002681C,0x80026838,ZZ_26650_1CC);
ZZ_MARK_TARGET(0x80026838,0x80026850,ZZ_26650_1E8);
ZZ_MARK_TARGET(0x80026850,0x80026880,ZZ_26650_200);
ZZ_MARK_TARGET(0x80026880,0x8002688C,ZZ_26650_230);
ZZ_MARK_TARGET(0x8002688C,0x800268C4,ZZ_26650_23C);
ZZ_MARK_TARGET(0x800268C4,0x800268D0,ZZ_26650_274);
ZZ_MARK_TARGET(0x800268D0,0x800268D8,ZZ_26650_280);
ZZ_MARK_TARGET(0x800268D8,0x80026958,ZZ_26650_288);
ZZ_MARK_TARGET(0x80026958,0x800269C0,ZZ_26650_308);
ZZ_MARK_TARGET(0x800269C0,0x800269D8,ZZ_26650_370);
ZZ_MARK_TARGET(0x800269D8,0x800269E0,ZZ_26650_388);
ZZ_MARK_TARGET(0x800269E0,0x80026A18,ZZ_26650_390);
ZZ_MARK_TARGET(0x80026A18,0x80026A40,ZZ_26650_3C8);
